{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst session = require('express-session');\nconst cors = require('cors');\nconst cookieParser = require('cookie-parser');\nconst fs = require('fs');\nconst https = require('https');\nconst cookie = require('cookie');\nconst path = require('path');\nconst databaseLib = require('./lib/mogodb_lib');\nconst {\n  blockUnwantedPaths\n} = require('./lib/function_lib');\nconst createRootRouter = require('./router/rootRouters');\nconst createLoginRouter = require('./router/loginRouters');\nconst createProfileRouter = require('./router/profileRouters');\nconst createApiRouter = require('./router/apiRouters');\nconst createDepRouter = require('./router/depRouters');\nconst createStaffRouter = require('./router/staffRouters');\nconst createTeacherRouter = require('./router/teacherRoutes');\nconst createStudentRouter = require('./router/studentRouter');\nconst MongoStore = require('connect-mongo');\nconst WebSocket = require('ws');\n\n// ----------------------------------------------------------------\ndatabaseLib.connect().then(client => {\n  const app = express();\n  const privateKey = fs.readFileSync(path.join('.certificate', 'localhost.key'), 'utf8');\n  const certificate = fs.readFileSync(path.join('.certificate', 'localhost.crt'), 'utf8');\n  const credentials = {\n    key: privateKey,\n    cert: certificate\n  };\n  // ----------------------------------------------------------------\n  const port = 443; // port la 443 khong phai 433 dau\n  const secretKey = '5gB#2L1!8*1!0)$7vF@9';\n  const authenticationKey = Buffer.from(secretKey.padEnd(32, '0'), 'utf8').toString('hex');\n  // ----------------------------------------------------------------\n  // mongodb database name\n  if (!fs.existsSync('.downloads')) {\n    // Nếu thư mục không tồn tại, tạo thư mục mới\n    fs.mkdirSync('.downloads');\n  }\n  const name_global_databases = 'global';\n  // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  app.use(blockUnwantedPaths);\n  app.use(express.json({\n    limit: '10mb'\n  }));\n  app.use(express.urlencoded({\n    limit: '10mb',\n    extended: true\n  }));\n  app.use(cors({\n    origin: true,\n    credentials: true\n  }));\n  app.use(cookieParser());\n  app.use(session({\n    name: 'howtosavealife?',\n    // Đặt tên mới cho Session ID\n    secret: authenticationKey,\n    resave: false,\n    saveUninitialized: false,\n    store: MongoStore.create({\n      client,\n      dbName: name_global_databases,\n      crypto: {\n        secret: authenticationKey\n      }\n    }),\n    cookie: {\n      secure: true,\n      httpOnly: true,\n      sameSite: 'strict'\n    },\n    rolling: true\n  }));\n  app.use(express.json());\n  const parentDirectory = path.dirname(__dirname);\n  app.use(express.static(parentDirectory));\n  app.set('view engine', 'ejs');\n  app.set('views', path.join(parentDirectory, 'views'));\n  const httpsServer = https.createServer(credentials, app);\n  const wss = new WebSocket.Server({\n    server: httpsServer\n  });\n  // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  const rootRouter = createRootRouter(client, parentDirectory);\n  const loginRouters = createLoginRouter(client);\n  const profileRouter = createProfileRouter(client);\n  const apiRouter = createApiRouter(client, wss);\n  const depRouter = createDepRouter(client);\n  const teacherRouter = createTeacherRouter(client);\n  const staffRouter = createStaffRouter(client);\n  const studentRouter = createStudentRouter(client);\n  // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  app.use('/', rootRouter);\n  app.use('/login', loginRouters);\n  app.use('/profile', profileRouter);\n  app.use('/api', apiRouter);\n  app.use('/doankhoa', depRouter);\n  app.use('/giaovien', teacherRouter);\n  app.use('/bancansu', staffRouter);\n  app.use('/hocsinh', studentRouter);\n\n  // Xử lý đường link không có -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  app.get('*', async function (req, res) {\n    return res.sendStatus(404);\n  });\n  // // WEBSOCKET SPACE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  wss.on('connection', async (ws, req) => {\n    // Kiểm tra địa chỉ đích của kết nối WebSocket\n    if (req.url === '/howtosavealife?') {\n      // Gán id cho ws\n      if (req.headers.cookie) {\n        const cookie_seasion = cookie.parse(req.headers.cookie);\n        if ('howtosavealife?' in cookie_seasion) {\n          ws.id = cookieParser.signedCookie(cookie_seasion['howtosavealife?'], authenticationKey);\n          // Xử lý khi client gửi dữ liệu\n          ws.on('message', message => {\n            const messDecode = message.toString('utf-8');\n            if (console == 'logout') {\n              ws.close();\n            } else if (messDecode == 'ok ko e?') {\n              ws.send('Ok a');\n            } else if (messDecode.startsWith('anhiuem')) {\n              ws.actId = messDecode.slice(7);\n              ws.send('gotta!');\n            } else if (messDecode == 'clearID') {\n              delete ws.actId;\n            }\n          });\n\n          // Xử lý khi client đóng kết nối\n          ws.on('close', () => {});\n        } else {\n          ws.send('Ko a');\n          ws.close();\n        }\n      } else {\n        ws.send('Ko a');\n        ws.close();\n      }\n    } else {\n      console.log('SYSTEM | WEBSOCKET | Rejected WebSocket connection from:', ws.id);\n      ws.close();\n    }\n  });\n  // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  httpsServer.listen(port, () => {\n    console.log(`SYSTEM | LOG | Đang chạy server siu cấp vip pro đa vũ trụ ở https://localhost:${port}`);\n  });\n  // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n}).catch(error => {\n  console.log('SYSTEM | LOG | Error connecting to MongoDB:', error);\n  throw error;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","session","cors","cookieParser","fs","https","cookie","path","databaseLib","blockUnwantedPaths","createRootRouter","createLoginRouter","createProfileRouter","createApiRouter","createDepRouter","createStaffRouter","createTeacherRouter","createStudentRouter","MongoStore","WebSocket","connect","then","client","app","privateKey","readFileSync","join","certificate","credentials","key","cert","port","secretKey","authenticationKey","Buffer","from","padEnd","toString","existsSync","mkdirSync","name_global_databases","use","json","limit","urlencoded","extended","origin","name","secret","resave","saveUninitialized","store","create","dbName","crypto","secure","httpOnly","sameSite","rolling","parentDirectory","dirname","__dirname","static","set","httpsServer","createServer","wss","Server","server","rootRouter","loginRouters","profileRouter","apiRouter","depRouter","teacherRouter","staffRouter","studentRouter","get","req","res","sendStatus","on","ws","url","headers","cookie_seasion","parse","id","signedCookie","message","messDecode","console","close","send","startsWith","actId","slice","log","listen","catch","error"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\","sources":["server.js"],"sourcesContent":["const express = require('express');\r\nconst session = require('express-session');\r\nconst cors = require('cors');\r\nconst cookieParser = require('cookie-parser');\r\nconst fs = require('fs');\r\nconst https = require('https');\r\nconst cookie = require('cookie');\r\nconst path = require('path');\r\nconst databaseLib = require('./lib/mogodb_lib');\r\nconst { blockUnwantedPaths } = require('./lib/function_lib');\r\nconst createRootRouter = require('./router/rootRouters');\r\nconst createLoginRouter = require('./router/loginRouters');\r\nconst createProfileRouter = require('./router/profileRouters');\r\nconst createApiRouter = require('./router/apiRouters');\r\nconst createDepRouter = require('./router/depRouters');\r\nconst createStaffRouter = require('./router/staffRouters');\r\nconst createTeacherRouter = require('./router/teacherRoutes');\r\nconst createStudentRouter = require('./router/studentRouter');\r\n\r\nconst MongoStore = require('connect-mongo');\r\nconst WebSocket = require('ws');\r\n\r\n// ----------------------------------------------------------------\r\ndatabaseLib\r\n    .connect()\r\n    .then((client) => {\r\n        const app = express();\r\n        const privateKey = fs.readFileSync(path.join('.certificate', 'localhost.key'), 'utf8');\r\n        const certificate = fs.readFileSync(path.join('.certificate', 'localhost.crt'), 'utf8');\r\n        const credentials = { key: privateKey, cert: certificate };\r\n        // ----------------------------------------------------------------\r\n        const port = 443; // port la 443 khong phai 433 dau\r\n        const secretKey = '5gB#2L1!8*1!0)$7vF@9';\r\n        const authenticationKey = Buffer.from(secretKey.padEnd(32, '0'), 'utf8').toString('hex');\r\n        // ----------------------------------------------------------------\r\n        // mongodb database name\r\n        if (!fs.existsSync('.downloads')) {\r\n            // Nếu thư mục không tồn tại, tạo thư mục mới\r\n            fs.mkdirSync('.downloads');\r\n        }\r\n        const name_global_databases = 'global';\r\n        // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        app.use(blockUnwantedPaths);\r\n        app.use(express.json({ limit: '10mb' }));\r\n        app.use(express.urlencoded({ limit: '10mb', extended: true }));\r\n        app.use(cors({ origin: true, credentials: true }));\r\n        app.use(cookieParser());\r\n        app.use(\r\n            session({\r\n                name: 'howtosavealife?', // Đặt tên mới cho Session ID\r\n                secret: authenticationKey,\r\n                resave: false,\r\n                saveUninitialized: false,\r\n                store: MongoStore.create({\r\n                    client,\r\n                    dbName: name_global_databases,\r\n                    crypto: {\r\n                        secret: authenticationKey,\r\n                    },\r\n                }),\r\n                cookie: {\r\n                    secure: true,\r\n                    httpOnly: true,\r\n                    sameSite: 'strict',\r\n                },\r\n                rolling: true,\r\n            }),\r\n        );\r\n        app.use(express.json());\r\n        const parentDirectory = path.dirname(__dirname);\r\n        app.use(express.static(parentDirectory));\r\n        app.set('view engine', 'ejs');\r\n        app.set('views', path.join(parentDirectory, 'views'));\r\n        const httpsServer = https.createServer(credentials, app);\r\n        const wss = new WebSocket.Server({ server: httpsServer });\r\n        // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        const rootRouter = createRootRouter(client, parentDirectory);\r\n        const loginRouters = createLoginRouter(client);\r\n        const profileRouter = createProfileRouter(client);\r\n        const apiRouter = createApiRouter(client, wss);\r\n        const depRouter = createDepRouter(client);\r\n        const teacherRouter = createTeacherRouter(client);\r\n        const staffRouter = createStaffRouter(client);\r\n        const studentRouter = createStudentRouter(client);\r\n        // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        app.use('/', rootRouter);\r\n        app.use('/login', loginRouters);\r\n        app.use('/profile', profileRouter);\r\n        app.use('/api', apiRouter);\r\n        app.use('/doankhoa', depRouter);\r\n        app.use('/giaovien', teacherRouter);\r\n        app.use('/bancansu', staffRouter);\r\n        app.use('/hocsinh', studentRouter);\r\n\r\n        // Xử lý đường link không có -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        app.get('*', async function (req, res) {\r\n            return res.sendStatus(404);\r\n        });\r\n        // // WEBSOCKET SPACE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        wss.on('connection', async (ws, req) => {\r\n            // Kiểm tra địa chỉ đích của kết nối WebSocket\r\n            if (req.url === '/howtosavealife?') {\r\n                // Gán id cho ws\r\n                if (req.headers.cookie) {\r\n                    const cookie_seasion = cookie.parse(req.headers.cookie);\r\n                    if ('howtosavealife?' in cookie_seasion) {\r\n                        ws.id = cookieParser.signedCookie(cookie_seasion['howtosavealife?'], authenticationKey);\r\n                        // Xử lý khi client gửi dữ liệu\r\n                        ws.on('message', (message) => {\r\n                            const messDecode = message.toString('utf-8');\r\n                            if (console == 'logout') {\r\n                                ws.close();\r\n                            } else if (messDecode == 'ok ko e?') {\r\n                                ws.send('Ok a');\r\n                            } else if (messDecode.startsWith('anhiuem')) {\r\n                                ws.actId = messDecode.slice(7);\r\n                                ws.send('gotta!');\r\n                            } else if (messDecode == 'clearID') {\r\n                                delete ws.actId;\r\n                            }\r\n                        });\r\n\r\n                        // Xử lý khi client đóng kết nối\r\n                        ws.on('close', () => {});\r\n                    } else {\r\n                        ws.send('Ko a');\r\n                        ws.close();\r\n                    }\r\n                } else {\r\n                    ws.send('Ko a');\r\n                    ws.close();\r\n                }\r\n            } else {\r\n                console.log('SYSTEM | WEBSOCKET | Rejected WebSocket connection from:', ws.id);\r\n                ws.close();\r\n            }\r\n        });\r\n        // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n        httpsServer.listen(port, () => {\r\n            console.log(`SYSTEM | LOG | Đang chạy server siu cấp vip pro đa vũ trụ ở https://localhost:${port}`);\r\n        });\r\n        // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    })\r\n    .catch((error) => {\r\n        console.log('SYSTEM | LOG | Error connecting to MongoDB:', error);\r\n        throw error;\r\n    });\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1705240655666},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\lib\\\\mogodb_lib.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const {\n  ObjectId,\n  MongoClient,\n  ServerApiVersion\n} = require('mongodb');\nconst uri = 'mongodb+srv://binhminh19112003:Zr3uGIK4dCymOXON@6aesieunhan.sefjqcb.mongodb.net/?retryWrites=true&w=majority';\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true\n  }\n});\nconst name_global_databases = 'global';\nasync function connect() {\n  try {\n    await client.connect();\n    const checkFirst = await client.db(name_global_databases).collection('user_info').findOne({\n      _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n    });\n    if (!checkFirst) {\n      await client.db(name_global_databases).collection('user_info').insertOne({\n        _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\n        first_name: 'Đặt',\n        last_name: 'Chưa',\n        avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\n        power: {\n          1: true,\n          3: true,\n          4: true,\n          999: true\n        },\n        class: [],\n        displayName: 'Chưa Đặt',\n        email: '',\n        branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n      });\n    }\n    const checkFirst2 = await client.db(name_global_databases).collection('branchs').findOne({\n      _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n    });\n    if (!checkFirst2) {\n      await client.db(name_global_databases).collection('branchs').insertOne({\n        _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\n        name: 'Chưa đặt',\n        dep: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n      });\n    }\n  } catch (error) {\n    console.log('SYSTEM | ERROR | Error connecting to MongoDB:', error);\n    throw error;\n  }\n  return client;\n}\nmodule.exports = {\n  connect,\n  getClient: () => client,\n  getNameGlobal: () => name_global_databases\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3RJZCIsIk1vbmdvQ2xpZW50IiwiU2VydmVyQXBpVmVyc2lvbiIsInJlcXVpcmUiLCJ1cmkiLCJjbGllbnQiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJzZXJ2ZXJBcGkiLCJ2ZXJzaW9uIiwidjEiLCJzdHJpY3QiLCJkZXByZWNhdGlvbkVycm9ycyIsIm5hbWVfZ2xvYmFsX2RhdGFiYXNlcyIsImNvbm5lY3QiLCJjaGVja0ZpcnN0IiwiZGIiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsIl9pZCIsImNyZWF0ZUZyb21IZXhTdHJpbmciLCJpbnNlcnRPbmUiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwiYXZ0IiwicG93ZXIiLCJjbGFzcyIsImRpc3BsYXlOYW1lIiwiZW1haWwiLCJicmFuY2giLCJjaGVja0ZpcnN0MiIsIm5hbWUiLCJkZXAiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0Q2xpZW50IiwiZ2V0TmFtZUdsb2JhbCJdLCJzb3VyY2VSb290IjoiRDpcXHByb2plY3RcXHdlYlxcbmV3Q0RSTC0xXFxiYWNrZW5kXFxsaWJcXCIsInNvdXJjZXMiOlsibW9nb2RiX2xpYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE9iamVjdElkLCBNb25nb0NsaWVudCwgU2VydmVyQXBpVmVyc2lvbiB9ID0gcmVxdWlyZSgnbW9uZ29kYicpO1xyXG5jb25zdCB1cmkgPVxyXG4gICAgJ21vbmdvZGIrc3J2Oi8vYmluaG1pbmgxOTExMjAwMzpacjN1R0lLNGRDeW1PWE9OQDZhZXNpZXVuaGFuLnNlZmpxY2IubW9uZ29kYi5uZXQvP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSc7XHJcbmNvbnN0IGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIHtcclxuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcclxuICAgIHNlcnZlckFwaToge1xyXG4gICAgICAgIHZlcnNpb246IFNlcnZlckFwaVZlcnNpb24udjEsXHJcbiAgICAgICAgc3RyaWN0OiB0cnVlLFxyXG4gICAgICAgIGRlcHJlY2F0aW9uRXJyb3JzOiB0cnVlLFxyXG4gICAgfSxcclxufSk7XHJcbmNvbnN0IG5hbWVfZ2xvYmFsX2RhdGFiYXNlcyA9ICdnbG9iYWwnO1xyXG5hc3luYyBmdW5jdGlvbiBjb25uZWN0KCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBhd2FpdCBjbGllbnQuY29ubmVjdCgpO1xyXG4gICAgICAgIGNvbnN0IGNoZWNrRmlyc3QgPSBhd2FpdCBjbGllbnRcclxuICAgICAgICAgICAgLmRiKG5hbWVfZ2xvYmFsX2RhdGFiYXNlcylcclxuICAgICAgICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJfaW5mbycpXHJcbiAgICAgICAgICAgIC5maW5kT25lKHsgX2lkOiBPYmplY3RJZC5jcmVhdGVGcm9tSGV4U3RyaW5nKCc2NTA5ODVhMzQ1ZTJlODk2YjM3ZWZkNGYnKSB9KTtcclxuICAgICAgICBpZiAoIWNoZWNrRmlyc3QpIHtcclxuICAgICAgICAgICAgYXdhaXQgY2xpZW50XHJcbiAgICAgICAgICAgICAgICAuZGIobmFtZV9nbG9iYWxfZGF0YWJhc2VzKVxyXG4gICAgICAgICAgICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJfaW5mbycpXHJcbiAgICAgICAgICAgICAgICAuaW5zZXJ0T25lKHtcclxuICAgICAgICAgICAgICAgICAgICBfaWQ6IE9iamVjdElkLmNyZWF0ZUZyb21IZXhTdHJpbmcoJzY1MDk4NWEzNDVlMmU4OTZiMzdlZmQ0ZicpLFxyXG4gICAgICAgICAgICAgICAgICAgIGZpcnN0X25hbWU6ICfEkOG6t3QnLFxyXG4gICAgICAgICAgICAgICAgICAgIGxhc3RfbmFtZTogJ0NoxrBhJyxcclxuICAgICAgICAgICAgICAgICAgICBhdnQ6ICdodHRwczovL2kucGluaW1nLmNvbS8yMzZ4Lzg5LzA4LzNiLzg5MDgzYmJhNDA1NDVhNzJmYTE1MzIxYWY1ZmFiNzYwLS1jaGliaS1naXJsLXplcm8uanBnJyxcclxuICAgICAgICAgICAgICAgICAgICBwb3dlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAxOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA0OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA5OTk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBjbGFzczogW10sXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdDaMawYSDEkOG6t3QnLFxyXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICBicmFuY2g6IE9iamVjdElkLmNyZWF0ZUZyb21IZXhTdHJpbmcoJzY1MDk4NWEzNDVlMmU4OTZiMzdlZmQ0ZicpLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGNoZWNrRmlyc3QyID0gYXdhaXQgY2xpZW50XHJcbiAgICAgICAgICAgIC5kYihuYW1lX2dsb2JhbF9kYXRhYmFzZXMpXHJcbiAgICAgICAgICAgIC5jb2xsZWN0aW9uKCdicmFuY2hzJylcclxuICAgICAgICAgICAgLmZpbmRPbmUoeyBfaWQ6IE9iamVjdElkLmNyZWF0ZUZyb21IZXhTdHJpbmcoJzY1MDk4NWEzNDVlMmU4OTZiMzdlZmQ0ZicpIH0pO1xyXG4gICAgICAgIGlmICghY2hlY2tGaXJzdDIpIHtcclxuICAgICAgICAgICAgYXdhaXQgY2xpZW50XHJcbiAgICAgICAgICAgICAgICAuZGIobmFtZV9nbG9iYWxfZGF0YWJhc2VzKVxyXG4gICAgICAgICAgICAgICAgLmNvbGxlY3Rpb24oJ2JyYW5jaHMnKVxyXG4gICAgICAgICAgICAgICAgLmluc2VydE9uZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgX2lkOiBPYmplY3RJZC5jcmVhdGVGcm9tSGV4U3RyaW5nKCc2NTA5ODVhMzQ1ZTJlODk2YjM3ZWZkNGYnKSxcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQ2jGsGEgxJHhurd0JyxcclxuICAgICAgICAgICAgICAgICAgICBkZXA6IE9iamVjdElkLmNyZWF0ZUZyb21IZXhTdHJpbmcoJzY1MDk4NWEzNDVlMmU4OTZiMzdlZmQ0ZicpLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnU1lTVEVNIHwgRVJST1IgfCBFcnJvciBjb25uZWN0aW5nIHRvIE1vbmdvREI6JywgZXJyb3IpO1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNsaWVudDtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBjb25uZWN0LFxyXG4gICAgZ2V0Q2xpZW50OiAoKSA9PiBjbGllbnQsXHJcbiAgICBnZXROYW1lR2xvYmFsOiAoKSA9PiBuYW1lX2dsb2JhbF9kYXRhYmFzZXMsXHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxRQUFRO0VBQUVDLFdBQVc7RUFBRUM7QUFBaUIsQ0FBQyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ3RFLE1BQU1DLEdBQUcsR0FDTCw4R0FBOEc7QUFDbEgsTUFBTUMsTUFBTSxHQUFHLElBQUlKLFdBQVcsQ0FBQ0csR0FBRyxFQUFFO0VBQ2hDRSxlQUFlLEVBQUUsSUFBSTtFQUNyQkMsa0JBQWtCLEVBQUUsSUFBSTtFQUN4QkMsU0FBUyxFQUFFO0lBQ1BDLE9BQU8sRUFBRVAsZ0JBQWdCLENBQUNRLEVBQUU7SUFDNUJDLE1BQU0sRUFBRSxJQUFJO0lBQ1pDLGlCQUFpQixFQUFFO0VBQ3ZCO0FBQ0osQ0FBQyxDQUFDO0FBQ0YsTUFBTUMscUJBQXFCLEdBQUcsUUFBUTtBQUN0QyxlQUFlQyxPQUFPQSxDQUFBLEVBQUc7RUFDckIsSUFBSTtJQUNBLE1BQU1ULE1BQU0sQ0FBQ1MsT0FBTyxDQUFDLENBQUM7SUFDdEIsTUFBTUMsVUFBVSxHQUFHLE1BQU1WLE1BQU0sQ0FDMUJXLEVBQUUsQ0FBQ0gscUJBQXFCLENBQUMsQ0FDekJJLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FDdkJDLE9BQU8sQ0FBQztNQUFFQyxHQUFHLEVBQUVuQixRQUFRLENBQUNvQixtQkFBbUIsQ0FBQywwQkFBMEI7SUFBRSxDQUFDLENBQUM7SUFDL0UsSUFBSSxDQUFDTCxVQUFVLEVBQUU7TUFDYixNQUFNVixNQUFNLENBQ1BXLEVBQUUsQ0FBQ0gscUJBQXFCLENBQUMsQ0FDekJJLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FDdkJJLFNBQVMsQ0FBQztRQUNQRixHQUFHLEVBQUVuQixRQUFRLENBQUNvQixtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQztRQUM3REUsVUFBVSxFQUFFLEtBQUs7UUFDakJDLFNBQVMsRUFBRSxNQUFNO1FBQ2pCQyxHQUFHLEVBQUUsMEZBQTBGO1FBQy9GQyxLQUFLLEVBQUU7VUFDSCxDQUFDLEVBQUUsSUFBSTtVQUNQLENBQUMsRUFBRSxJQUFJO1VBQ1AsQ0FBQyxFQUFFLElBQUk7VUFDUCxHQUFHLEVBQUU7UUFDVCxDQUFDO1FBQ0RDLEtBQUssRUFBRSxFQUFFO1FBQ1RDLFdBQVcsRUFBRSxVQUFVO1FBQ3ZCQyxLQUFLLEVBQUUsRUFBRTtRQUNUQyxNQUFNLEVBQUU3QixRQUFRLENBQUNvQixtQkFBbUIsQ0FBQywwQkFBMEI7TUFDbkUsQ0FBQyxDQUFDO0lBQ1Y7SUFDQSxNQUFNVSxXQUFXLEdBQUcsTUFBTXpCLE1BQU0sQ0FDM0JXLEVBQUUsQ0FBQ0gscUJBQXFCLENBQUMsQ0FDekJJLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FDckJDLE9BQU8sQ0FBQztNQUFFQyxHQUFHLEVBQUVuQixRQUFRLENBQUNvQixtQkFBbUIsQ0FBQywwQkFBMEI7SUFBRSxDQUFDLENBQUM7SUFDL0UsSUFBSSxDQUFDVSxXQUFXLEVBQUU7TUFDZCxNQUFNekIsTUFBTSxDQUNQVyxFQUFFLENBQUNILHFCQUFxQixDQUFDLENBQ3pCSSxVQUFVLENBQUMsU0FBUyxDQUFDLENBQ3JCSSxTQUFTLENBQUM7UUFDUEYsR0FBRyxFQUFFbkIsUUFBUSxDQUFDb0IsbUJBQW1CLENBQUMsMEJBQTBCLENBQUM7UUFDN0RXLElBQUksRUFBRSxVQUFVO1FBQ2hCQyxHQUFHLEVBQUVoQyxRQUFRLENBQUNvQixtQkFBbUIsQ0FBQywwQkFBMEI7TUFDaEUsQ0FBQyxDQUFDO0lBQ1Y7RUFDSixDQUFDLENBQUMsT0FBT2EsS0FBSyxFQUFFO0lBQ1pDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtDQUErQyxFQUFFRixLQUFLLENBQUM7SUFDbkUsTUFBTUEsS0FBSztFQUNmO0VBQ0EsT0FBTzVCLE1BQU07QUFDakI7QUFFQStCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2J2QixPQUFPO0VBQ1B3QixTQUFTLEVBQUVBLENBQUEsS0FBTWpDLE1BQU07RUFDdkJrQyxhQUFhLEVBQUVBLENBQUEsS0FBTTFCO0FBQ3pCLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["ObjectId","MongoClient","ServerApiVersion","require","uri","client","useNewUrlParser","useUnifiedTopology","serverApi","version","v1","strict","deprecationErrors","name_global_databases","connect","checkFirst","db","collection","findOne","_id","createFromHexString","insertOne","first_name","last_name","avt","power","class","displayName","email","branch","checkFirst2","name","dep","error","console","log","module","exports","getClient","getNameGlobal"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\lib\\","sources":["mogodb_lib.js"],"sourcesContent":["const { ObjectId, MongoClient, ServerApiVersion } = require('mongodb');\r\nconst uri =\r\n    'mongodb+srv://binhminh19112003:Zr3uGIK4dCymOXON@6aesieunhan.sefjqcb.mongodb.net/?retryWrites=true&w=majority';\r\nconst client = new MongoClient(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    serverApi: {\r\n        version: ServerApiVersion.v1,\r\n        strict: true,\r\n        deprecationErrors: true,\r\n    },\r\n});\r\nconst name_global_databases = 'global';\r\nasync function connect() {\r\n    try {\r\n        await client.connect();\r\n        const checkFirst = await client\r\n            .db(name_global_databases)\r\n            .collection('user_info')\r\n            .findOne({ _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f') });\r\n        if (!checkFirst) {\r\n            await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .insertOne({\r\n                    _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\r\n                    first_name: 'Đặt',\r\n                    last_name: 'Chưa',\r\n                    avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\r\n                    power: {\r\n                        1: true,\r\n                        3: true,\r\n                        4: true,\r\n                        999: true,\r\n                    },\r\n                    class: [],\r\n                    displayName: 'Chưa Đặt',\r\n                    email: '',\r\n                    branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\r\n                });\r\n        }\r\n        const checkFirst2 = await client\r\n            .db(name_global_databases)\r\n            .collection('branchs')\r\n            .findOne({ _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f') });\r\n        if (!checkFirst2) {\r\n            await client\r\n                .db(name_global_databases)\r\n                .collection('branchs')\r\n                .insertOne({\r\n                    _id: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\r\n                    name: 'Chưa đặt',\r\n                    dep: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\r\n                });\r\n        }\r\n    } catch (error) {\r\n        console.log('SYSTEM | ERROR | Error connecting to MongoDB:', error);\r\n        throw error;\r\n    }\r\n    return client;\r\n}\r\n\r\nmodule.exports = {\r\n    connect,\r\n    getClient: () => client,\r\n    getNameGlobal: () => name_global_databases,\r\n};\r\n"],"mappings":"AAAA,MAAM;EAAEA,QAAQ;EAAEC,WAAW;EAAEC;AAAiB,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AACtE,MAAMC,GAAG,GACL,8GAA8G;AAClH,MAAMC,MAAM,GAAG,IAAIJ,WAAW,CAACG,GAAG,EAAE;EAChCE,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE,IAAI;EACxBC,SAAS,EAAE;IACPC,OAAO,EAAEP,gBAAgB,CAACQ,EAAE;IAC5BC,MAAM,EAAE,IAAI;IACZC,iBAAiB,EAAE;EACvB;AACJ,CAAC,CAAC;AACF,MAAMC,qBAAqB,GAAG,QAAQ;AACtC,eAAeC,OAAOA,CAAA,EAAG;EACrB,IAAI;IACA,MAAMT,MAAM,CAACS,OAAO,CAAC,CAAC;IACtB,MAAMC,UAAU,GAAG,MAAMV,MAAM,CAC1BW,EAAE,CAACH,qBAAqB,CAAC,CACzBI,UAAU,CAAC,WAAW,CAAC,CACvBC,OAAO,CAAC;MAAEC,GAAG,EAAEnB,QAAQ,CAACoB,mBAAmB,CAAC,0BAA0B;IAAE,CAAC,CAAC;IAC/E,IAAI,CAACL,UAAU,EAAE;MACb,MAAMV,MAAM,CACPW,EAAE,CAACH,qBAAqB,CAAC,CACzBI,UAAU,CAAC,WAAW,CAAC,CACvBI,SAAS,CAAC;QACPF,GAAG,EAAEnB,QAAQ,CAACoB,mBAAmB,CAAC,0BAA0B,CAAC;QAC7DE,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,MAAM;QACjBC,GAAG,EAAE,0FAA0F;QAC/FC,KAAK,EAAE;UACH,CAAC,EAAE,IAAI;UACP,CAAC,EAAE,IAAI;UACP,CAAC,EAAE,IAAI;UACP,GAAG,EAAE;QACT,CAAC;QACDC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,UAAU;QACvBC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE7B,QAAQ,CAACoB,mBAAmB,CAAC,0BAA0B;MACnE,CAAC,CAAC;IACV;IACA,MAAMU,WAAW,GAAG,MAAMzB,MAAM,CAC3BW,EAAE,CAACH,qBAAqB,CAAC,CACzBI,UAAU,CAAC,SAAS,CAAC,CACrBC,OAAO,CAAC;MAAEC,GAAG,EAAEnB,QAAQ,CAACoB,mBAAmB,CAAC,0BAA0B;IAAE,CAAC,CAAC;IAC/E,IAAI,CAACU,WAAW,EAAE;MACd,MAAMzB,MAAM,CACPW,EAAE,CAACH,qBAAqB,CAAC,CACzBI,UAAU,CAAC,SAAS,CAAC,CACrBI,SAAS,CAAC;QACPF,GAAG,EAAEnB,QAAQ,CAACoB,mBAAmB,CAAC,0BAA0B,CAAC;QAC7DW,IAAI,EAAE,UAAU;QAChBC,GAAG,EAAEhC,QAAQ,CAACoB,mBAAmB,CAAC,0BAA0B;MAChE,CAAC,CAAC;IACV;EACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEF,KAAK,CAAC;IACnE,MAAMA,KAAK;EACf;EACA,OAAO5B,MAAM;AACjB;AAEA+B,MAAM,CAACC,OAAO,GAAG;EACbvB,OAAO;EACPwB,SAAS,EAAEA,CAAA,KAAMjC,MAAM;EACvBkC,aAAa,EAAEA,CAAA,KAAM1B;AACzB,CAAC","ignoreList":[]}},"mtime":1705240655663},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\lib\\\\function_lib.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const server = require('./csdl_google_lib');\nconst nodemailer = require('nodemailer');\nconst ejs = require('ejs');\nconst fs = require('fs');\nconst {\n  getClient,\n  getNameGlobal\n} = require('./mogodb_lib');\nconst client = getClient();\nconst name_global_databases = getNameGlobal();\nconst path = require('path');\nconst archiver = require('archiver');\nconst {\n  v4: uuidv4\n} = require('uuid');\nconst PdfPrinter = require('pdfmake');\nconst util = require('util');\nconst bcrypt = require('bcrypt');\nconst saltRounds = 10;\n// ------------------------------------------------------------------------------------------------\n\n// Hàm để hash mật khẩu\nfunction hashPassword(password) {\n  return bcrypt.hashSync(password, saltRounds);\n}\n\n// Hàm để so sánh mật khẩu đã nhập với mật khẩu đã hash\nfunction comparePassword(inputPassword, hashedPassword) {\n  return bcrypt.compareSync(inputPassword, hashedPassword);\n}\nasync function sendEmail(password, email) {\n  try {\n    const transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: 'nguytuan04@gmail.com',\n        pass: 'unjwfrdskgezbmym'\n      }\n    });\n    const emailTXT = fs.readFileSync(path.join('src', 'emailTemplate', 'email.txt'), 'utf8');\n    const emailHTML = fs.readFileSync(path.join('src', 'emailTemplate', 'email.ejs'), 'utf8');\n    const mailOptions = {\n      from: '\"Quản lý điểm rèn luyện\" <nguytuan04@gmail.com>',\n      to: email,\n      subject: 'Yêu cầu đặt lại mật khẩu',\n      text: emailTXT.replace('${password}', password),\n      html: ejs.render(emailHTML, {\n        password: password\n      }),\n      attachments: [{\n        filename: 'image.png',\n        path: './src/img/sv_logo_dashboard.png',\n        cid: 'fs1120020a17090af28b00b00263fc1ef1aasm843048pjb10' //same cid value as in the html img src\n      }]\n    };\n    const info = await transporter.sendMail(mailOptions);\n    // Thực hiện các hoạt động hữu ích khác sau khi gửi email thành công.\n  } catch (error) {\n    console.log('SYSTEM | SEND_EMAIL | ', error);\n  }\n}\nasync function checkIfUserLoginAPI(req, res, next) {\n  const user = req.session.user;\n  if (!user) {\n    // Cookie không tồn tại, chặn truy cập\n    return res.sendStatus(403);\n  } else {\n    next();\n  }\n}\nasync function checkIfUserLoginRoute(req, res, next) {\n  const user = req.session.user;\n  if (!user) {\n    // Cookie không tồn tại, chặn truy cập\n    return res.redirect('/login');\n  } else {\n    const hslink = ['/hocsinh/nhapdiemdanhgia'];\n    const gvlink = ['/giaovien/quanlyquyen', '/giaovien/nhapdiemdanhgia', '/giaovien/danhsachbangdiem'];\n    const stf = ['/bancansu/nhapdiemdanhgia', '/bancansu/quanlihoatdong', '/bancansu/quanlihoatdong/danhgiahoatdong', '/bancansu/danhsachbangdiem'];\n    const dep = ['/doankhoa/quanlibomon', '/doankhoa/quanlilop', '/doankhoa/danhsachbangdiem', '/doankhoa/quanlicv', '/doankhoa/quanlihoatdongkhoa', '/doankhoa/danhsachsinhvien', '/doankhoa/nhapdiemdanhgia', '/doankhoa/thoihan'];\n    const fullPath = req.baseUrl + req.path;\n    if (hslink.includes(fullPath)) {\n      if (!user.pow[0]) {\n        return res.redirect('/');\n      }\n    }\n    if (gvlink.includes(fullPath)) {\n      if (!user.pow[1] && !user.pow[4]) {\n        return res.redirect('/');\n      }\n    }\n    if (stf.includes(fullPath)) {\n      if (!user.pow[0] && (!user.pow[1] || !user.pow[3])) {\n        return res.redirect('/');\n      }\n    }\n    if (dep.includes(fullPath)) {\n      if (!user.pow[8]) {\n        return res.redirect('/');\n      }\n    }\n    if (user.pow[1] && user.pow[4] || user.pow[8]) {\n      res.locals.isnotST = true;\n    }\n    if (user.pow[0]) {\n      res.locals.iskhoa = false;\n      res.locals.isbancansu = false;\n      res.locals.isgiaovien = false;\n      res.locals.isST = true;\n    } else if (user.pow[1] && user.pow[3] && !user.pow[4]) {\n      res.locals.iskhoa = false;\n      res.locals.isbancansu = true;\n      res.locals.isgiaovien = false;\n      res.locals.isST = false;\n    } else if (user.pow[1] && user.pow[3] && user.pow[4]) {\n      res.locals.iskhoa = false;\n      res.locals.isbancansu = false;\n      res.locals.isgiaovien = true;\n      res.locals.isST = false;\n    } else if (user.pow[8]) {\n      res.locals.iskhoa = true;\n      res.locals.isbancansu = false;\n      res.locals.isgiaovien = false;\n      res.locals.isST = false;\n    }\n    if (user.first == 'new_user') {\n      return res.redirect('/login/firstlogin');\n    } else if (user.first == 'otp') {\n      return res.redirect('/login/firstlogin?tile=ok');\n    } else {\n      const user_info = await client.db(name_global_databases).collection('user_info').findOne({\n        _id: user._id\n      }, {\n        projection: {\n          _id: 0,\n          avt: 1,\n          displayName: 1\n        }\n      });\n      if (user_info) {\n        res.locals.avt = user_info.avt;\n        res.locals.displayName = user_info.displayName;\n      } else {\n        res.locals.avt = '';\n        res.locals.displayName = '';\n      }\n    }\n    next();\n  }\n}\nasync function mark(table, user, mssv, data, marker, cls) {\n  // data = {\n  //   first: [],\n  //   second: [],\n  //   third: [],\n  //   fourth: [],\n  //   fifth: [],\n  //   img_ids: {},\n  //   total: 100,\n  // }\n\n  const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n    projection: {\n      _id: 0,\n      year: 1,\n      start_day: 1,\n      end_day: 1\n    }\n  });\n  let today = new Date().getTime();\n  let start_day = new Date(school_year.start_day).getTime();\n  let end_day = new Date(school_year.end_day).getTime();\n  let forever_day = new Date('2003-10-18').getTime(); // special date\n\n  // check if end mark time or not\n  if (start_day <= today && (today < end_day || end_day == forever_day)) {\n    // update old table if exist or insert new table\n    let update = {\n      mssv: mssv,\n      school_year: school_year.year,\n      first: data.first,\n      second: data.second,\n      third: data.third,\n      fourth: data.fourth,\n      fifth: data.fifth,\n      [`img_ids.global`]: data.img_ids,\n      total: data.total,\n      update_date: new Date()\n    };\n\n    // if table is stf_table - mark by staff members or teacher\n    if (table == '_stf_table') {\n      update.marker = marker.last_name + ' ' + marker.first_name;\n    }\n    await client.db(user.dep).collection(cls + table).createIndex({\n      mssv: 1\n    }, {\n      name: '_mssv'\n    });\n    await client.db(user.dep).collection(cls + table).updateOne({\n      mssv: mssv,\n      school_year: school_year.year\n    }, {\n      $set: update\n    }, {\n      upsert: true\n    });\n    const updated = await updateStudentTotalScore(table, school_year.year, mssv, data.total, marker.last_name + ' ' + marker.first_name);\n    if (updated) return 0;else return 2;\n  }\n  return 1;\n}\nasync function updateStudentTotalScore(table, school_year, mssv, total, marker) {\n  let step = await client.db(name_global_databases).collection('user_info').findOne({\n    _id: mssv\n  }, {\n    projection: {\n      _id: 0,\n      total_score: 1\n    }\n  });\n  if (!step.total_score[`${school_year}`]) step = 0;else step = step.total_score[`${school_year}`].step;\n\n  // update total score list for student\n  switch (table) {\n    case '_std_table':\n      if (step <= 1) {\n        await client.db(name_global_databases).collection('user_info').updateOne({\n          _id: mssv\n        }, {\n          $set: {\n            [`total_score.${school_year}.std`]: total,\n            [`total_score.${school_year}.step`]: 1\n          }\n        }, {\n          upsert: true\n        });\n        return true;\n      }\n      return false;\n    case '_stf_table':\n      if (step <= 2) {\n        await client.db(name_global_databases).collection('user_info').updateOne({\n          _id: mssv\n        }, {\n          $set: {\n            [`total_score.${school_year}.stf`]: total,\n            [`total_score.${school_year}.marker`]: marker,\n            [`total_score.${school_year}.step`]: 2\n          }\n        }, {\n          upsert: true\n        });\n        return true;\n      }\n      return false;\n    case '_dep_table':\n      await client.db(name_global_databases).collection('user_info').updateOne({\n        _id: mssv\n      }, {\n        $set: {\n          [`total_score.${school_year}.dep`]: total,\n          [`total_score.${school_year}.step`]: 3\n        }\n      }, {\n        upsert: true\n      });\n      return true;\n  }\n}\nasync function get_full_id(directoryPath, listName, listdep) {\n  let list_id = [];\n  try {\n    // Đọc các file trong thư mục một cách đồng bộ\n    for (let i = 0; i < listName.length; i++) {\n      list_id.push(await server.uploadFileToDrive(path.join(directoryPath, listName[i]), listdep[i]));\n    }\n    return list_id;\n  } catch (err) {\n    console.log('SYSTEM | GET_ID | ERR | ', err);\n  }\n}\nconst blockUnwantedPaths = (req, res, next) => {\n  // cai díu j day @rurimeiko làm lại đi // cái block user truy cập file\n  const unwantedPaths = ['/.vscode/', '/backend/', '/node_modules/', '/views/', 'package-lock.json', 'package.json', 'README.md'];\n  for (const path of unwantedPaths) {\n    if (req.url.includes(path)) {\n      return res.status(403).send('<h1 style=\"font-size: 46px;\">cut di bn oi, <a href=\"/404\">to mo</a> </a> lam d j? </h1> \\n<img src =\"https://cdn.discordapp.com/attachments/1128270011346210826/1128288383316271204/sticker.webp\"><iframe src=\"https://giphy.com/embed/qs4ll1FSxKnNHeSmom\" width=\"480\" height=\"475\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/DogeBONK-bonk-dobo-dogebonk-qs4ll1FSxKnNHeSmom\">via GIPHY</a></p>');\n    }\n  }\n  next();\n};\nfunction randomPassword() {\n  const upperCase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const number = '0123456789';\n  const allChars = upperCase + number;\n  return new Promise((resolve, reject) => {\n    try {\n      let password = '';\n      password += upperCase[Math.floor(Math.random() * upperCase.length)];\n      password += number[Math.floor(Math.random() * number.length)];\n      while (password.length < 6) {\n        password += allChars[Math.floor(Math.random() * allChars.length)];\n      }\n      resolve(password);\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n// Function to delete the file\nfunction deleteFile(filePath) {\n  fs.unlink(filePath, err => {\n    if (err) {\n      console.log('FUNCITON | LOG | Error deleting file:', err);\n    }\n  });\n}\n\n// Function to schedule the file deletion after 12 hours\nfunction scheduleFileDeletion(filePath) {\n  const twelveHours = 12 * 60 * 60 * 1000; // Convert 12 hours to milliseconds\n\n  setTimeout(() => {\n    deleteFile(filePath);\n  }, twelveHours);\n}\n\n// Function to sort name of student in list\nfunction sortStudentName(std_list) {\n  if (std_list) {\n    std_list.sort((a, b) => {\n      if (a && b) {\n        const lastFirstNameWordA = a.first_name.split(' ').pop();\n        const lastFirstNameWordB = b.first_name.split(' ').pop();\n        const firstNameComparison = lastFirstNameWordA.localeCompare(lastFirstNameWordB, 'vi', {\n          sensitivity: 'base'\n        });\n        if (firstNameComparison !== 0) {\n          return firstNameComparison;\n        }\n        return a.last_name.localeCompare(b.last_name, 'vi', {\n          sensitivity: 'base'\n        });\n      } else {\n        return std_list;\n      }\n    });\n    return std_list;\n  } else {\n    return std_list;\n  }\n}\n\n// xoá class\nasync function deleteClassApi(data, user) {\n  for (let i = 0; i < data.rm_cls.length; i++) {\n    await client.db(name_global_databases).collection('classes').deleteMany({\n      _id: data.rm_cls[i]\n    });\n    const collections = await client.db(user.dep).listCollections().toArray();\n\n    // Lặp qua từng collection và xoá nếu tên bắt đầu bằng \"lớp\"\n    for (const collection of collections) {\n      if (collection.name.startsWith(data.rm_cls[i])) {\n        await client.db(user.dep).collection(collection.name).drop();\n      }\n    }\n    // xoá học sinh đang thuộc class bên user_info (chuyển sang ghost account)\n    await client.db(name_global_databases).collection('user_info').deleteMany({\n      class: [data.rm_cls[i]],\n      'power.0': {\n        $exists: true\n      }\n    });\n    let info_search = `student_list.${user._id}`;\n    await client.db(user.dep).collection(`${data.rm_cls[i]}_activities`).updateMany({\n      [info_search]: {\n        $exists: true\n      }\n    }, {\n      $pull: {\n        student_list: user._id,\n        ai: user._id\n      }\n    });\n    await client.db(user.dep).collection('activities').updateMany({\n      [info_search]: {\n        $exists: true\n      }\n    }, {\n      $pull: {\n        student_list: user._id,\n        ai: user._id\n      }\n    });\n    await client.db(name_global_databases).collection('activities').updateMany({\n      [info_search]: {\n        $exists: true\n      }\n    }, {\n      $pull: {\n        student_list: user._id,\n        ai: user._id\n      }\n    });\n\n    // xoa lop khoi giao vien\n    await client.db(name_global_databases).collection('user_info').updateMany({\n      _id: data.rm_ts[i],\n      'power.1': {\n        $exists: true\n      },\n      'power.4': {\n        $exists: true\n      }\n    }, {\n      $pull: {\n        class: data.rm_cls[i]\n      }\n    });\n  }\n}\n\n// Function to create id for string (get all start letter of words and cobine together)\nfunction createId(str) {\n  let arr = str.toUpperCase().trim().split(' ');\n  let id = '';\n  for (let i of arr) {\n    id += i.charAt(0);\n  }\n  return id;\n}\nasync function createPdf(path_save, scorce) {\n  function sum(arr, start, end) {\n    if (arr[0] == 'N/A') {\n      return 'N/A';\n    }\n    // Đảm bảo start và end không vượt qua giới hạn của mảng\n    if (start < 0) start = 0;\n    if (end >= arr.length) end = arr.length - 1;\n\n    // Kiểm tra nếu start lớn hơn end hoặc mảng rỗng\n    if (start > end || arr.length === 0) return 0;\n\n    // Sử dụng slice và reduce để tính tổng\n    const subArray = arr.slice(start, end + 1);\n    const total = subArray.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    return total;\n  }\n  let name_zip;\n  let output;\n  let archive;\n  // if (scorce.length > 1) {\n  name_zip = uuidv4();\n  output = fs.createWriteStream(path.join(path_save, name_zip + '.zip'));\n  archive = archiver('zip', {\n    zlib: {\n      level: 2\n    } // Mức nén, có thể là 0-9 (9 là mức nén cao nhất)\n  });\n  if (!fs.existsSync(path.join(path_save, name_zip))) {\n    // Nếu thư mục không tồn tại, tạo thư mục mới\n    fs.mkdirSync(path.join(path_save, name_zip));\n  }\n  // }\n  const createPdfAsync = util.promisify((printer, pdfDoc, outputPath, callback) => {\n    pdfDoc.pipe(fs.createWriteStream(outputPath));\n    pdfDoc.end();\n    pdfDoc.on('end', () => {\n      callback();\n    });\n  });\n  for (let index = 0; index < scorce.length; index++) {\n    // Define font files\n    const std_score = scorce[index].std;\n    const stf_score = scorce[index].stf;\n    const dep_score = scorce[index].dep;\n    let namefile;\n    // if (scorce.length > 1) {\n    namefile = scorce[index].name + '-' + scorce[index].mssv + '.pdf';\n    // } else {\n    //   namefile = uuidv4() + \".pdf\";\n    // }\n    const fonts = {\n      Roboto: {\n        normal: 'backend/font/Roboto-Regular.ttf',\n        bold: 'backend/font/Roboto-Medium.ttf',\n        italics: 'backend/font/Roboto-Italic.ttf',\n        bolditalics: 'backend/font/Roboto-MediumItalic.ttf'\n      }\n    };\n    const printer = new PdfPrinter(fonts);\n    const docDefinition = {\n      content: [{\n        text: 'Bảng điểm cá nhân',\n        style: 'header'\n      }, {\n        columns: [{\n          text: 'Tên:',\n          bold: true\n        }, scorce[index].name]\n      }, {\n        columns: [{\n          text: 'MSSV:',\n          bold: true\n        }, scorce[index].mssv]\n      }, {\n        columns: [{\n          text: 'Lớp:',\n          bold: true\n        }, scorce[index].class]\n      }, {\n        columns: [{\n          text: 'Học kỳ:',\n          bold: true\n        }, scorce[index].year]\n      },\n      // \t\t{text: 'Defining column widths', style: 'subheader'},\n      // \t\t'Tables support the same width definitions as standard columns:',\n      {\n        style: 'tableExample',\n        table: {\n          widths: [230, '*', '*', '*', '*'],\n          body: [[{\n            text: 'Nội Dung Đánh Giá',\n            style: 'tableHeader'\n          }, {\n            text: 'Điểm Tối Đa',\n            style: 'tableHeader'\n          }, {\n            text: 'Điểm SV Tự Đánh Giá',\n            style: 'tableHeader'\n          }, {\n            text: 'Tập Thể Lớp',\n            style: 'tableHeader'\n          }, {\n            text: 'Khoa Đánh Giá',\n            style: 'tableHeader'\n          }], [{\n            text: '1. Đánh giá về ý thức học tập',\n            style: 'tableSubHeader'\n          }, '', '', '', ''], [{\n            text: 'a. Ý thức, thái độ trong học tập.\\n(Nghỉ học 1 buổi không phép trừ 1 điểm; đi muộn hoặc bỏ tiết mỗi 3 lần trừ 1 điểm)',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '7 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[0]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[0]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[0]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'b. Tham gia các câu lạc bộ học thuật; các hoạt động học thuật; hoạt động ngoại khóa; hoạt động nghiên cứu khoa học',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[1]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[1]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[1]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'c. Ý thức thực hiện tốt quy chế khi tham gia các kỳ thi, cuộc thi',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '4 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[2]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[2]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[2]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: '- Bị nhắc nhở khi thi, kiểm tra',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[2] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[2] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[2] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Bị lập biên bản xử lý khi thi và kiểm tra',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '0 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[2] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[2] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[2] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: 'd. Có tinh thần vượt khó, phấn đấu vươn lên trong học tập',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[3]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[3]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[3]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'đ. Đạt kết quả cao trong học tập',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '5 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[4]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[4]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[4]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: '- Loại Trung bình: Điểm số từ 2.0 đến 2.49',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[4] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[4] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[4] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Loại Khá: Điểm số từ 2.5 đến 3.19',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '3 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[4] == 3 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[4] == 3 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[4] == 3 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Loại Giỏi: Điểm số từ 3.2 đến 3.59',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '4 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[4] == 4 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[4] == 4 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[4] == 4 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Loại Xuất sắc: Điểm số từ 3.6 đến 4.0',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '5 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[4] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[4] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[4] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: 'Điểm tối đa nội dung 1 là',\n            style: 'tableSubHeaderTotal'\n          }, {\n            text: '20 điểm',\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(std_score, 0, 4)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(stf_score, 0, 4)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(dep_score, 0, 4)} điểm`,\n            style: 'tableSubPointTotal'\n          }], [{\n            text: '2. Đánh giá về ý thức và kết quả chấp hành nội quy, quy chế, quy định trong nhà trường',\n            style: 'tableSubHeader'\n          }, '', '', '', ''], [{\n            text: 'a. Ý thức chấp hành các văn bản chỉ đạo của ngành, của cơ quan chỉ đạo cấp trên được thực hiện trong nhà trường.',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '15 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[5]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[5]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[5]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: '- Bị nhắc nhở trong việc thực hiện',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '10 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[5] == 10 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[5] == 10 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[5] == 10 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Bị xử lý kỷ luật từ mức khiển trách trở lên',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '0 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[5] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[5] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[5] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: 'b. Ý thức chấp hành tốt, đầy đủ các nội quy, quy chế và các quy định khác của nhà trường',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '10 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[6]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[6]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[6]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: '- Bị nhắc nhở trong việc thực hiện',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '5 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[6] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[6] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[6] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Bị xử lý kỷ luật từ mức khiển trách trở lên',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '0 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[6] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[6] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[6] == 0 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: 'Điểm tối đa nội dung 2 là',\n            style: 'tableSubHeaderTotal'\n          }, {\n            text: '25 điểm',\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(std_score, 5, 6)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(stf_score, 5, 6)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(dep_score, 5, 6)} điểm`,\n            style: 'tableSubPointTotal'\n          }],\n          //////////////\n          [{\n            text: '3. Đánh giá về ý thức và kết quả tham gia các hoạt động chính trị, xã hội, văn hoá, văn nghệ, thể thao, phòng chống tội phạm và các tệ nạn xã hội',\n            style: 'tableSubHeader'\n          }, '', '', '', ''], [{\n            text: 'a. Tham gia tích cực các hoạt động chính trị, xã hội, văn hoá, văn nghệ, thể thao và có sự trưởng thành của bản thân qua các hoạt động rèn luyện:',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '8 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[7]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[7]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[7]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: '- Tích cực tham gia các hoạt động chính trị, xã hội, văn hoá, văn nghệ, thể thao',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '5 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[7] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[7] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[7] == 5 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Được kết nạp Đảng hoặc đạt danh hiệu Đoàn viên ưu tú hoặc đạt giải Nhất, Nhì, Ba trong các hoạt động chính trị, văn hóa, thể thao từ cấp trường trở lên',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '8 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[7] == 8 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[7] == 8 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[7] == 8 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: 'b. Tích cực tham gia các hoạt động công ích, tình nguyện, công tác xã hội',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '6 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[8]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[8]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[8]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'c. Tham gia tuyên truyền, phòng chống tội phạm, các tệ nạn xã hội và các hoạt động khác do lớp, khoa, trường, các đoàn thể, địa phương tổ chức',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '6 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[9]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[9]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[9]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'Điểm tối đa nội dung 3 là',\n            style: 'tableSubHeaderTotal'\n          }, {\n            text: '20 điểm',\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(std_score, 7, 9)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(stf_score, 7, 9)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(dep_score, 7, 9)} điểm`,\n            style: 'tableSubPointTotal'\n          }],\n          //////////\n          [{\n            text: '4. Đánh giá về ý thức công dân trong quan hệ cộng đồng',\n            style: 'tableSubHeader'\n          }, '', '', '', ''], [{\n            text: 'a. Chấp hành và tham gia tuyên truyền các chủ trương của Đảng, chính sách, pháp luật của Nhà nước tại nơi cư trú',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '10 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[10]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[10]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[10]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'b. Được ghi nhận, biểu dương, khen thưởng về tham gia các hoạt động xã hội',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '5 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[11]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[11]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[11]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'c. Có tinh thần chia sẻ, giúp đỡ bạn bè, người thân, người có hoàn cảnh khó khăn, hoạn nạn.',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '10 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[12]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[12]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[12]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'Điểm tối đa nội dung 4 là',\n            style: 'tableSubHeaderTotal'\n          }, {\n            text: '25 điểm',\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(std_score, 10, 12)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(stf_score, 10, 12)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(dep_score, 10, 12)} điểm`,\n            style: 'tableSubPointTotal'\n          }],\n          ////////\n          [{\n            text: '5. Đánh giá về ý thức và kết quả tham gia công tác phụ trách lớp, các đoàn thể, tổ chức trong nhà trường hoặc đạt được thành tích đặc biệt trong học tập, rèn luyện của học sinh, sinh viên',\n            style: 'tableSubHeader'\n          }, '', '', '', ''], [{\n            text: 'a. Tham gia tích cực vào phong trào của Lớp, Đoàn, Hội sinh viên và các công tác đoàn thể xã hội khác',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '3 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[13]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[13]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[13]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'b. Phát huy vai trò và hoàn thành tốt nhiệm vụ người cán bộ Chi đoàn, Lớp, Câu lạc bộ, Đội tự quản',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '3 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[14]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[14]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[14]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'c. Đảm nhiệm, đóng góp có hiệu quả cho công tác Đoàn trường, Hội sinh viên, Liên chi đoàn, Đội tự quản, Câu lạc bộ',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[15]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[15]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[15]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: 'd. Được biểu dương, khen thưởng vì có thành tích đặc biệt trong học tập, rèn luyện và các hoạt động khác',\n            style: 'tableSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: `${std_score[16]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${stf_score[16]} điểm`,\n            style: 'tablepoint'\n          }, {\n            text: `${dep_score[16]} điểm`,\n            style: 'tablepoint'\n          }], [{\n            text: '- Cấp khoa',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '1 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[16] == 1 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[16] == 1 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[16] == 1 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: '- Cấp trường trở lên',\n            style: 'tableSubSubSubHeader'\n          }, {\n            text: '2 điểm',\n            style: 'tablepoint'\n          }, {\n            text: std_score[16] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: stf_score[16] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }, {\n            text: dep_score[16] == 2 ? '•' : '',\n            style: 'tablepoint'\n          }], [{\n            text: 'Điểm tối đa nội dung 5 là',\n            style: 'tableSubHeaderTotal'\n          }, {\n            text: '10 điểm',\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(std_score, 13, 16)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(stf_score, 13, 16)} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${sum(dep_score, 13, 16)} điểm`,\n            style: 'tableSubPointTotal'\n          }], [{\n            text: 'Tổng điểm tối đa',\n            style: 'tableSubHeaderTotal'\n          }, {\n            text: '100 điểm',\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${std_score[17]} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${stf_score[17]} điểm`,\n            style: 'tableSubPointTotal'\n          }, {\n            text: `${dep_score[17]} điểm`,\n            style: 'tableSubPointTotal'\n          }]]\n        },\n        layout: {\n          fillColor: function (rowIndex, node, columnIndex) {\n            if (rowIndex === 0) {\n              // Màu cho hàng đầu tiên\n              return '#9fe6ff'; // Ví dụ: Màu đỏ\n            } else {\n              // Màu cho các hàng còn lại\n              return rowIndex % 2 === 0 ? '#e6e6e6' : null;\n            }\n          }\n        }\n      }, {\n        text: 'Ký tên',\n        style: 'subheader',\n        alignment: 'right',\n        margin: [0, 0, 50, 0]\n      }],\n      styles: {\n        header: {\n          fontSize: 21,\n          bold: true,\n          margin: [0, 0, 0, 10]\n        },\n        subheader: {\n          fontSize: 16,\n          bold: true,\n          margin: [0, 10, 0, 5]\n        },\n        tableExample: {\n          margin: [0, 5, 0, 15]\n        },\n        tableHeader: {\n          bold: true,\n          fontSize: 13,\n          color: 'black',\n          alignment: 'center'\n        },\n        tableSubHeader: {\n          bold: true,\n          fontSize: 12,\n          color: 'black'\n        },\n        tableSubHeaderTotal: {\n          bold: true,\n          fontSize: 12,\n          color: 'red'\n        },\n        tableSubPointTotal: {\n          bold: true,\n          fontSize: 12,\n          color: 'red',\n          alignment: 'center'\n        },\n        tableSubSubHeader: {\n          bold: true,\n          fontSize: 11,\n          color: 'black'\n        },\n        tableSubSubSubHeader: {\n          bold: true,\n          fontSize: 10,\n          color: 'black',\n          margin: [15, 0, 0, 0]\n        },\n        tablepoint: {\n          bold: true,\n          fontSize: 11,\n          color: 'black',\n          alignment: 'center'\n        }\n      },\n      defaultStyle: {\n        // alignment: 'justify'\n      }\n    };\n    options = {};\n    const pdfDoc = printer.createPdfKitDocument(docDefinition, options);\n    // if (scorce.length > 1) {\n    await createPdfAsync(printer, pdfDoc, path.join(path_save, name_zip, namefile));\n    // } else {\n    //   await createPdfAsync(printer, pdfDoc, path.join(path_save, namefile));\n    //   return namefile;\n    // }\n  }\n  // if (scorce.length > 1) {\n  archive.pipe(output);\n  archive.directory(path.join(path_save, name_zip), false);\n  archive.finalize();\n  // }\n\n  // if (scorce.length > 1) {\n  return new Promise((resolve, reject) => {\n    output.on('close', () => {\n      // console.log(\"Nén hoàn tất, kích thước:\", archive.pointer() + \" bytes\");\n      fs.rm(path.join(path_save, name_zip), {\n        recursive: true\n      }, err => {\n        if (err) {\n          console.log('CREATE_PDF | LOG | Lỗi khi xóa thư mục:', err);\n          reject(err);\n        } else {\n          // console.log(\"Đã xóa thư mục thành công.\");\n          resolve(name_zip + '.zip');\n        }\n      });\n    });\n    archive.on('error', err => {\n      console.log('CREATE_PDF | LOG | Lỗi khi nén');\n      reject(err);\n    });\n  });\n  // }\n}\nmodule.exports = {\n  sendEmail,\n  checkIfUserLoginAPI,\n  checkIfUserLoginRoute,\n  get_full_id,\n  blockUnwantedPaths,\n  mark,\n  updateStudentTotalScore,\n  randomPassword,\n  scheduleFileDeletion,\n  sortStudentName,\n  createId,\n  deleteClassApi,\n  createPdf,\n  comparePassword,\n  hashPassword\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["server","require","nodemailer","ejs","fs","getClient","getNameGlobal","client","name_global_databases","path","archiver","v4","uuidv4","PdfPrinter","util","bcrypt","saltRounds","hashPassword","password","hashSync","comparePassword","inputPassword","hashedPassword","compareSync","sendEmail","email","transporter","createTransport","service","auth","user","pass","emailTXT","readFileSync","join","emailHTML","mailOptions","from","to","subject","text","replace","html","render","attachments","filename","cid","info","sendMail","error","console","log","checkIfUserLoginAPI","req","res","next","session","sendStatus","checkIfUserLoginRoute","redirect","hslink","gvlink","stf","dep","fullPath","baseUrl","includes","pow","locals","isnotST","iskhoa","isbancansu","isgiaovien","isST","first","user_info","db","collection","findOne","_id","projection","avt","displayName","mark","table","mssv","data","marker","cls","school_year","year","start_day","end_day","today","Date","getTime","forever_day","update","second","third","fourth","fifth","img_ids","total","update_date","last_name","first_name","createIndex","name","updateOne","$set","upsert","updated","updateStudentTotalScore","step","total_score","get_full_id","directoryPath","listName","listdep","list_id","i","length","push","uploadFileToDrive","err","blockUnwantedPaths","unwantedPaths","url","status","send","randomPassword","upperCase","number","allChars","Promise","resolve","reject","Math","floor","random","deleteFile","filePath","unlink","scheduleFileDeletion","twelveHours","setTimeout","sortStudentName","std_list","sort","a","b","lastFirstNameWordA","split","pop","lastFirstNameWordB","firstNameComparison","localeCompare","sensitivity","deleteClassApi","rm_cls","deleteMany","collections","listCollections","toArray","startsWith","drop","class","$exists","info_search","updateMany","$pull","student_list","ai","rm_ts","createId","str","arr","toUpperCase","trim","id","charAt","createPdf","path_save","scorce","sum","start","end","subArray","slice","reduce","accumulator","currentValue","name_zip","output","archive","createWriteStream","zlib","level","existsSync","mkdirSync","createPdfAsync","promisify","printer","pdfDoc","outputPath","callback","pipe","on","index","std_score","std","stf_score","dep_score","namefile","fonts","Roboto","normal","bold","italics","bolditalics","docDefinition","content","style","columns","widths","body","layout","fillColor","rowIndex","node","columnIndex","alignment","margin","styles","header","fontSize","subheader","tableExample","tableHeader","color","tableSubHeader","tableSubHeaderTotal","tableSubPointTotal","tableSubSubHeader","tableSubSubSubHeader","tablepoint","defaultStyle","options","createPdfKitDocument","directory","finalize","rm","recursive","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\lib\\","sources":["function_lib.js"],"sourcesContent":["const server = require('./csdl_google_lib');\r\nconst nodemailer = require('nodemailer');\r\nconst ejs = require('ejs');\r\nconst fs = require('fs');\r\nconst { getClient, getNameGlobal } = require('./mogodb_lib');\r\nconst client = getClient();\r\nconst name_global_databases = getNameGlobal();\r\nconst path = require('path');\r\nconst archiver = require('archiver');\r\nconst { v4: uuidv4 } = require('uuid');\r\nconst PdfPrinter = require('pdfmake');\r\nconst util = require('util');\r\n\r\nconst bcrypt = require('bcrypt');\r\nconst saltRounds = 10;\r\n// ------------------------------------------------------------------------------------------------\r\n\r\n// Hàm để hash mật khẩu\r\nfunction hashPassword(password) {\r\n    return bcrypt.hashSync(password, saltRounds);\r\n}\r\n\r\n// Hàm để so sánh mật khẩu đã nhập với mật khẩu đã hash\r\nfunction comparePassword(inputPassword, hashedPassword) {\r\n    return bcrypt.compareSync(inputPassword, hashedPassword);\r\n}\r\n\r\nasync function sendEmail(password, email) {\r\n    try {\r\n        const transporter = nodemailer.createTransport({\r\n            service: 'gmail',\r\n            auth: {\r\n                user: 'nguytuan04@gmail.com',\r\n                pass: 'unjwfrdskgezbmym',\r\n            },\r\n        });\r\n\r\n        const emailTXT = fs.readFileSync(path.join('src', 'emailTemplate', 'email.txt'), 'utf8');\r\n        const emailHTML = fs.readFileSync(path.join('src', 'emailTemplate', 'email.ejs'), 'utf8');\r\n\r\n        const mailOptions = {\r\n            from: '\"Quản lý điểm rèn luyện\" <nguytuan04@gmail.com>',\r\n            to: email,\r\n            subject: 'Yêu cầu đặt lại mật khẩu',\r\n            text: emailTXT.replace('${password}', password),\r\n            html: ejs.render(emailHTML, { password: password }),\r\n            attachments: [\r\n                {\r\n                    filename: 'image.png',\r\n                    path: './src/img/sv_logo_dashboard.png',\r\n                    cid: 'fs1120020a17090af28b00b00263fc1ef1aasm843048pjb10', //same cid value as in the html img src\r\n                },\r\n            ],\r\n        };\r\n\r\n        const info = await transporter.sendMail(mailOptions);\r\n        // Thực hiện các hoạt động hữu ích khác sau khi gửi email thành công.\r\n    } catch (error) {\r\n        console.log('SYSTEM | SEND_EMAIL | ', error);\r\n    }\r\n}\r\n\r\nasync function checkIfUserLoginAPI(req, res, next) {\r\n    const user = req.session.user;\r\n    if (!user) {\r\n        // Cookie không tồn tại, chặn truy cập\r\n        return res.sendStatus(403);\r\n    } else {\r\n        next();\r\n    }\r\n}\r\n\r\nasync function checkIfUserLoginRoute(req, res, next) {\r\n    const user = req.session.user;\r\n    if (!user) {\r\n        // Cookie không tồn tại, chặn truy cập\r\n        return res.redirect('/login');\r\n    } else {\r\n        const hslink = ['/hocsinh/nhapdiemdanhgia'];\r\n        const gvlink = ['/giaovien/quanlyquyen', '/giaovien/nhapdiemdanhgia', '/giaovien/danhsachbangdiem'];\r\n        const stf = [\r\n            '/bancansu/nhapdiemdanhgia',\r\n            '/bancansu/quanlihoatdong',\r\n            '/bancansu/quanlihoatdong/danhgiahoatdong',\r\n            '/bancansu/danhsachbangdiem',\r\n        ];\r\n        const dep = [\r\n            '/doankhoa/quanlibomon',\r\n            '/doankhoa/quanlilop',\r\n            '/doankhoa/danhsachbangdiem',\r\n            '/doankhoa/quanlicv',\r\n            '/doankhoa/quanlihoatdongkhoa',\r\n            '/doankhoa/danhsachsinhvien',\r\n            '/doankhoa/nhapdiemdanhgia',\r\n            '/doankhoa/thoihan',\r\n        ];\r\n        const fullPath = req.baseUrl + req.path;\r\n        if (hslink.includes(fullPath)) {\r\n            if (!user.pow[0]) {\r\n                return res.redirect('/');\r\n            }\r\n        }\r\n        if (gvlink.includes(fullPath)) {\r\n            if (!user.pow[1] && !user.pow[4]) {\r\n                return res.redirect('/');\r\n            }\r\n        }\r\n        if (stf.includes(fullPath)) {\r\n            if (!user.pow[0] && (!user.pow[1] || !user.pow[3])) {\r\n                return res.redirect('/');\r\n            }\r\n        }\r\n        if (dep.includes(fullPath)) {\r\n            if (!user.pow[8]) {\r\n                return res.redirect('/');\r\n            }\r\n        }\r\n\r\n        if ((user.pow[1] && user.pow[4]) || user.pow[8]) {\r\n            res.locals.isnotST = true;\r\n        }\r\n        if (user.pow[0]) {\r\n            res.locals.iskhoa = false;\r\n            res.locals.isbancansu = false;\r\n            res.locals.isgiaovien = false;\r\n            res.locals.isST = true;\r\n        } else if (user.pow[1] && user.pow[3] && !user.pow[4]) {\r\n            res.locals.iskhoa = false;\r\n            res.locals.isbancansu = true;\r\n            res.locals.isgiaovien = false;\r\n            res.locals.isST = false;\r\n        } else if (user.pow[1] && user.pow[3] && user.pow[4]) {\r\n            res.locals.iskhoa = false;\r\n            res.locals.isbancansu = false;\r\n            res.locals.isgiaovien = true;\r\n            res.locals.isST = false;\r\n        } else if (user.pow[8]) {\r\n            res.locals.iskhoa = true;\r\n            res.locals.isbancansu = false;\r\n            res.locals.isgiaovien = false;\r\n            res.locals.isST = false;\r\n        }\r\n        if (user.first == 'new_user') {\r\n            return res.redirect('/login/firstlogin');\r\n        } else if (user.first == 'otp') {\r\n            return res.redirect('/login/firstlogin?tile=ok');\r\n        } else {\r\n            const user_info = await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .findOne({ _id: user._id }, { projection: { _id: 0, avt: 1, displayName: 1 } });\r\n            if (user_info) {\r\n                res.locals.avt = user_info.avt;\r\n                res.locals.displayName = user_info.displayName;\r\n            } else {\r\n                res.locals.avt = '';\r\n                res.locals.displayName = '';\r\n            }\r\n        }\r\n        next();\r\n    }\r\n}\r\n\r\nasync function mark(table, user, mssv, data, marker, cls) {\r\n    // data = {\r\n    //   first: [],\r\n    //   second: [],\r\n    //   third: [],\r\n    //   fourth: [],\r\n    //   fifth: [],\r\n    //   img_ids: {},\r\n    //   total: 100,\r\n    // }\r\n\r\n    const school_year = await client\r\n        .db(name_global_databases)\r\n        .collection('school_year')\r\n        .findOne(\r\n            {},\r\n            {\r\n                projection: {\r\n                    _id: 0,\r\n                    year: 1,\r\n                    start_day: 1,\r\n                    end_day: 1,\r\n                },\r\n            },\r\n        );\r\n    let today = new Date().getTime();\r\n    let start_day = new Date(school_year.start_day).getTime();\r\n    let end_day = new Date(school_year.end_day).getTime();\r\n    let forever_day = new Date('2003-10-18').getTime(); // special date\r\n\r\n    // check if end mark time or not\r\n    if (start_day <= today && (today < end_day || end_day == forever_day)) {\r\n        // update old table if exist or insert new table\r\n        let update = {\r\n            mssv: mssv,\r\n            school_year: school_year.year,\r\n            first: data.first,\r\n            second: data.second,\r\n            third: data.third,\r\n            fourth: data.fourth,\r\n            fifth: data.fifth,\r\n            [`img_ids.global`]: data.img_ids,\r\n            total: data.total,\r\n            update_date: new Date(),\r\n        };\r\n\r\n        // if table is stf_table - mark by staff members or teacher\r\n        if (table == '_stf_table') {\r\n            update.marker = marker.last_name + ' ' + marker.first_name;\r\n        }\r\n\r\n        await client\r\n            .db(user.dep)\r\n            .collection(cls + table)\r\n            .createIndex(\r\n                {\r\n                    mssv: 1,\r\n                },\r\n                {\r\n                    name: '_mssv',\r\n                },\r\n            );\r\n\r\n        await client\r\n            .db(user.dep)\r\n            .collection(cls + table)\r\n            .updateOne(\r\n                {\r\n                    mssv: mssv,\r\n                    school_year: school_year.year,\r\n                },\r\n                {\r\n                    $set: update,\r\n                },\r\n                { upsert: true },\r\n            );\r\n\r\n        const updated = await updateStudentTotalScore(\r\n            table,\r\n            school_year.year,\r\n            mssv,\r\n            data.total,\r\n            marker.last_name + ' ' + marker.first_name,\r\n        );\r\n\r\n        if (updated) return 0;\r\n        else return 2;\r\n    }\r\n    return 1;\r\n}\r\n\r\nasync function updateStudentTotalScore(table, school_year, mssv, total, marker) {\r\n    let step = await client\r\n        .db(name_global_databases)\r\n        .collection('user_info')\r\n        .findOne(\r\n            {\r\n                _id: mssv,\r\n            },\r\n            {\r\n                projection: {\r\n                    _id: 0,\r\n                    total_score: 1,\r\n                },\r\n            },\r\n        );\r\n\r\n    if (!step.total_score[`${school_year}`]) step = 0;\r\n    else step = step.total_score[`${school_year}`].step;\r\n\r\n    // update total score list for student\r\n    switch (table) {\r\n        case '_std_table':\r\n            if (step <= 1) {\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .updateOne(\r\n                        {\r\n                            _id: mssv,\r\n                        },\r\n                        {\r\n                            $set: {\r\n                                [`total_score.${school_year}.std`]: total,\r\n                                [`total_score.${school_year}.step`]: 1,\r\n                            },\r\n                        },\r\n                        {\r\n                            upsert: true,\r\n                        },\r\n                    );\r\n                return true;\r\n            }\r\n            return false;\r\n        case '_stf_table':\r\n            if (step <= 2) {\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .updateOne(\r\n                        {\r\n                            _id: mssv,\r\n                        },\r\n                        {\r\n                            $set: {\r\n                                [`total_score.${school_year}.stf`]: total,\r\n                                [`total_score.${school_year}.marker`]: marker,\r\n                                [`total_score.${school_year}.step`]: 2,\r\n                            },\r\n                        },\r\n                        {\r\n                            upsert: true,\r\n                        },\r\n                    );\r\n                return true;\r\n            }\r\n            return false;\r\n        case '_dep_table':\r\n            await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .updateOne(\r\n                    {\r\n                        _id: mssv,\r\n                    },\r\n                    {\r\n                        $set: {\r\n                            [`total_score.${school_year}.dep`]: total,\r\n                            [`total_score.${school_year}.step`]: 3,\r\n                        },\r\n                    },\r\n                    {\r\n                        upsert: true,\r\n                    },\r\n                );\r\n            return true;\r\n    }\r\n}\r\n\r\nasync function get_full_id(directoryPath, listName, listdep) {\r\n    let list_id = [];\r\n    try {\r\n        // Đọc các file trong thư mục một cách đồng bộ\r\n        for (let i = 0; i < listName.length; i++) {\r\n            list_id.push(await server.uploadFileToDrive(path.join(directoryPath, listName[i]), listdep[i]));\r\n        }\r\n        return list_id;\r\n    } catch (err) {\r\n        console.log('SYSTEM | GET_ID | ERR | ', err);\r\n    }\r\n}\r\n\r\nconst blockUnwantedPaths = (req, res, next) => {\r\n    // cai díu j day @rurimeiko làm lại đi // cái block user truy cập file\r\n    const unwantedPaths = [\r\n        '/.vscode/',\r\n        '/backend/',\r\n        '/node_modules/',\r\n        '/views/',\r\n        'package-lock.json',\r\n        'package.json',\r\n        'README.md',\r\n    ];\r\n    for (const path of unwantedPaths) {\r\n        if (req.url.includes(path)) {\r\n            return res\r\n                .status(403)\r\n                .send(\r\n                    '<h1 style=\"font-size: 46px;\">cut di bn oi, <a href=\"/404\">to mo</a> </a> lam d j? </h1> \\n<img src =\"https://cdn.discordapp.com/attachments/1128270011346210826/1128288383316271204/sticker.webp\"><iframe src=\"https://giphy.com/embed/qs4ll1FSxKnNHeSmom\" width=\"480\" height=\"475\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/DogeBONK-bonk-dobo-dogebonk-qs4ll1FSxKnNHeSmom\">via GIPHY</a></p>',\r\n                );\r\n        }\r\n    }\r\n    next();\r\n};\r\n\r\nfunction randomPassword() {\r\n    const upperCase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const number = '0123456789';\r\n    const allChars = upperCase + number;\r\n\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let password = '';\r\n            password += upperCase[Math.floor(Math.random() * upperCase.length)];\r\n            password += number[Math.floor(Math.random() * number.length)];\r\n\r\n            while (password.length < 6) {\r\n                password += allChars[Math.floor(Math.random() * allChars.length)];\r\n            }\r\n            resolve(password);\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n\r\n// Function to delete the file\r\nfunction deleteFile(filePath) {\r\n    fs.unlink(filePath, (err) => {\r\n        if (err) {\r\n            console.log('FUNCITON | LOG | Error deleting file:', err);\r\n        }\r\n    });\r\n}\r\n\r\n// Function to schedule the file deletion after 12 hours\r\nfunction scheduleFileDeletion(filePath) {\r\n    const twelveHours = 12 * 60 * 60 * 1000; // Convert 12 hours to milliseconds\r\n\r\n    setTimeout(() => {\r\n        deleteFile(filePath);\r\n    }, twelveHours);\r\n}\r\n\r\n// Function to sort name of student in list\r\nfunction sortStudentName(std_list) {\r\n    if (std_list) {\r\n        std_list.sort((a, b) => {\r\n            if (a && b) {\r\n                const lastFirstNameWordA = a.first_name.split(' ').pop();\r\n                const lastFirstNameWordB = b.first_name.split(' ').pop();\r\n\r\n                const firstNameComparison = lastFirstNameWordA.localeCompare(lastFirstNameWordB, 'vi', {\r\n                    sensitivity: 'base',\r\n                });\r\n                if (firstNameComparison !== 0) {\r\n                    return firstNameComparison;\r\n                }\r\n\r\n                return a.last_name.localeCompare(b.last_name, 'vi', {\r\n                    sensitivity: 'base',\r\n                });\r\n            } else {\r\n                return std_list;\r\n            }\r\n        });\r\n        return std_list;\r\n    } else {\r\n        return std_list;\r\n    }\r\n}\r\n\r\n// xoá class\r\nasync function deleteClassApi(data, user) {\r\n    for (let i = 0; i < data.rm_cls.length; i++) {\r\n        await client.db(name_global_databases).collection('classes').deleteMany({ _id: data.rm_cls[i] });\r\n        const collections = await client.db(user.dep).listCollections().toArray();\r\n\r\n        // Lặp qua từng collection và xoá nếu tên bắt đầu bằng \"lớp\"\r\n        for (const collection of collections) {\r\n            if (collection.name.startsWith(data.rm_cls[i])) {\r\n                await client.db(user.dep).collection(collection.name).drop();\r\n            }\r\n        }\r\n        // xoá học sinh đang thuộc class bên user_info (chuyển sang ghost account)\r\n        await client\r\n            .db(name_global_databases)\r\n            .collection('user_info')\r\n            .deleteMany({\r\n                class: [data.rm_cls[i]],\r\n                'power.0': { $exists: true },\r\n            });\r\n\r\n        let info_search = `student_list.${user._id}`;\r\n        await client\r\n            .db(user.dep)\r\n            .collection(`${data.rm_cls[i]}_activities`)\r\n            .updateMany(\r\n                {\r\n                    [info_search]: { $exists: true },\r\n                },\r\n                {\r\n                    $pull: { student_list: user._id, ai: user._id },\r\n                },\r\n            );\r\n\r\n        await client\r\n            .db(user.dep)\r\n            .collection('activities')\r\n            .updateMany(\r\n                {\r\n                    [info_search]: { $exists: true },\r\n                },\r\n                {\r\n                    $pull: { student_list: user._id, ai: user._id },\r\n                },\r\n            );\r\n\r\n        await client\r\n            .db(name_global_databases)\r\n            .collection('activities')\r\n            .updateMany(\r\n                {\r\n                    [info_search]: { $exists: true },\r\n                },\r\n                {\r\n                    $pull: { student_list: user._id, ai: user._id },\r\n                },\r\n            );\r\n\r\n        // xoa lop khoi giao vien\r\n        await client\r\n            .db(name_global_databases)\r\n            .collection('user_info')\r\n            .updateMany(\r\n                {\r\n                    _id: data.rm_ts[i],\r\n                    'power.1': { $exists: true },\r\n                    'power.4': { $exists: true },\r\n                },\r\n                {\r\n                    $pull: { class: data.rm_cls[i] },\r\n                },\r\n            );\r\n    }\r\n}\r\n\r\n// Function to create id for string (get all start letter of words and cobine together)\r\nfunction createId(str) {\r\n    let arr = str.toUpperCase().trim().split(' ');\r\n    let id = '';\r\n    for (let i of arr) {\r\n        id += i.charAt(0);\r\n    }\r\n    return id;\r\n}\r\n\r\nasync function createPdf(path_save, scorce) {\r\n    function sum(arr, start, end) {\r\n        if (arr[0] == 'N/A') {\r\n            return 'N/A';\r\n        }\r\n        // Đảm bảo start và end không vượt qua giới hạn của mảng\r\n        if (start < 0) start = 0;\r\n        if (end >= arr.length) end = arr.length - 1;\r\n\r\n        // Kiểm tra nếu start lớn hơn end hoặc mảng rỗng\r\n        if (start > end || arr.length === 0) return 0;\r\n\r\n        // Sử dụng slice và reduce để tính tổng\r\n        const subArray = arr.slice(start, end + 1);\r\n        const total = subArray.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n\r\n        return total;\r\n    }\r\n    let name_zip;\r\n    let output;\r\n    let archive;\r\n    // if (scorce.length > 1) {\r\n    name_zip = uuidv4();\r\n    output = fs.createWriteStream(path.join(path_save, name_zip + '.zip'));\r\n    archive = archiver('zip', {\r\n        zlib: { level: 2 }, // Mức nén, có thể là 0-9 (9 là mức nén cao nhất)\r\n    });\r\n    if (!fs.existsSync(path.join(path_save, name_zip))) {\r\n        // Nếu thư mục không tồn tại, tạo thư mục mới\r\n        fs.mkdirSync(path.join(path_save, name_zip));\r\n    }\r\n    // }\r\n    const createPdfAsync = util.promisify((printer, pdfDoc, outputPath, callback) => {\r\n        pdfDoc.pipe(fs.createWriteStream(outputPath));\r\n        pdfDoc.end();\r\n        pdfDoc.on('end', () => {\r\n            callback();\r\n        });\r\n    });\r\n    for (let index = 0; index < scorce.length; index++) {\r\n        // Define font files\r\n        const std_score = scorce[index].std;\r\n        const stf_score = scorce[index].stf;\r\n        const dep_score = scorce[index].dep;\r\n        let namefile;\r\n        // if (scorce.length > 1) {\r\n        namefile = scorce[index].name + '-' + scorce[index].mssv + '.pdf';\r\n        // } else {\r\n        //   namefile = uuidv4() + \".pdf\";\r\n        // }\r\n        const fonts = {\r\n            Roboto: {\r\n                normal: 'backend/font/Roboto-Regular.ttf',\r\n                bold: 'backend/font/Roboto-Medium.ttf',\r\n                italics: 'backend/font/Roboto-Italic.ttf',\r\n                bolditalics: 'backend/font/Roboto-MediumItalic.ttf',\r\n            },\r\n        };\r\n        const printer = new PdfPrinter(fonts);\r\n\r\n        const docDefinition = {\r\n            content: [\r\n                { text: 'Bảng điểm cá nhân', style: 'header' },\r\n                {\r\n                    columns: [{ text: 'Tên:', bold: true }, scorce[index].name],\r\n                },\r\n                {\r\n                    columns: [{ text: 'MSSV:', bold: true }, scorce[index].mssv],\r\n                },\r\n                {\r\n                    columns: [{ text: 'Lớp:', bold: true }, scorce[index].class],\r\n                },\r\n                {\r\n                    columns: [{ text: 'Học kỳ:', bold: true }, scorce[index].year],\r\n                },\r\n\r\n                // \t\t{text: 'Defining column widths', style: 'subheader'},\r\n                // \t\t'Tables support the same width definitions as standard columns:',\r\n                {\r\n                    style: 'tableExample',\r\n                    table: {\r\n                        widths: [230, '*', '*', '*', '*'],\r\n                        body: [\r\n                            [\r\n                                { text: 'Nội Dung Đánh Giá', style: 'tableHeader' },\r\n                                { text: 'Điểm Tối Đa', style: 'tableHeader' },\r\n                                { text: 'Điểm SV Tự Đánh Giá', style: 'tableHeader' },\r\n                                { text: 'Tập Thể Lớp', style: 'tableHeader' },\r\n                                { text: 'Khoa Đánh Giá', style: 'tableHeader' },\r\n                            ],\r\n                            [{ text: '1. Đánh giá về ý thức học tập', style: 'tableSubHeader' }, '', '', '', ''],\r\n                            [\r\n                                {\r\n                                    text: 'a. Ý thức, thái độ trong học tập.\\n(Nghỉ học 1 buổi không phép trừ 1 điểm; đi muộn hoặc bỏ tiết mỗi 3 lần trừ 1 điểm)',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '7 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[0]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[0]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[0]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'b. Tham gia các câu lạc bộ học thuật; các hoạt động học thuật; hoạt động ngoại khóa; hoạt động nghiên cứu khoa học',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[1]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[1]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[1]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'c. Ý thức thực hiện tốt quy chế khi tham gia các kỳ thi, cuộc thi',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '4 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[2]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[2]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[2]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: '- Bị nhắc nhở khi thi, kiểm tra', style: 'tableSubSubSubHeader' },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: std_score[2] == 2 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[2] == 2 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[2] == 2 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: '- Bị lập biên bản xử lý khi thi và kiểm tra',\r\n                                    style: 'tableSubSubSubHeader',\r\n                                },\r\n                                { text: '0 điểm', style: 'tablepoint' },\r\n                                { text: std_score[2] == 0 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[2] == 0 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[2] == 0 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'd. Có tinh thần vượt khó, phấn đấu vươn lên trong học tập',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[3]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[3]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[3]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: 'đ. Đạt kết quả cao trong học tập', style: 'tableSubSubHeader' },\r\n                                { text: '5 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[4]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[4]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[4]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                {\r\n                                    text: '- Loại Trung bình: Điểm số từ 2.0 đến 2.49',\r\n                                    style: 'tableSubSubSubHeader',\r\n                                },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: std_score[4] == 2 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[4] == 2 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[4] == 2 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                { text: '- Loại Khá: Điểm số từ 2.5 đến 3.19', style: 'tableSubSubSubHeader' },\r\n                                { text: '3 điểm', style: 'tablepoint' },\r\n                                { text: std_score[4] == 3 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[4] == 3 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[4] == 3 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                { text: '- Loại Giỏi: Điểm số từ 3.2 đến 3.59', style: 'tableSubSubSubHeader' },\r\n                                { text: '4 điểm', style: 'tablepoint' },\r\n                                { text: std_score[4] == 4 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[4] == 4 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[4] == 4 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: '- Loại Xuất sắc: Điểm số từ 3.6 đến 4.0', style: 'tableSubSubSubHeader' },\r\n                                { text: '5 điểm', style: 'tablepoint' },\r\n                                { text: std_score[4] == 5 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[4] == 5 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[4] == 5 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: 'Điểm tối đa nội dung 1 là', style: 'tableSubHeaderTotal' },\r\n                                { text: '20 điểm', style: 'tableSubPointTotal' },\r\n                                { text: `${sum(std_score, 0, 4)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(stf_score, 0, 4)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(dep_score, 0, 4)} điểm`, style: 'tableSubPointTotal' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: '2. Đánh giá về ý thức và kết quả chấp hành nội quy, quy chế, quy định trong nhà trường',\r\n                                    style: 'tableSubHeader',\r\n                                },\r\n                                '',\r\n                                '',\r\n                                '',\r\n                                '',\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'a. Ý thức chấp hành các văn bản chỉ đạo của ngành, của cơ quan chỉ đạo cấp trên được thực hiện trong nhà trường.',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '15 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[5]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[5]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[5]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: '- Bị nhắc nhở trong việc thực hiện', style: 'tableSubSubSubHeader' },\r\n                                { text: '10 điểm', style: 'tablepoint' },\r\n                                { text: std_score[5] == 10 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[5] == 10 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[5] == 10 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: '- Bị xử lý kỷ luật từ mức khiển trách trở lên',\r\n                                    style: 'tableSubSubSubHeader',\r\n                                },\r\n                                { text: '0 điểm', style: 'tablepoint' },\r\n                                { text: std_score[5] == 0 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[5] == 0 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[5] == 0 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                {\r\n                                    text: 'b. Ý thức chấp hành tốt, đầy đủ các nội quy, quy chế và các quy định khác của nhà trường',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '10 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[6]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[6]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[6]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: '- Bị nhắc nhở trong việc thực hiện', style: 'tableSubSubSubHeader' },\r\n                                { text: '5 điểm', style: 'tablepoint' },\r\n                                { text: std_score[6] == 5 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[6] == 5 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[6] == 5 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: '- Bị xử lý kỷ luật từ mức khiển trách trở lên',\r\n                                    style: 'tableSubSubSubHeader',\r\n                                },\r\n                                { text: '0 điểm', style: 'tablepoint' },\r\n                                { text: std_score[6] == 0 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[6] == 0 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[6] == 0 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: 'Điểm tối đa nội dung 2 là', style: 'tableSubHeaderTotal' },\r\n                                { text: '25 điểm', style: 'tableSubPointTotal' },\r\n                                { text: `${sum(std_score, 5, 6)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(stf_score, 5, 6)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(dep_score, 5, 6)} điểm`, style: 'tableSubPointTotal' },\r\n                            ],\r\n\r\n                            //////////////\r\n                            [\r\n                                {\r\n                                    text: '3. Đánh giá về ý thức và kết quả tham gia các hoạt động chính trị, xã hội, văn hoá, văn nghệ, thể thao, phòng chống tội phạm và các tệ nạn xã hội',\r\n                                    style: 'tableSubHeader',\r\n                                },\r\n                                '',\r\n                                '',\r\n                                '',\r\n                                '',\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'a. Tham gia tích cực các hoạt động chính trị, xã hội, văn hoá, văn nghệ, thể thao và có sự trưởng thành của bản thân qua các hoạt động rèn luyện:',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '8 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[7]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[7]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[7]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: '- Tích cực tham gia các hoạt động chính trị, xã hội, văn hoá, văn nghệ, thể thao',\r\n                                    style: 'tableSubSubSubHeader',\r\n                                },\r\n                                { text: '5 điểm', style: 'tablepoint' },\r\n                                { text: std_score[7] == 5 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[7] == 5 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[7] == 5 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: '- Được kết nạp Đảng hoặc đạt danh hiệu Đoàn viên ưu tú hoặc đạt giải Nhất, Nhì, Ba trong các hoạt động chính trị, văn hóa, thể thao từ cấp trường trở lên',\r\n                                    style: 'tableSubSubSubHeader',\r\n                                },\r\n                                { text: '8 điểm', style: 'tablepoint' },\r\n                                { text: std_score[7] == 8 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[7] == 8 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[7] == 8 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                {\r\n                                    text: 'b. Tích cực tham gia các hoạt động công ích, tình nguyện, công tác xã hội',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '6 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[8]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[8]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[8]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'c. Tham gia tuyên truyền, phòng chống tội phạm, các tệ nạn xã hội và các hoạt động khác do lớp, khoa, trường, các đoàn thể, địa phương tổ chức',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '6 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[9]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[9]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[9]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                { text: 'Điểm tối đa nội dung 3 là', style: 'tableSubHeaderTotal' },\r\n                                { text: '20 điểm', style: 'tableSubPointTotal' },\r\n                                { text: `${sum(std_score, 7, 9)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(stf_score, 7, 9)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(dep_score, 7, 9)} điểm`, style: 'tableSubPointTotal' },\r\n                            ],\r\n                            //////////\r\n                            [\r\n                                {\r\n                                    text: '4. Đánh giá về ý thức công dân trong quan hệ cộng đồng',\r\n                                    style: 'tableSubHeader',\r\n                                },\r\n                                '',\r\n                                '',\r\n                                '',\r\n                                '',\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'a. Chấp hành và tham gia tuyên truyền các chủ trương của Đảng, chính sách, pháp luật của Nhà nước tại nơi cư trú',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '10 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[10]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[10]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[10]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                {\r\n                                    text: 'b. Được ghi nhận, biểu dương, khen thưởng về tham gia các hoạt động xã hội',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '5 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[11]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[11]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[11]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'c. Có tinh thần chia sẻ, giúp đỡ bạn bè, người thân, người có hoàn cảnh khó khăn, hoạn nạn.',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '10 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[12]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[12]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[12]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                { text: 'Điểm tối đa nội dung 4 là', style: 'tableSubHeaderTotal' },\r\n                                { text: '25 điểm', style: 'tableSubPointTotal' },\r\n                                { text: `${sum(std_score, 10, 12)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(stf_score, 10, 12)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(dep_score, 10, 12)} điểm`, style: 'tableSubPointTotal' },\r\n                            ],\r\n                            ////////\r\n                            [\r\n                                {\r\n                                    text: '5. Đánh giá về ý thức và kết quả tham gia công tác phụ trách lớp, các đoàn thể, tổ chức trong nhà trường hoặc đạt được thành tích đặc biệt trong học tập, rèn luyện của học sinh, sinh viên',\r\n                                    style: 'tableSubHeader',\r\n                                },\r\n                                '',\r\n                                '',\r\n                                '',\r\n                                '',\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'a. Tham gia tích cực vào phong trào của Lớp, Đoàn, Hội sinh viên và các công tác đoàn thể xã hội khác',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '3 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[13]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[13]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[13]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                {\r\n                                    text: 'b. Phát huy vai trò và hoàn thành tốt nhiệm vụ người cán bộ Chi đoàn, Lớp, Câu lạc bộ, Đội tự quản',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '3 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[14]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[14]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[14]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'c. Đảm nhiệm, đóng góp có hiệu quả cho công tác Đoàn trường, Hội sinh viên, Liên chi đoàn, Đội tự quản, Câu lạc bộ',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[15]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[15]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[15]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'd. Được biểu dương, khen thưởng vì có thành tích đặc biệt trong học tập, rèn luyện và các hoạt động khác',\r\n                                    style: 'tableSubSubHeader',\r\n                                },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: `${std_score[16]} điểm`, style: 'tablepoint' },\r\n                                { text: `${stf_score[16]} điểm`, style: 'tablepoint' },\r\n                                { text: `${dep_score[16]} điểm`, style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                { text: '- Cấp khoa', style: 'tableSubSubSubHeader' },\r\n                                { text: '1 điểm', style: 'tablepoint' },\r\n                                { text: std_score[16] == 1 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[16] == 1 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[16] == 1 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n                            [\r\n                                { text: '- Cấp trường trở lên', style: 'tableSubSubSubHeader' },\r\n                                { text: '2 điểm', style: 'tablepoint' },\r\n                                { text: std_score[16] == 2 ? '•' : '', style: 'tablepoint' },\r\n                                { text: stf_score[16] == 2 ? '•' : '', style: 'tablepoint' },\r\n                                { text: dep_score[16] == 2 ? '•' : '', style: 'tablepoint' },\r\n                            ],\r\n\r\n                            [\r\n                                { text: 'Điểm tối đa nội dung 5 là', style: 'tableSubHeaderTotal' },\r\n                                { text: '10 điểm', style: 'tableSubPointTotal' },\r\n                                { text: `${sum(std_score, 13, 16)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(stf_score, 13, 16)} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${sum(dep_score, 13, 16)} điểm`, style: 'tableSubPointTotal' },\r\n                            ],\r\n                            [\r\n                                { text: 'Tổng điểm tối đa', style: 'tableSubHeaderTotal' },\r\n                                { text: '100 điểm', style: 'tableSubPointTotal' },\r\n                                { text: `${std_score[17]} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${stf_score[17]} điểm`, style: 'tableSubPointTotal' },\r\n                                { text: `${dep_score[17]} điểm`, style: 'tableSubPointTotal' },\r\n                            ],\r\n                        ],\r\n                    },\r\n                    layout: {\r\n                        fillColor: function (rowIndex, node, columnIndex) {\r\n                            if (rowIndex === 0) {\r\n                                // Màu cho hàng đầu tiên\r\n                                return '#9fe6ff'; // Ví dụ: Màu đỏ\r\n                            } else {\r\n                                // Màu cho các hàng còn lại\r\n                                return rowIndex % 2 === 0 ? '#e6e6e6' : null;\r\n                            }\r\n                        },\r\n                    },\r\n                },\r\n                { text: 'Ký tên', style: 'subheader', alignment: 'right', margin: [0, 0, 50, 0] },\r\n            ],\r\n            styles: {\r\n                header: {\r\n                    fontSize: 21,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10],\r\n                },\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 10, 0, 5],\r\n                },\r\n                tableExample: {\r\n                    margin: [0, 5, 0, 15],\r\n                },\r\n                tableHeader: {\r\n                    bold: true,\r\n                    fontSize: 13,\r\n                    color: 'black',\r\n                    alignment: 'center',\r\n                },\r\n                tableSubHeader: {\r\n                    bold: true,\r\n                    fontSize: 12,\r\n                    color: 'black',\r\n                },\r\n                tableSubHeaderTotal: {\r\n                    bold: true,\r\n                    fontSize: 12,\r\n                    color: 'red',\r\n                },\r\n                tableSubPointTotal: {\r\n                    bold: true,\r\n                    fontSize: 12,\r\n                    color: 'red',\r\n                    alignment: 'center',\r\n                },\r\n                tableSubSubHeader: {\r\n                    bold: true,\r\n                    fontSize: 11,\r\n                    color: 'black',\r\n                },\r\n                tableSubSubSubHeader: {\r\n                    bold: true,\r\n                    fontSize: 10,\r\n                    color: 'black',\r\n                    margin: [15, 0, 0, 0],\r\n                },\r\n                tablepoint: {\r\n                    bold: true,\r\n                    fontSize: 11,\r\n                    color: 'black',\r\n                    alignment: 'center',\r\n                },\r\n            },\r\n            defaultStyle: {\r\n                // alignment: 'justify'\r\n            },\r\n        };\r\n        options = {};\r\n\r\n        const pdfDoc = printer.createPdfKitDocument(docDefinition, options);\r\n        // if (scorce.length > 1) {\r\n        await createPdfAsync(printer, pdfDoc, path.join(path_save, name_zip, namefile));\r\n        // } else {\r\n        //   await createPdfAsync(printer, pdfDoc, path.join(path_save, namefile));\r\n        //   return namefile;\r\n        // }\r\n    }\r\n    // if (scorce.length > 1) {\r\n    archive.pipe(output);\r\n    archive.directory(path.join(path_save, name_zip), false);\r\n    archive.finalize();\r\n    // }\r\n\r\n    // if (scorce.length > 1) {\r\n    return new Promise((resolve, reject) => {\r\n        output.on('close', () => {\r\n            // console.log(\"Nén hoàn tất, kích thước:\", archive.pointer() + \" bytes\");\r\n            fs.rm(path.join(path_save, name_zip), { recursive: true }, (err) => {\r\n                if (err) {\r\n                    console.log('CREATE_PDF | LOG | Lỗi khi xóa thư mục:', err);\r\n                    reject(err);\r\n                } else {\r\n                    // console.log(\"Đã xóa thư mục thành công.\");\r\n                    resolve(name_zip + '.zip');\r\n                }\r\n            });\r\n        });\r\n\r\n        archive.on('error', (err) => {\r\n            console.log('CREATE_PDF | LOG | Lỗi khi nén');\r\n            reject(err);\r\n        });\r\n    });\r\n    // }\r\n}\r\n\r\nmodule.exports = {\r\n    sendEmail,\r\n    checkIfUserLoginAPI,\r\n    checkIfUserLoginRoute,\r\n    get_full_id,\r\n    blockUnwantedPaths,\r\n    mark,\r\n    updateStudentTotalScore,\r\n    randomPassword,\r\n    scheduleFileDeletion,\r\n    sortStudentName,\r\n    createId,\r\n    deleteClassApi,\r\n    createPdf,\r\n    comparePassword,\r\n    hashPassword,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1705997672441},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\lib\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\lib\\\\csdl_google_lib.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"/////////////////////////this is drive....//////////////////////////////\nconst fs = require('fs');\nconst {\n  google\n} = require('googleapis');\nconst NodePersist = require('node-persist');\nconst path = require('path');\n// Load the credentials from the JSON file\nconst credentials = require('../cert/bimat.json');\n// Create a new Google Drive instance\nconst drive = google.drive('v3');\n\n// Initialize the NodePersist storage\nconst storage = NodePersist.create({\n  dir: '.credentials'\n});\n\n// Function to initialize storage asynchronously\nconst initStorage = async () => {\n  await storage.init();\n};\n\n// Authorize the client\nconst auth = new google.auth.OAuth2(credentials.web.client_id, credentials.web.client_secret, credentials.web.redirect_uris && credentials.web.redirect_uris.length > 0 ? credentials.web.redirect_uris[0] : 'http://localhost:8181');\nasync function getNewAccessTokenUsingRefreshToken(refreshToken) {\n  try {\n    auth.setCredentials({\n      refresh_token: refreshToken\n    });\n    const refreshedTokens = await auth.getAccessToken();\n    return refreshedTokens.res.data;\n  } catch (error) {\n    console.log('SYSTEM | DRIVE | Lỗi làm mới mã truy cập:', error);\n  }\n}\n// Generate an access token and refresh token if not available\nconst getAccessToken = async () => {\n  let tokens = await storage.getItem('tokens');\n  let token;\n  if (tokens) {\n    const now = new Date().getTime();\n    if (tokens.expiry_date && tokens.expiry_date > now) {\n      token = tokens.access_token;\n    } else if (tokens.refresh_token) {\n      try {\n        const new_tokens = await getNewAccessTokenUsingRefreshToken(tokens.refresh_token);\n        token = new_tokens.access_token;\n        await storage.setItem('tokens', new_tokens);\n      } catch (error) {\n        console.log('SYSTEM | DRIVE | Error refreshing access token:', error);\n      }\n    }\n  }\n  if (!token) {\n    const authUrl = auth.generateAuthUrl({\n      access_type: 'offline',\n      scope: ['https://www.googleapis.com/auth/drive']\n    });\n    console.log('SYSTEM | DRIVE | Authorize this app by visiting this URL:', authUrl);\n    const code = await getCodeFromUser();\n    tokens = await getAccessTokenFromCode(code);\n    await storage.setItem('tokens', tokens);\n  }\n  auth.setCredentials(tokens);\n};\n\n// Function to get authorization code from user\nconst getCodeFromUser = () => {\n  return new Promise(resolve => {\n    // In this example, we assume the user manually enters the code in the terminal\n    const readline = require('readline');\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n    rl.question('SYSTEM | DRIVE | Enter the authorization code: ', code => {\n      rl.close();\n      resolve(decodeURIComponent(code));\n    });\n  });\n};\n\n// Function to exchange authorization code for access token\nconst getAccessTokenFromCode = code => {\n  return new Promise((resolve, reject) => {\n    auth.getToken(code, (err, token) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(token);\n    });\n  });\n};\n\n// Upload the file to Google Drive\nexports.uploadFileToDrive = async (filePath, description, id_folder = '1CyiiQwVN1_99jYcbQvy4M3JeI1m4zyKR') => {\n  await initStorage();\n  await getAccessToken();\n  const fileName = path.basename(filePath);\n  const fileMetadata = {\n    name: fileName,\n    parents: [id_folder],\n    description: description // Bổ sung mô tả vào đây\n  };\n  const media = {\n    mimeType: 'application/octet-stream',\n    body: fs.createReadStream(filePath)\n  };\n  try {\n    const res = await drive.files.create({\n      auth,\n      resource: fileMetadata,\n      media: media,\n      fields: 'id'\n    });\n    fs.unlink(filePath, err => {\n      if (err) {\n        console.log('SYSTEM | DRIVE | ERR |', err);\n        return;\n      }\n    });\n    const permission = {\n      role: 'reader',\n      // Quyền truy cập đọc\n      type: 'anyone' // Cho phép mọi người truy cập\n    };\n    await drive.permissions.create({\n      fileId: res.data.id,\n      resource: permission,\n      fields: 'id',\n      auth: auth\n    });\n    return res.data.id;\n  } catch (err) {\n    console.log('SYSTEM | DRIVE | ERR | uploading file:', err);\n  }\n};\nconst getFileName = async fileId => {\n  const drive = google.drive({\n    version: 'v3',\n    auth\n  });\n  try {\n    const response = await drive.files.get({\n      fileId,\n      fields: 'name'\n    });\n    const fileName = response.data.name;\n    return fileName;\n  } catch (error) {\n    console.log('SYSTEM | DRIVE | Error retrieving file name:', error);\n  }\n};\n\n// Download the file from Google Drive\nexports.downloadFileFromDrive = async fileId => {\n  await initStorage();\n  await getAccessToken();\n  const res = await drive.files.get({\n    fileId,\n    alt: 'media'\n  }, {\n    responseType: 'stream',\n    auth\n  });\n\n  // let fileName = await getFileName(fileId);\n  // const destFilePath = path.join(destDirectory, fileName);\n  // const destFile = fs.createWriteStream(destFilePath);\n\n  return new Promise((resolve, reject) => {\n    const chunks = [];\n    res.data.on('data', chunk => {\n      chunks.push(chunk);\n    }).on('end', () => {\n      const fileContent = Buffer.concat(chunks).toString('utf8');\n      resolve(fileContent);\n    }).on('error', err => {\n      console.log('SYSTEM | DRIVE | Error downloading file:', err);\n      reject(err);\n    });\n    // .pipe(destFile);\n  });\n};\nexports.downloadFileFromDriveforUser = async (fileId, res) => {\n  await initStorage();\n  await getAccessToken();\n  const fileStream = await drive.files.get({\n    fileId,\n    alt: 'media'\n  }, {\n    responseType: 'stream',\n    auth\n  });\n\n  // Get the file name from Google Drive API or use a fixed filename\n  let fileName = await getFileName(fileId);\n  // Set the Content-Disposition header with the desired filename\n  res.setHeader('Content-Disposition', `attachment; filename=\"${fileName}\"`);\n\n  // Pipe the file stream to the response object\n  fileStream.data.on('data', chunk => {\n    res.write(chunk);\n  }).on('end', () => {\n    res.end();\n  }).on('error', err => {\n    console.log('SYSTEM | DRIVE | Error sending file:', err);\n    res.status(500).end(); // Or handle the error in an appropriate way\n  });\n};\nexports.getDriveFileLinkAndDescription = async fileId => {\n  await initStorage();\n  await getAccessToken();\n  const fileMetadata = await drive.files.get({\n    fileId,\n    fields: 'id,description',\n    auth\n  });\n  const directLink = `https://drive.google.com/thumbnail?id=${fileMetadata.data.id}&sz=s4000`;\n  return {\n    fileDescription: fileMetadata.data.description,\n    fileLink: directLink\n  };\n};\nexports.deleteFileFromDrive = async fileId => {\n  await initStorage();\n  await getAccessToken();\n  try {\n    await drive.files.delete({\n      fileId: fileId,\n      auth: auth\n    });\n  } catch (err) {\n    console.log('SYSTEM | DRIVE | Error deleting file:', err);\n  }\n};\n// ------------------------------------------------------------------------------------------------------\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["fs","require","google","NodePersist","path","credentials","drive","storage","create","dir","initStorage","init","auth","OAuth2","web","client_id","client_secret","redirect_uris","length","getNewAccessTokenUsingRefreshToken","refreshToken","setCredentials","refresh_token","refreshedTokens","getAccessToken","res","data","error","console","log","tokens","getItem","token","now","Date","getTime","expiry_date","access_token","new_tokens","setItem","authUrl","generateAuthUrl","access_type","scope","code","getCodeFromUser","getAccessTokenFromCode","Promise","resolve","readline","rl","createInterface","input","process","stdin","output","stdout","question","close","decodeURIComponent","reject","getToken","err","exports","uploadFileToDrive","filePath","description","id_folder","fileName","basename","fileMetadata","name","parents","media","mimeType","body","createReadStream","files","resource","fields","unlink","permission","role","type","permissions","fileId","id","getFileName","version","response","get","downloadFileFromDrive","alt","responseType","chunks","on","chunk","push","fileContent","Buffer","concat","toString","downloadFileFromDriveforUser","fileStream","setHeader","write","end","status","getDriveFileLinkAndDescription","directLink","fileDescription","fileLink","deleteFileFromDrive","delete"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\lib\\","sources":["csdl_google_lib.js"],"sourcesContent":["/////////////////////////this is drive....//////////////////////////////\r\nconst fs = require('fs');\r\nconst { google } = require('googleapis');\r\nconst NodePersist = require('node-persist');\r\nconst path = require('path');\r\n// Load the credentials from the JSON file\r\nconst credentials = require('../cert/bimat.json');\r\n// Create a new Google Drive instance\r\nconst drive = google.drive('v3');\r\n\r\n// Initialize the NodePersist storage\r\nconst storage = NodePersist.create({\r\n    dir: '.credentials',\r\n});\r\n\r\n// Function to initialize storage asynchronously\r\nconst initStorage = async () => {\r\n    await storage.init();\r\n};\r\n\r\n// Authorize the client\r\nconst auth = new google.auth.OAuth2(\r\n    credentials.web.client_id,\r\n    credentials.web.client_secret,\r\n    credentials.web.redirect_uris && credentials.web.redirect_uris.length > 0\r\n        ? credentials.web.redirect_uris[0]\r\n        : 'http://localhost:8181',\r\n);\r\nasync function getNewAccessTokenUsingRefreshToken(refreshToken) {\r\n    try {\r\n        auth.setCredentials({ refresh_token: refreshToken });\r\n        const refreshedTokens = await auth.getAccessToken();\r\n        return refreshedTokens.res.data;\r\n    } catch (error) {\r\n        console.log('SYSTEM | DRIVE | Lỗi làm mới mã truy cập:', error);\r\n    }\r\n}\r\n// Generate an access token and refresh token if not available\r\nconst getAccessToken = async () => {\r\n    let tokens = await storage.getItem('tokens');\r\n    let token;\r\n\r\n    if (tokens) {\r\n        const now = new Date().getTime();\r\n        if (tokens.expiry_date && tokens.expiry_date > now) {\r\n            token = tokens.access_token;\r\n        } else if (tokens.refresh_token) {\r\n            try {\r\n                const new_tokens = await getNewAccessTokenUsingRefreshToken(tokens.refresh_token);\r\n                token = new_tokens.access_token;\r\n                await storage.setItem('tokens', new_tokens);\r\n            } catch (error) {\r\n                console.log('SYSTEM | DRIVE | Error refreshing access token:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!token) {\r\n        const authUrl = auth.generateAuthUrl({\r\n            access_type: 'offline',\r\n            scope: ['https://www.googleapis.com/auth/drive'],\r\n        });\r\n\r\n        console.log('SYSTEM | DRIVE | Authorize this app by visiting this URL:', authUrl);\r\n\r\n        const code = await getCodeFromUser();\r\n        tokens = await getAccessTokenFromCode(code);\r\n        await storage.setItem('tokens', tokens);\r\n    }\r\n\r\n    auth.setCredentials(tokens);\r\n};\r\n\r\n// Function to get authorization code from user\r\nconst getCodeFromUser = () => {\r\n    return new Promise((resolve) => {\r\n        // In this example, we assume the user manually enters the code in the terminal\r\n        const readline = require('readline');\r\n        const rl = readline.createInterface({\r\n            input: process.stdin,\r\n            output: process.stdout,\r\n        });\r\n\r\n        rl.question('SYSTEM | DRIVE | Enter the authorization code: ', (code) => {\r\n            rl.close();\r\n            resolve(decodeURIComponent(code));\r\n        });\r\n    });\r\n};\r\n\r\n// Function to exchange authorization code for access token\r\nconst getAccessTokenFromCode = (code) => {\r\n    return new Promise((resolve, reject) => {\r\n        auth.getToken(code, (err, token) => {\r\n            if (err) {\r\n                reject(err);\r\n                return;\r\n            }\r\n            resolve(token);\r\n        });\r\n    });\r\n};\r\n\r\n// Upload the file to Google Drive\r\nexports.uploadFileToDrive = async (filePath, description, id_folder = '1CyiiQwVN1_99jYcbQvy4M3JeI1m4zyKR') => {\r\n    await initStorage();\r\n    await getAccessToken();\r\n    const fileName = path.basename(filePath);\r\n    const fileMetadata = {\r\n        name: fileName,\r\n        parents: [id_folder],\r\n        description: description, // Bổ sung mô tả vào đây\r\n    };\r\n\r\n    const media = {\r\n        mimeType: 'application/octet-stream',\r\n        body: fs.createReadStream(filePath),\r\n    };\r\n\r\n    try {\r\n        const res = await drive.files.create({\r\n            auth,\r\n            resource: fileMetadata,\r\n            media: media,\r\n            fields: 'id',\r\n        });\r\n\r\n        fs.unlink(filePath, (err) => {\r\n            if (err) {\r\n                console.log('SYSTEM | DRIVE | ERR |', err);\r\n                return;\r\n            }\r\n        });\r\n        const permission = {\r\n            role: 'reader', // Quyền truy cập đọc\r\n            type: 'anyone', // Cho phép mọi người truy cập\r\n        };\r\n\r\n        await drive.permissions.create({\r\n            fileId: res.data.id,\r\n            resource: permission,\r\n            fields: 'id',\r\n            auth: auth,\r\n        });\r\n\r\n        return res.data.id;\r\n    } catch (err) {\r\n        console.log('SYSTEM | DRIVE | ERR | uploading file:', err);\r\n    }\r\n};\r\n\r\nconst getFileName = async (fileId) => {\r\n    const drive = google.drive({ version: 'v3', auth });\r\n\r\n    try {\r\n        const response = await drive.files.get({\r\n            fileId,\r\n            fields: 'name',\r\n        });\r\n\r\n        const fileName = response.data.name;\r\n        return fileName;\r\n    } catch (error) {\r\n        console.log('SYSTEM | DRIVE | Error retrieving file name:', error);\r\n    }\r\n};\r\n\r\n// Download the file from Google Drive\r\nexports.downloadFileFromDrive = async (fileId) => {\r\n    await initStorage();\r\n    await getAccessToken();\r\n    const res = await drive.files.get({ fileId, alt: 'media' }, { responseType: 'stream', auth });\r\n\r\n    // let fileName = await getFileName(fileId);\r\n    // const destFilePath = path.join(destDirectory, fileName);\r\n    // const destFile = fs.createWriteStream(destFilePath);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const chunks = [];\r\n\r\n        res.data\r\n            .on('data', (chunk) => {\r\n                chunks.push(chunk);\r\n            })\r\n            .on('end', () => {\r\n                const fileContent = Buffer.concat(chunks).toString('utf8');\r\n                resolve(fileContent);\r\n            })\r\n            .on('error', (err) => {\r\n                console.log('SYSTEM | DRIVE | Error downloading file:', err);\r\n                reject(err);\r\n            });\r\n        // .pipe(destFile);\r\n    });\r\n};\r\n\r\nexports.downloadFileFromDriveforUser = async (fileId, res) => {\r\n    await initStorage();\r\n    await getAccessToken();\r\n    const fileStream = await drive.files.get({ fileId, alt: 'media' }, { responseType: 'stream', auth });\r\n\r\n    // Get the file name from Google Drive API or use a fixed filename\r\n    let fileName = await getFileName(fileId);\r\n    // Set the Content-Disposition header with the desired filename\r\n    res.setHeader('Content-Disposition', `attachment; filename=\"${fileName}\"`);\r\n\r\n    // Pipe the file stream to the response object\r\n    fileStream.data\r\n        .on('data', (chunk) => {\r\n            res.write(chunk);\r\n        })\r\n        .on('end', () => {\r\n            res.end();\r\n        })\r\n        .on('error', (err) => {\r\n            console.log('SYSTEM | DRIVE | Error sending file:', err);\r\n            res.status(500).end(); // Or handle the error in an appropriate way\r\n        });\r\n};\r\n\r\nexports.getDriveFileLinkAndDescription = async (fileId) => {\r\n    await initStorage();\r\n    await getAccessToken();\r\n    const fileMetadata = await drive.files.get({ fileId, fields: 'id,description', auth });\r\n    const directLink = `https://drive.google.com/thumbnail?id=${fileMetadata.data.id}&sz=s4000`;\r\n\r\n    return { fileDescription: fileMetadata.data.description, fileLink: directLink };\r\n};\r\nexports.deleteFileFromDrive = async (fileId) => {\r\n    await initStorage();\r\n    await getAccessToken();\r\n    try {\r\n        await drive.files.delete({\r\n            fileId: fileId,\r\n            auth: auth,\r\n        });\r\n    } catch (err) {\r\n        console.log('SYSTEM | DRIVE | Error deleting file:', err);\r\n    }\r\n};\r\n// ------------------------------------------------------------------------------------------------------\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1719476170723},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\rootRouters.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  checkIfUserLoginRoute\n} = require('../lib/function_lib');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nconst path = require('path');\nfunction createRootRouter(client, parentDirectory) {\n  // index route\n  router.get('/', checkIfUserLoginRoute, async (req, res) => {\n    // kiểm tra châm điểm\n    const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n      projection: {\n        _id: 0,\n        year: 1,\n        start_day: 1,\n        end_day: 1\n      }\n    });\n    const check_y = () => {\n      let today = new Date().getTime();\n      let start_day = new Date(school_year.start_day).getTime();\n      let end_day = new Date(school_year.end_day).getTime();\n      let forever_day = new Date('2003-10-18').getTime(); // special date\n\n      // check if end mark time or not\n      if (start_day <= today && (today < end_day || end_day == forever_day)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    let check_year = check_y();\n    // console.log(check_year);\n    //\n    try {\n      const user = req.session.user;\n      if (user.pow[0]) {\n        const schoolYear = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1\n          }\n        });\n        if (user.cls[0]) {\n          const schoolYear_all = await client.db(name_global_databases).collection('classes').findOne({\n            _id: user.cls[0]\n          }, {\n            projection: {\n              _id: 0,\n              years: 1\n            }\n          });\n          let schoolYearsToSearch = [];\n          if (schoolYear_all.years[schoolYear.year.slice(4)]) {\n            for (let i = 0; i < Object.keys(schoolYear_all.years[schoolYear.year.slice(4)]).length; i++) {\n              schoolYearsToSearch.push(`HK${i + 1}_` + schoolYear.year.slice(4));\n            }\n            // console.log(\"xx\",schoolYear_all.years[schoolYear.year.slice(4)]);\n\n            const studentTotalScores = await Promise.all(schoolYearsToSearch.map(async year => {\n              // Tìm trong bảng '_dep_table' trước\n              const depCollection = client.db(user.dep).collection(user.cls[0] + '_dep_table');\n              const stfCollection = client.db(user.dep).collection(user.cls[0] + '_stf_table');\n              const stdCollection = client.db(user.dep).collection(user.cls[0] + '_std_table');\n              const depDocument = await depCollection.findOne({\n                mssv: user._id,\n                school_year: year\n              }, {\n                projection: {\n                  _id: 0,\n                  total: 1\n                }\n              });\n              if (depDocument) {\n                return {\n                  year: year,\n                  total: depDocument.total\n                };\n              }\n              const stfDocument = await stfCollection.findOne({\n                mssv: user._id,\n                school_year: year\n              }, {\n                projection: {\n                  _id: 0,\n                  total: 1\n                }\n              });\n              if (stfDocument) {\n                return {\n                  year: year,\n                  total: stfDocument.total\n                };\n              }\n              const stdDocument = await stdCollection.findOne({\n                mssv: user._id,\n                school_year: year\n              }, {\n                projection: {\n                  _id: 0,\n                  total: 1\n                }\n              });\n              if (stdDocument) {\n                return {\n                  year: year,\n                  total: stdDocument.total\n                };\n              }\n              return {\n                year: year,\n                total: 'Chưa có điểm'\n              };\n            }));\n            console.log(studentTotalScores);\n            const studentActivities = await Promise.all(schoolYearsToSearch.map(async year => {\n              info_search = `student_list.${user._id}`;\n              let activitie_info_lop = await client.db(user.dep).collection(`${user.cls[0]}_activities`).find({\n                [info_search]: {\n                  $exists: true\n                },\n                year: year\n              }, {\n                projection: {\n                  name: 1,\n                  student_list: 1,\n                  ai: 1,\n                  level: 1\n                }\n              }).toArray();\n              if (activitie_info_lop.length > 0) {\n                activitie_info_lop.forEach(element => {\n                  if (element.ai && element.ai[user._id]) {\n                    element.thamgia = true;\n                  }\n                  if (element.student_list[user._id] == 2) {\n                    element.khenthuong = true;\n                  }\n                });\n              }\n              let activitie_info_khoa = await client.db(user.dep).collection('activities').find({\n                [info_search]: {\n                  $exists: true\n                },\n                year: year\n              }, {\n                projection: {\n                  name: 1,\n                  student_list: 1,\n                  ai: 1,\n                  level: 1\n                }\n              }).toArray();\n              if (activitie_info_khoa.length > 0) {\n                activitie_info_khoa.forEach(element => {\n                  if (element.ai && element.ai[user._id]) {\n                    element.thamgia = true;\n                  }\n                  if (element.student_list[user._id] == 2) {\n                    element.khenthuong = true;\n                  }\n                });\n              }\n              let activitie_info_truong = await client.db(name_global_databases).collection('activities').find({\n                [info_search]: {\n                  $exists: true\n                },\n                year: year\n              }, {\n                projection: {\n                  name: 1,\n                  student_list: 1,\n                  ai: 1,\n                  level: 1\n                }\n              }).toArray();\n              if (activitie_info_truong.length > 0) {\n                activitie_info_truong.forEach(element => {\n                  if (element.ai && element.ai[user._id]) {\n                    element.thamgia = true;\n                  }\n                  if (element.student_list[user._id] == 2) {\n                    element.khenthuong = true;\n                  }\n                });\n              }\n              return {\n                year: year,\n                activitie_info_lop: activitie_info_lop,\n                activitie_info_khoa: activitie_info_khoa,\n                activitie_info_truong: activitie_info_truong\n              };\n            }));\n            if (user.pow[0] && !user.pow[1] && !user.pow[2] && !user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('sinhvien-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: false,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            } else if (user.pow[0] && user.pow[1] && !user.pow[2] && user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('bancansu-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                pow: 0,\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: false,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            } else if (user.pow[0] && user.pow[1] && !user.pow[2] && !user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('bancansu-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                pow: 1,\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: false,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            } else if (user.pow[0] && !user.pow[1] && !user.pow[2] && user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('bancansu-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                pow: 2,\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: false,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            }\n          } else {\n            // console.log(\"xx\",schoolYear_all.years[schoolYear.year.slice(4)]);\n            for (let i = 0; i < 3; i++) {\n              schoolYearsToSearch.push(`HK${i + 1}_` + schoolYear.year.slice(4));\n            }\n            const studentTotalScores = await Promise.all(schoolYearsToSearch.map(async year => {\n              // Tìm trong bảng '_dep_table' trước\n              const depCollection = client.db(user.dep).collection(user.cls[0] + '_dep_table');\n              const stfCollection = client.db(user.dep).collection(user.cls[0] + '_stf_table');\n              const stdCollection = client.db(user.dep).collection(user.cls[0] + '_std_table');\n              const depDocument = await depCollection.findOne({\n                mssv: user._id,\n                school_year: year\n              }, {\n                projection: {\n                  _id: 0,\n                  total: 1\n                }\n              });\n              if (depDocument) {\n                return {\n                  year: year,\n                  total: depDocument.total\n                };\n              }\n              const stfDocument = await stfCollection.findOne({\n                mssv: user._id,\n                school_year: year\n              }, {\n                projection: {\n                  _id: 0,\n                  total: 1\n                }\n              });\n              if (stfDocument) {\n                return {\n                  year: year,\n                  total: stfDocument.total\n                };\n              }\n              const stdDocument = await stdCollection.findOne({\n                mssv: user._id,\n                school_year: year\n              }, {\n                projection: {\n                  _id: 0,\n                  total: 1\n                }\n              });\n              if (stdDocument) {\n                return {\n                  year: year,\n                  total: stdDocument.total\n                };\n              }\n              return {\n                year: year,\n                total: 'Chưa có điểm'\n              };\n            }));\n            console.log(studentTotalScores);\n            const studentActivities = await Promise.all(schoolYearsToSearch.map(async year => {\n              info_search = `student_list.${user._id}`;\n              let activitie_info_lop = await client.db(user.dep).collection(`${user.cls[0]}_activities`).find({\n                [info_search]: {\n                  $exists: true\n                },\n                year: year\n              }, {\n                projection: {\n                  name: 1,\n                  student_list: 1,\n                  ai: 1,\n                  level: 1\n                }\n              }).toArray();\n              if (activitie_info_lop.length > 0) {\n                activitie_info_lop.forEach(element => {\n                  if (element.ai && element.ai[user._id]) {\n                    element.thamgia = true;\n                  }\n                  if (element.student_list[user._id] == 2) {\n                    element.khenthuong = true;\n                  }\n                });\n              }\n              let activitie_info_khoa = await client.db(user.dep).collection('activities').find({\n                [info_search]: {\n                  $exists: true\n                },\n                year: year\n              }, {\n                projection: {\n                  name: 1,\n                  student_list: 1,\n                  ai: 1,\n                  level: 1\n                }\n              }).toArray();\n              if (activitie_info_khoa.length > 0) {\n                activitie_info_khoa.forEach(element => {\n                  if (element.ai && element.ai[user._id]) {\n                    element.thamgia = true;\n                  }\n                  if (element.student_list[user._id] == 2) {\n                    element.khenthuong = true;\n                  }\n                });\n              }\n              let activitie_info_truong = await client.db(name_global_databases).collection('activities').find({\n                [info_search]: {\n                  $exists: true\n                },\n                year: year\n              }, {\n                projection: {\n                  name: 1,\n                  student_list: 1,\n                  ai: 1,\n                  level: 1\n                }\n              }).toArray();\n              if (activitie_info_truong.length > 0) {\n                activitie_info_truong.forEach(element => {\n                  if (element.ai && element.ai[user._id]) {\n                    element.thamgia = true;\n                  }\n                  if (element.student_list[user._id] == 2) {\n                    element.khenthuong = true;\n                  }\n                });\n              }\n              return {\n                year: year,\n                activitie_info_lop: activitie_info_lop,\n                activitie_info_khoa: activitie_info_khoa,\n                activitie_info_truong: activitie_info_truong\n              };\n            }));\n            if (user.pow[0] && !user.pow[1] && !user.pow[2] && !user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('sinhvien-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: true,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            } else if (user.pow[0] && user.pow[1] && !user.pow[2] && user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('bancansu-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                pow: 0,\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: true,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            } else if (user.pow[0] && user.pow[1] && !user.pow[2] && !user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('bancansu-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                pow: 1,\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: true,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            } else if (user.pow[0] && !user.pow[1] && !user.pow[2] && user.pow[3] && !user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n              return res.render('bancansu-index', {\n                header: 'global-header',\n                footer: 'global-footer',\n                thongbao: 'global-notifications',\n                pow: 2,\n                bandiem: studentTotalScores,\n                hoatdong: studentActivities,\n                hethan: true,\n                nienkhoa: Object.keys(schoolYear_all.years),\n                check_chamdiem: check_year\n              });\n            }\n          }\n        } else {\n          return res.sendStatus(403).send('Sinh viên đã tốt nghiệp');\n        }\n      } else {\n        if (!user.pow[0] && user.pow[1] && !user.pow[2] && user.pow[3] && user.pow[4] && !user.pow[5] && !user.pow[6] && !user.pow[7] && !user.pow[8]) {\n          const student_list = user.cls[0];\n          const nulll = [1];\n          return res.render('teacher-index', {\n            header: 'global-header',\n            student_list: student_list != undefined ? student_list : nulll,\n            footer: 'global-footer'\n          });\n        } else if (!user.pow[0] && !user.pow[1] && user.pow[2] && user.pow[3] && user.pow[4] && user.pow[5] && user.pow[6] && user.pow[7] && user.pow[8]) {\n          return res.render('doankhoa-index', {\n            header: 'global-header',\n            footer: 'global-footer',\n            menu: 'doankhoa-menu'\n          });\n        }\n      }\n    } catch (err) {\n      console.log('SYSTEM | INDEX_ROUTE | ERROR | ', err);\n    }\n  });\n\n  // xac thuc route\n  router.get('/verifyOTP', async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user) {\n        return res.redirect('/');\n      }\n      const mssv = req.query.mssv;\n      const dataUser = await client.db(name_global_databases).collection('user_info').findOne({\n        _id: mssv\n      }, {\n        projection: {\n          _id: 0,\n          email: 1\n        }\n      });\n      let emailToShow = '';\n      if (dataUser) {\n        const email = dataUser.email;\n        emailToShow = email.substring(0, 3) + '*'.repeat(email.indexOf('@') - 3) + email.substring(email.indexOf('@'));\n      }\n      return res.render('global-verify-otp', {\n        header: 'global-header',\n        footer: 'global-footer',\n        avt: null,\n        thongbao: 'global-notifications',\n        email: emailToShow\n      });\n    } catch (err) {\n      console.log('SYSTEM | OTP_ROUTE | ERROR | ', err);\n      return res.render('global-verify-otp', {\n        header: 'global-header',\n        footer: 'global-footer',\n        avt: null,\n        thongbao: 'global-notifications',\n        email: ''\n      });\n    }\n  });\n\n  // Quen mat khau\n  router.get('/quenmatkhau', async (req, res) => {\n    const user = req.session.user;\n    if (user) {\n      return res.redirect('/');\n    }\n    return res.render('global-forgot-password', {\n      header: 'global-header',\n      footer: 'global-footer',\n      thongbao: 'global-notifications',\n      avt: null\n    });\n  });\n  router.get('/dangkyhoatdong', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const query = req.query;\n      const user = req.session.user;\n      let activitie_info;\n      if (query.id && query.level) {\n        switch (query.level) {\n          case 'lop':\n            if (user.pow[0]) {\n              activitie_info = await client.db(user.dep).collection(`${user.cls[0]}_activities`).findOne({\n                _id: query.id\n              });\n              console.log(user.cls[0]);\n            } else {\n              const collections = await client.db(user.dep).listCollections().toArray();\n              // Filter collections ending with '_activities'\n              const activityCollections = await collections.filter(collection => collection.name.endsWith('_activities'));\n              // Loop through activity collections and retrieve all documents\n              for (const activityCollection of activityCollections) {\n                activitie_info = await client.db(user.dep).collection(activityCollection.name).findOne({\n                  _id: query.id\n                });\n                if (activitie_info) {\n                  break; // Thoát khỏi vòng lặp khi tìm thấy kết quả\n                }\n              }\n            }\n            break;\n          case 'khoa':\n            activitie_info = await client.db(user.dep).collection('activities').findOne({\n              _id: query.id\n            });\n            break;\n          case 'truong':\n            activitie_info = await client.db(name_global_databases).collection('activities').findOne({\n              _id: query.id\n            });\n            break;\n        }\n        if (!activitie_info) {\n          return res.status(404).send('Not Found');\n        }\n        activitie_info.join = false;\n        activitie_info.diemdanh = false;\n        if (activitie_info.student_list) {\n          const list_student = Object.keys(activitie_info.student_list);\n          let info_student = [];\n          for (let i = 0; i < list_student.length; i++) {\n            info_student.push(await client.db(name_global_databases).collection('user_info').findOne({\n              _id: list_student[i]\n            }, {\n              projection: {\n                first_name: 1,\n                last_name: 1,\n                class: 1\n              }\n            }));\n          }\n          activitie_info.info_student = info_student;\n          if (user._id in activitie_info.student_list) {\n            activitie_info.join = true;\n          }\n          if (activitie_info.ai && user._id in activitie_info.ai && activitie_info.ai[user._id]) {\n            activitie_info.diemdanh = true;\n          }\n        }\n        return res.render('sinhvien-activeregistration', {\n          header: 'global-header',\n          thongbao: 'global-notifications',\n          footer: 'global-footer',\n          activitie_info: activitie_info,\n          id_acti: query.id\n        });\n      } else {\n        return res.redirect('/');\n      }\n    } catch (err) {\n      return console.log('SYSTEM | HOAT_DONG_DANG_KY_ROUTE | ERROR | ', err);\n    }\n  });\n\n  // 403 route\n  router.get('/403', async (req, res) => {\n    return res.sendFile(path.join(parentDirectory, 'dPage', '403.html'));\n  });\n  return router;\n}\nmodule.exports = createRootRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImNoZWNrSWZVc2VyTG9naW5Sb3V0ZSIsImdldE5hbWVHbG9iYWwiLCJuYW1lX2dsb2JhbF9kYXRhYmFzZXMiLCJwYXRoIiwiY3JlYXRlUm9vdFJvdXRlciIsImNsaWVudCIsInBhcmVudERpcmVjdG9yeSIsImdldCIsInJlcSIsInJlcyIsInNjaG9vbF95ZWFyIiwiZGIiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsInByb2plY3Rpb24iLCJfaWQiLCJ5ZWFyIiwic3RhcnRfZGF5IiwiZW5kX2RheSIsImNoZWNrX3kiLCJ0b2RheSIsIkRhdGUiLCJnZXRUaW1lIiwiZm9yZXZlcl9kYXkiLCJjaGVja195ZWFyIiwidXNlciIsInNlc3Npb24iLCJwb3ciLCJzY2hvb2xZZWFyIiwiY2xzIiwic2Nob29sWWVhcl9hbGwiLCJ5ZWFycyIsInNjaG9vbFllYXJzVG9TZWFyY2giLCJzbGljZSIsImkiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwicHVzaCIsInN0dWRlbnRUb3RhbFNjb3JlcyIsIlByb21pc2UiLCJhbGwiLCJtYXAiLCJkZXBDb2xsZWN0aW9uIiwiZGVwIiwic3RmQ29sbGVjdGlvbiIsInN0ZENvbGxlY3Rpb24iLCJkZXBEb2N1bWVudCIsIm1zc3YiLCJ0b3RhbCIsInN0ZkRvY3VtZW50Iiwic3RkRG9jdW1lbnQiLCJjb25zb2xlIiwibG9nIiwic3R1ZGVudEFjdGl2aXRpZXMiLCJpbmZvX3NlYXJjaCIsImFjdGl2aXRpZV9pbmZvX2xvcCIsImZpbmQiLCIkZXhpc3RzIiwibmFtZSIsInN0dWRlbnRfbGlzdCIsImFpIiwibGV2ZWwiLCJ0b0FycmF5IiwiZm9yRWFjaCIsImVsZW1lbnQiLCJ0aGFtZ2lhIiwia2hlbnRodW9uZyIsImFjdGl2aXRpZV9pbmZvX2tob2EiLCJhY3Rpdml0aWVfaW5mb190cnVvbmciLCJyZW5kZXIiLCJoZWFkZXIiLCJmb290ZXIiLCJ0aG9uZ2JhbyIsImJhbmRpZW0iLCJob2F0ZG9uZyIsImhldGhhbiIsIm5pZW5raG9hIiwiY2hlY2tfY2hhbWRpZW0iLCJzZW5kU3RhdHVzIiwic2VuZCIsIm51bGxsIiwidW5kZWZpbmVkIiwibWVudSIsImVyciIsInJlZGlyZWN0IiwicXVlcnkiLCJkYXRhVXNlciIsImVtYWlsIiwiZW1haWxUb1Nob3ciLCJzdWJzdHJpbmciLCJyZXBlYXQiLCJpbmRleE9mIiwiYXZ0IiwiYWN0aXZpdGllX2luZm8iLCJpZCIsImNvbGxlY3Rpb25zIiwibGlzdENvbGxlY3Rpb25zIiwiYWN0aXZpdHlDb2xsZWN0aW9ucyIsImZpbHRlciIsImVuZHNXaXRoIiwiYWN0aXZpdHlDb2xsZWN0aW9uIiwic3RhdHVzIiwiam9pbiIsImRpZW1kYW5oIiwibGlzdF9zdHVkZW50IiwiaW5mb19zdHVkZW50IiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsImNsYXNzIiwiaWRfYWN0aSIsInNlbmRGaWxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXHByb2plY3RcXHdlYlxcbmV3Q0RSTC0xXFxiYWNrZW5kXFxyb3V0ZXJcXCIsInNvdXJjZXMiOlsicm9vdFJvdXRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgeyBjaGVja0lmVXNlckxvZ2luUm91dGUgfSA9IHJlcXVpcmUoJy4uL2xpYi9mdW5jdGlvbl9saWInKTtcclxuY29uc3QgeyBnZXROYW1lR2xvYmFsIH0gPSByZXF1aXJlKCcuLi9saWIvbW9nb2RiX2xpYicpO1xyXG5jb25zdCBuYW1lX2dsb2JhbF9kYXRhYmFzZXMgPSBnZXROYW1lR2xvYmFsKCk7XHJcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVSb290Um91dGVyKGNsaWVudCwgcGFyZW50RGlyZWN0b3J5KSB7XHJcbiAgICAvLyBpbmRleCByb3V0ZVxyXG4gICAgcm91dGVyLmdldCgnLycsIGNoZWNrSWZVc2VyTG9naW5Sb3V0ZSwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgLy8ga2nhu4NtIHRyYSBjaMOibSDEkWnhu4NtXHJcbiAgICAgICAgY29uc3Qgc2Nob29sX3llYXIgPSBhd2FpdCBjbGllbnRcclxuICAgICAgICAgICAgLmRiKG5hbWVfZ2xvYmFsX2RhdGFiYXNlcylcclxuICAgICAgICAgICAgLmNvbGxlY3Rpb24oJ3NjaG9vbF95ZWFyJylcclxuICAgICAgICAgICAgLmZpbmRPbmUoXHJcbiAgICAgICAgICAgICAgICB7fSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRfZGF5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRfZGF5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIGNvbnN0IGNoZWNrX3kgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCB0b2RheSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICBsZXQgc3RhcnRfZGF5ID0gbmV3IERhdGUoc2Nob29sX3llYXIuc3RhcnRfZGF5KS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgIGxldCBlbmRfZGF5ID0gbmV3IERhdGUoc2Nob29sX3llYXIuZW5kX2RheSkuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICBsZXQgZm9yZXZlcl9kYXkgPSBuZXcgRGF0ZSgnMjAwMy0xMC0xOCcpLmdldFRpbWUoKTsgLy8gc3BlY2lhbCBkYXRlXHJcblxyXG4gICAgICAgICAgICAvLyBjaGVjayBpZiBlbmQgbWFyayB0aW1lIG9yIG5vdFxyXG4gICAgICAgICAgICBpZiAoc3RhcnRfZGF5IDw9IHRvZGF5ICYmICh0b2RheSA8IGVuZF9kYXkgfHwgZW5kX2RheSA9PSBmb3JldmVyX2RheSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBsZXQgY2hlY2tfeWVhciA9IGNoZWNrX3koKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhjaGVja195ZWFyKTtcclxuICAgICAgICAvL1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVzZXIgPSByZXEuc2Vzc2lvbi51c2VyO1xyXG4gICAgICAgICAgICBpZiAodXNlci5wb3dbMF0pIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNjaG9vbFllYXIgPSBhd2FpdCBjbGllbnRcclxuICAgICAgICAgICAgICAgICAgICAuZGIobmFtZV9nbG9iYWxfZGF0YWJhc2VzKVxyXG4gICAgICAgICAgICAgICAgICAgIC5jb2xsZWN0aW9uKCdzY2hvb2xfeWVhcicpXHJcbiAgICAgICAgICAgICAgICAgICAgLmZpbmRPbmUoe30sIHsgcHJvamVjdGlvbjogeyBfaWQ6IDAsIHllYXI6IDEgfSB9KTtcclxuICAgICAgICAgICAgICAgIGlmICh1c2VyLmNsc1swXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjaG9vbFllYXJfYWxsID0gYXdhaXQgY2xpZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kYihuYW1lX2dsb2JhbF9kYXRhYmFzZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb2xsZWN0aW9uKCdjbGFzc2VzJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmRPbmUoeyBfaWQ6IHVzZXIuY2xzWzBdIH0sIHsgcHJvamVjdGlvbjogeyBfaWQ6IDAsIHllYXJzOiAxIH0gfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNjaG9vbFllYXJzVG9TZWFyY2ggPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2Nob29sWWVhcl9hbGwueWVhcnNbc2Nob29sWWVhci55ZWFyLnNsaWNlKDQpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IE9iamVjdC5rZXlzKHNjaG9vbFllYXJfYWxsLnllYXJzW3NjaG9vbFllYXIueWVhci5zbGljZSg0KV0pLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hvb2xZZWFyc1RvU2VhcmNoLnB1c2goYEhLJHtpICsgMX1fYCArIHNjaG9vbFllYXIueWVhci5zbGljZSg0KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJ4eFwiLHNjaG9vbFllYXJfYWxsLnllYXJzW3NjaG9vbFllYXIueWVhci5zbGljZSg0KV0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3R1ZGVudFRvdGFsU2NvcmVzID0gYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hvb2xZZWFyc1RvU2VhcmNoLm1hcChhc3luYyAoeWVhcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFTDrG0gdHJvbmcgYuG6o25nICdfZGVwX3RhYmxlJyB0csaw4bubY1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlcENvbGxlY3Rpb24gPSBjbGllbnQuZGIodXNlci5kZXApLmNvbGxlY3Rpb24odXNlci5jbHNbMF0gKyAnX2RlcF90YWJsZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0ZkNvbGxlY3Rpb24gPSBjbGllbnQuZGIodXNlci5kZXApLmNvbGxlY3Rpb24odXNlci5jbHNbMF0gKyAnX3N0Zl90YWJsZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0ZENvbGxlY3Rpb24gPSBjbGllbnQuZGIodXNlci5kZXApLmNvbGxlY3Rpb24odXNlci5jbHNbMF0gKyAnX3N0ZF90YWJsZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlcERvY3VtZW50ID0gYXdhaXQgZGVwQ29sbGVjdGlvbi5maW5kT25lKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IG1zc3Y6IHVzZXIuX2lkLCBzY2hvb2xfeWVhcjogeWVhciB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHByb2plY3Rpb246IHsgX2lkOiAwLCB0b3RhbDogMSB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlcERvY3VtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWw6IGRlcERvY3VtZW50LnRvdGFsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGZEb2N1bWVudCA9IGF3YWl0IHN0ZkNvbGxlY3Rpb24uZmluZE9uZShcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBtc3N2OiB1c2VyLl9pZCwgc2Nob29sX3llYXI6IHllYXIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBwcm9qZWN0aW9uOiB7IF9pZDogMCwgdG90YWw6IDEgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0ZkRvY3VtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWw6IHN0ZkRvY3VtZW50LnRvdGFsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGREb2N1bWVudCA9IGF3YWl0IHN0ZENvbGxlY3Rpb24uZmluZE9uZShcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBtc3N2OiB1c2VyLl9pZCwgc2Nob29sX3llYXI6IHllYXIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBwcm9qZWN0aW9uOiB7IF9pZDogMCwgdG90YWw6IDEgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0ZERvY3VtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWw6IHN0ZERvY3VtZW50LnRvdGFsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3RhbDogJ0NoxrBhIGPDsyDEkWnhu4NtJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0dWRlbnRUb3RhbFNjb3Jlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0dWRlbnRBY3Rpdml0aWVzID0gYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hvb2xZZWFyc1RvU2VhcmNoLm1hcChhc3luYyAoeWVhcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZm9fc2VhcmNoID0gYHN0dWRlbnRfbGlzdC4ke3VzZXIuX2lkfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGFjdGl2aXRpZV9pbmZvX2xvcCA9IGF3YWl0IGNsaWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGIodXNlci5kZXApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb2xsZWN0aW9uKGAke3VzZXIuY2xzWzBdfV9hY3Rpdml0aWVzYClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2luZm9fc2VhcmNoXTogeyAkZXhpc3RzOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHVkZW50X2xpc3Q6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFpOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbDogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRvQXJyYXkoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZpdGllX2luZm9fbG9wLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm9fbG9wLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmFpICYmIGVsZW1lbnQuYWlbdXNlci5faWRdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC50aGFtZ2lhID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnN0dWRlbnRfbGlzdFt1c2VyLl9pZF0gPT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQua2hlbnRodW9uZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgYWN0aXZpdGllX2luZm9fa2hvYSA9IGF3YWl0IGNsaWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGIodXNlci5kZXApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb2xsZWN0aW9uKCdhY3Rpdml0aWVzJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2luZm9fc2VhcmNoXTogeyAkZXhpc3RzOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHVkZW50X2xpc3Q6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFpOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbDogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudG9BcnJheSgpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZpdGllX2luZm9fa2hvYS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2aXRpZV9pbmZvX2tob2EuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuYWkgJiYgZWxlbWVudC5haVt1c2VyLl9pZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnRoYW1naWEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuc3R1ZGVudF9saXN0W3VzZXIuX2lkXSA9PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5raGVudGh1b25nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgYWN0aXZpdGllX2luZm9fdHJ1b25nID0gYXdhaXQgY2xpZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5kYihuYW1lX2dsb2JhbF9kYXRhYmFzZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb2xsZWN0aW9uKCdhY3Rpdml0aWVzJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2luZm9fc2VhcmNoXTogeyAkZXhpc3RzOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvamVjdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHVkZW50X2xpc3Q6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFpOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbDogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudG9BcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3Rpdml0aWVfaW5mb190cnVvbmcubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpdml0aWVfaW5mb190cnVvbmcuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuYWkgJiYgZWxlbWVudC5haVt1c2VyLl9pZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnRoYW1naWEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuc3R1ZGVudF9saXN0W3VzZXIuX2lkXSA9PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5raGVudGh1b25nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpdml0aWVfaW5mb19sb3A6IGFjdGl2aXRpZV9pbmZvX2xvcCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm9fa2hvYTogYWN0aXZpdGllX2luZm9fa2hvYSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm9fdHJ1b25nOiBhY3Rpdml0aWVfaW5mb190cnVvbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1swXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzFdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbMl0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1szXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzRdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNV0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s2XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzddICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbOF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignc2luaHZpZW4taW5kZXgnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9vdGVyOiAnZ2xvYmFsLWZvb3RlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhvbmdiYW86ICdnbG9iYWwtbm90aWZpY2F0aW9ucycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFuZGllbTogc3R1ZGVudFRvdGFsU2NvcmVzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvYXRkb25nOiBzdHVkZW50QWN0aXZpdGllcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXRoYW46IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5pZW5raG9hOiBPYmplY3Qua2V5cyhzY2hvb2xZZWFyX2FsbC55ZWFycyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tfY2hhbWRpZW06IGNoZWNrX3llYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzBdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1sxXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzJdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1szXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzRdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNV0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s2XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzddICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbOF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignYmFuY2Fuc3UtaW5kZXgnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9vdGVyOiAnZ2xvYmFsLWZvb3RlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhvbmdiYW86ICdnbG9iYWwtbm90aWZpY2F0aW9ucycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG93OiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbmRpZW06IHN0dWRlbnRUb3RhbFNjb3JlcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2F0ZG9uZzogc3R1ZGVudEFjdGl2aXRpZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGV0aGFuOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuaWVua2hvYTogT2JqZWN0LmtleXMoc2Nob29sWWVhcl9hbGwueWVhcnMpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrX2NoYW1kaWVtOiBjaGVja195ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1swXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbMV0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1syXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzNdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNF0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s1XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzZdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbN10gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s4XVxyXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMucmVuZGVyKCdiYW5jYW5zdS1pbmRleCcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXI6ICdnbG9iYWwtaGVhZGVyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb290ZXI6ICdnbG9iYWwtZm9vdGVyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aG9uZ2JhbzogJ2dsb2JhbC1ub3RpZmljYXRpb25zJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3c6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFuZGllbTogc3R1ZGVudFRvdGFsU2NvcmVzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvYXRkb25nOiBzdHVkZW50QWN0aXZpdGllcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXRoYW46IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5pZW5raG9hOiBPYmplY3Qua2V5cyhzY2hvb2xZZWFyX2FsbC55ZWFycyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tfY2hhbWRpZW06IGNoZWNrX3llYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzBdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbMV0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1syXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbM10gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s0XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzVdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNl0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s3XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzhdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ2JhbmNhbnN1LWluZGV4Jywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogJ2dsb2JhbC1oZWFkZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvdzogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYW5kaWVtOiBzdHVkZW50VG90YWxTY29yZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9hdGRvbmc6IHN0dWRlbnRBY3Rpdml0aWVzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhldGhhbjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmllbmtob2E6IE9iamVjdC5rZXlzKHNjaG9vbFllYXJfYWxsLnllYXJzKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja19jaGFtZGllbTogY2hlY2tfeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJ4eFwiLHNjaG9vbFllYXJfYWxsLnllYXJzW3NjaG9vbFllYXIueWVhci5zbGljZSg0KV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDM7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nob29sWWVhcnNUb1NlYXJjaC5wdXNoKGBISyR7aSArIDF9X2AgKyBzY2hvb2xZZWFyLnllYXIuc2xpY2UoNCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0dWRlbnRUb3RhbFNjb3JlcyA9IGF3YWl0IFByb21pc2UuYWxsKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nob29sWWVhcnNUb1NlYXJjaC5tYXAoYXN5bmMgKHllYXIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBUw6xtIHRyb25nIGLhuqNuZyAnX2RlcF90YWJsZScgdHLGsOG7m2NcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZXBDb2xsZWN0aW9uID0gY2xpZW50LmRiKHVzZXIuZGVwKS5jb2xsZWN0aW9uKHVzZXIuY2xzWzBdICsgJ19kZXBfdGFibGUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGZDb2xsZWN0aW9uID0gY2xpZW50LmRiKHVzZXIuZGVwKS5jb2xsZWN0aW9uKHVzZXIuY2xzWzBdICsgJ19zdGZfdGFibGUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGRDb2xsZWN0aW9uID0gY2xpZW50LmRiKHVzZXIuZGVwKS5jb2xsZWN0aW9uKHVzZXIuY2xzWzBdICsgJ19zdGRfdGFibGUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZXBEb2N1bWVudCA9IGF3YWl0IGRlcENvbGxlY3Rpb24uZmluZE9uZShcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBtc3N2OiB1c2VyLl9pZCwgc2Nob29sX3llYXI6IHllYXIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBwcm9qZWN0aW9uOiB7IF9pZDogMCwgdG90YWw6IDEgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkZXBEb2N1bWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsOiBkZXBEb2N1bWVudC50b3RhbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RmRG9jdW1lbnQgPSBhd2FpdCBzdGZDb2xsZWN0aW9uLmZpbmRPbmUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgbXNzdjogdXNlci5faWQsIHNjaG9vbF95ZWFyOiB5ZWFyIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcHJvamVjdGlvbjogeyBfaWQ6IDAsIHRvdGFsOiAxIH0gfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGZEb2N1bWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsOiBzdGZEb2N1bWVudC50b3RhbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RkRG9jdW1lbnQgPSBhd2FpdCBzdGRDb2xsZWN0aW9uLmZpbmRPbmUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgbXNzdjogdXNlci5faWQsIHNjaG9vbF95ZWFyOiB5ZWFyIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcHJvamVjdGlvbjogeyBfaWQ6IDAsIHRvdGFsOiAxIH0gfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGREb2N1bWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsOiBzdGREb2N1bWVudC50b3RhbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWw6ICdDaMawYSBjw7MgxJFp4buDbScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdHVkZW50VG90YWxTY29yZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdHVkZW50QWN0aXZpdGllcyA9IGF3YWl0IFByb21pc2UuYWxsKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nob29sWWVhcnNUb1NlYXJjaC5tYXAoYXN5bmMgKHllYXIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmZvX3NlYXJjaCA9IGBzdHVkZW50X2xpc3QuJHt1c2VyLl9pZH1gO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhY3Rpdml0aWVfaW5mb19sb3AgPSBhd2FpdCBjbGllbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRiKHVzZXIuZGVwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29sbGVjdGlvbihgJHt1c2VyLmNsc1swXX1fYWN0aXZpdGllc2ApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtpbmZvX3NlYXJjaF06IHsgJGV4aXN0czogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IHllYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3Rpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R1ZGVudF9saXN0OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50b0FycmF5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGl2aXRpZV9pbmZvX2xvcC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2aXRpZV9pbmZvX2xvcC5mb3JFYWNoKChlbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5haSAmJiBlbGVtZW50LmFpW3VzZXIuX2lkXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQudGhhbWdpYSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5zdHVkZW50X2xpc3RbdXNlci5faWRdID09IDIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmtoZW50aHVvbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGFjdGl2aXRpZV9pbmZvX2tob2EgPSBhd2FpdCBjbGllbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRiKHVzZXIuZGVwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29sbGVjdGlvbignYWN0aXZpdGllcycpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtpbmZvX3NlYXJjaF06IHsgJGV4aXN0czogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IHllYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3Rpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R1ZGVudF9saXN0OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRvQXJyYXkoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGl2aXRpZV9pbmZvX2tob2EubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpdml0aWVfaW5mb19raG9hLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmFpICYmIGVsZW1lbnQuYWlbdXNlci5faWRdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC50aGFtZ2lhID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnN0dWRlbnRfbGlzdFt1c2VyLl9pZF0gPT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQua2hlbnRodW9uZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGFjdGl2aXRpZV9pbmZvX3RydW9uZyA9IGF3YWl0IGNsaWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGIobmFtZV9nbG9iYWxfZGF0YWJhc2VzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29sbGVjdGlvbignYWN0aXZpdGllcycpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtpbmZvX3NlYXJjaF06IHsgJGV4aXN0czogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IHllYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3Rpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R1ZGVudF9saXN0OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhaTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRvQXJyYXkoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZpdGllX2luZm9fdHJ1b25nLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm9fdHJ1b25nLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmFpICYmIGVsZW1lbnQuYWlbdXNlci5faWRdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC50aGFtZ2lhID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnN0dWRlbnRfbGlzdFt1c2VyLl9pZF0gPT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQua2hlbnRodW9uZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm9fbG9wOiBhY3Rpdml0aWVfaW5mb19sb3AsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2aXRpZV9pbmZvX2tob2E6IGFjdGl2aXRpZV9pbmZvX2tob2EsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2aXRpZV9pbmZvX3RydW9uZzogYWN0aXZpdGllX2luZm9fdHJ1b25nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbMF0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1sxXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzJdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbM10gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s0XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzVdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNl0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s3XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzhdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ3Npbmh2aWVuLWluZGV4Jywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogJ2dsb2JhbC1oZWFkZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbmRpZW06IHN0dWRlbnRUb3RhbFNjb3JlcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2F0ZG9uZzogc3R1ZGVudEFjdGl2aXRpZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGV0aGFuOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5pZW5raG9hOiBPYmplY3Qua2V5cyhzY2hvb2xZZWFyX2FsbC55ZWFycyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tfY2hhbWRpZW06IGNoZWNrX3llYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzBdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1sxXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzJdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1szXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzRdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNV0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s2XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzddICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbOF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignYmFuY2Fuc3UtaW5kZXgnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9vdGVyOiAnZ2xvYmFsLWZvb3RlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhvbmdiYW86ICdnbG9iYWwtbm90aWZpY2F0aW9ucycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG93OiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbmRpZW06IHN0dWRlbnRUb3RhbFNjb3JlcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2F0ZG9uZzogc3R1ZGVudEFjdGl2aXRpZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGV0aGFuOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5pZW5raG9hOiBPYmplY3Qua2V5cyhzY2hvb2xZZWFyX2FsbC55ZWFycyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tfY2hhbWRpZW06IGNoZWNrX3llYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzBdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1sxXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzJdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbM10gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s0XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzVdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNl0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s3XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzhdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ2JhbmNhbnN1LWluZGV4Jywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogJ2dsb2JhbC1oZWFkZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvdzogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYW5kaWVtOiBzdHVkZW50VG90YWxTY29yZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9hdGRvbmc6IHN0dWRlbnRBY3Rpdml0aWVzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhldGhhbjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuaWVua2hvYTogT2JqZWN0LmtleXMoc2Nob29sWWVhcl9hbGwueWVhcnMpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrX2NoYW1kaWVtOiBjaGVja195ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1swXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzFdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbMl0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzNdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNF0gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s1XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzZdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbN10gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1s4XVxyXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMucmVuZGVyKCdiYW5jYW5zdS1pbmRleCcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXI6ICdnbG9iYWwtaGVhZGVyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb290ZXI6ICdnbG9iYWwtZm9vdGVyJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aG9uZ2JhbzogJ2dsb2JhbC1ub3RpZmljYXRpb25zJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3c6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFuZGllbTogc3R1ZGVudFRvdGFsU2NvcmVzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvYXRkb25nOiBzdHVkZW50QWN0aXZpdGllcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXRoYW46IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmllbmtob2E6IE9iamVjdC5rZXlzKHNjaG9vbFllYXJfYWxsLnllYXJzKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja19jaGFtZGllbTogY2hlY2tfeWVhcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnNlbmRTdGF0dXMoNDAzKS5zZW5kKCdTaW5oIHZpw6puIMSRw6MgdOG7kXQgbmdoaeG7h3AnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbMF0gJiZcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1sxXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICF1c2VyLnBvd1syXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzNdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbNF0gJiZcclxuICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNV0gJiZcclxuICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbNl0gJiZcclxuICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbN10gJiZcclxuICAgICAgICAgICAgICAgICAgICAhdXNlci5wb3dbOF1cclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0dWRlbnRfbGlzdCA9IHVzZXIuY2xzWzBdO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBudWxsbCA9IFsxXTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcigndGVhY2hlci1pbmRleCcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0dWRlbnRfbGlzdDogc3R1ZGVudF9saXN0ICE9IHVuZGVmaW5lZCA/IHN0dWRlbnRfbGlzdCA6IG51bGxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb290ZXI6ICdnbG9iYWwtZm9vdGVyJyxcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzBdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgIXVzZXIucG93WzFdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbMl0gJiZcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1szXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzRdICYmXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbNV0gJiZcclxuICAgICAgICAgICAgICAgICAgICB1c2VyLnBvd1s2XSAmJlxyXG4gICAgICAgICAgICAgICAgICAgIHVzZXIucG93WzddICYmXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlci5wb3dbOF1cclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMucmVuZGVyKCdkb2Fua2hvYS1pbmRleCcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZW51OiAnZG9hbmtob2EtbWVudScsXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1NZU1RFTSB8IElOREVYX1JPVVRFIHwgRVJST1IgfCAnLCBlcnIpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIHhhYyB0aHVjIHJvdXRlXHJcbiAgICByb3V0ZXIuZ2V0KCcvdmVyaWZ5T1RQJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXI7XHJcbiAgICAgICAgICAgIGlmICh1c2VyKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KCcvJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgbXNzdiA9IHJlcS5xdWVyeS5tc3N2O1xyXG4gICAgICAgICAgICBjb25zdCBkYXRhVXNlciA9IGF3YWl0IGNsaWVudFxyXG4gICAgICAgICAgICAgICAgLmRiKG5hbWVfZ2xvYmFsX2RhdGFiYXNlcylcclxuICAgICAgICAgICAgICAgIC5jb2xsZWN0aW9uKCd1c2VyX2luZm8nKVxyXG4gICAgICAgICAgICAgICAgLmZpbmRPbmUoeyBfaWQ6IG1zc3YgfSwgeyBwcm9qZWN0aW9uOiB7IF9pZDogMCwgZW1haWw6IDEgfSB9KTtcclxuICAgICAgICAgICAgbGV0IGVtYWlsVG9TaG93ID0gJyc7XHJcbiAgICAgICAgICAgIGlmIChkYXRhVXNlcikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZW1haWwgPSBkYXRhVXNlci5lbWFpbDtcclxuICAgICAgICAgICAgICAgIGVtYWlsVG9TaG93ID1cclxuICAgICAgICAgICAgICAgICAgICBlbWFpbC5zdWJzdHJpbmcoMCwgMykgKyAnKicucmVwZWF0KGVtYWlsLmluZGV4T2YoJ0AnKSAtIDMpICsgZW1haWwuc3Vic3RyaW5nKGVtYWlsLmluZGV4T2YoJ0AnKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ2dsb2JhbC12ZXJpZnktb3RwJywge1xyXG4gICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICBmb290ZXI6ICdnbG9iYWwtZm9vdGVyJyxcclxuICAgICAgICAgICAgICAgIGF2dDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsVG9TaG93LFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1NZU1RFTSB8IE9UUF9ST1VURSB8IEVSUk9SIHwgJywgZXJyKTtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ2dsb2JhbC12ZXJpZnktb3RwJywge1xyXG4gICAgICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgICAgICBmb290ZXI6ICdnbG9iYWwtZm9vdGVyJyxcclxuICAgICAgICAgICAgICAgIGF2dDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgZW1haWw6ICcnLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBRdWVuIG1hdCBraGF1XHJcbiAgICByb3V0ZXIuZ2V0KCcvcXVlbm1hdGtoYXUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBjb25zdCB1c2VyID0gcmVxLnNlc3Npb24udXNlcjtcclxuICAgICAgICBpZiAodXNlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KCcvJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXMucmVuZGVyKCdnbG9iYWwtZm9yZ290LXBhc3N3b3JkJywge1xyXG4gICAgICAgICAgICBoZWFkZXI6ICdnbG9iYWwtaGVhZGVyJyxcclxuICAgICAgICAgICAgZm9vdGVyOiAnZ2xvYmFsLWZvb3RlcicsXHJcbiAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICBhdnQ6IG51bGwsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByb3V0ZXIuZ2V0KCcvZGFuZ2t5aG9hdGRvbmcnLCBjaGVja0lmVXNlckxvZ2luUm91dGUsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gcmVxLnF1ZXJ5O1xyXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gcmVxLnNlc3Npb24udXNlcjtcclxuICAgICAgICAgICAgbGV0IGFjdGl2aXRpZV9pbmZvO1xyXG4gICAgICAgICAgICBpZiAocXVlcnkuaWQgJiYgcXVlcnkubGV2ZWwpIHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAocXVlcnkubGV2ZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdsb3AnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlci5wb3dbMF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2aXRpZV9pbmZvID0gYXdhaXQgY2xpZW50LmRiKHVzZXIuZGVwKS5jb2xsZWN0aW9uKGAke3VzZXIuY2xzWzBdfV9hY3Rpdml0aWVzYCkuZmluZE9uZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiBxdWVyeS5pZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codXNlci5jbHNbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29sbGVjdGlvbnMgPSBhd2FpdCBjbGllbnQuZGIodXNlci5kZXApLmxpc3RDb2xsZWN0aW9ucygpLnRvQXJyYXkoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZpbHRlciBjb2xsZWN0aW9ucyBlbmRpbmcgd2l0aCAnX2FjdGl2aXRpZXMnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhY3Rpdml0eUNvbGxlY3Rpb25zID0gYXdhaXQgY29sbGVjdGlvbnMuZmlsdGVyKChjb2xsZWN0aW9uKSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb24ubmFtZS5lbmRzV2l0aCgnX2FjdGl2aXRpZXMnKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBMb29wIHRocm91Z2ggYWN0aXZpdHkgY29sbGVjdGlvbnMgYW5kIHJldHJpZXZlIGFsbCBkb2N1bWVudHNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYWN0aXZpdHlDb2xsZWN0aW9uIG9mIGFjdGl2aXR5Q29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpdml0aWVfaW5mbyA9IGF3YWl0IGNsaWVudC5kYih1c2VyLmRlcCkuY29sbGVjdGlvbihhY3Rpdml0eUNvbGxlY3Rpb24ubmFtZSkuZmluZE9uZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogcXVlcnkuaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGl2aXRpZV9pbmZvKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOyAvLyBUaG/DoXQga2jhu49pIHbDsm5nIGzhurdwIGtoaSB0w6xtIHRo4bqleSBr4bq/dCBxdeG6o1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdraG9hJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm8gPSBhd2FpdCBjbGllbnQuZGIodXNlci5kZXApLmNvbGxlY3Rpb24oJ2FjdGl2aXRpZXMnKS5maW5kT25lKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogcXVlcnkuaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICd0cnVvbmcnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3Rpdml0aWVfaW5mbyA9IGF3YWl0IGNsaWVudC5kYihuYW1lX2dsb2JhbF9kYXRhYmFzZXMpLmNvbGxlY3Rpb24oJ2FjdGl2aXRpZXMnKS5maW5kT25lKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogcXVlcnkuaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICghYWN0aXZpdGllX2luZm8pIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLnNlbmQoJ05vdCBGb3VuZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm8uam9pbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm8uZGllbWRhbmggPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGlmIChhY3Rpdml0aWVfaW5mby5zdHVkZW50X2xpc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBsaXN0X3N0dWRlbnQgPSBPYmplY3Qua2V5cyhhY3Rpdml0aWVfaW5mby5zdHVkZW50X2xpc3QpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpbmZvX3N0dWRlbnQgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3Rfc3R1ZGVudC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZvX3N0dWRlbnQucHVzaChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IGNsaWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5kYihuYW1lX2dsb2JhbF9kYXRhYmFzZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJfaW5mbycpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmRPbmUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pZDogbGlzdF9zdHVkZW50W2ldLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHByb2plY3Rpb246IHsgZmlyc3RfbmFtZTogMSwgbGFzdF9uYW1lOiAxLCBjbGFzczogMSB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm8uaW5mb19zdHVkZW50ID0gaW5mb19zdHVkZW50O1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh1c2VyLl9pZCBpbiBhY3Rpdml0aWVfaW5mby5zdHVkZW50X2xpc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm8uam9pbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChhY3Rpdml0aWVfaW5mby5haSAmJiB1c2VyLl9pZCBpbiBhY3Rpdml0aWVfaW5mby5haSAmJiBhY3Rpdml0aWVfaW5mby5haVt1c2VyLl9pZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllX2luZm8uZGllbWRhbmggPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignc2luaHZpZW4tYWN0aXZlcmVnaXN0cmF0aW9uJywge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcjogJ2dsb2JhbC1oZWFkZXInLFxyXG4gICAgICAgICAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2aXRpZV9pbmZvOiBhY3Rpdml0aWVfaW5mbyxcclxuICAgICAgICAgICAgICAgICAgICBpZF9hY3RpOiBxdWVyeS5pZCxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdCgnLycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZygnU1lTVEVNIHwgSE9BVF9ET05HX0RBTkdfS1lfUk9VVEUgfCBFUlJPUiB8ICcsIGVycik7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gNDAzIHJvdXRlXHJcbiAgICByb3V0ZXIuZ2V0KCcvNDAzJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4ocGFyZW50RGlyZWN0b3J5LCAnZFBhZ2UnLCAnNDAzLmh0bWwnKSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gcm91dGVyO1xyXG59XHJcbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlUm9vdFJvdXRlcjtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQU0sQ0FBQyxDQUFDO0FBQy9CLE1BQU07RUFBRUM7QUFBc0IsQ0FBQyxHQUFHSCxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFDaEUsTUFBTTtFQUFFSTtBQUFjLENBQUMsR0FBR0os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","map":{"version":3,"names":["express","require","router","Router","checkIfUserLoginRoute","getNameGlobal","name_global_databases","path","createRootRouter","client","parentDirectory","get","req","res","school_year","db","collection","findOne","projection","_id","year","start_day","end_day","check_y","today","Date","getTime","forever_day","check_year","user","session","pow","schoolYear","cls","schoolYear_all","years","schoolYearsToSearch","slice","i","Object","keys","length","push","studentTotalScores","Promise","all","map","depCollection","dep","stfCollection","stdCollection","depDocument","mssv","total","stfDocument","stdDocument","console","log","studentActivities","info_search","activitie_info_lop","find","$exists","name","student_list","ai","level","toArray","forEach","element","thamgia","khenthuong","activitie_info_khoa","activitie_info_truong","render","header","footer","thongbao","bandiem","hoatdong","hethan","nienkhoa","check_chamdiem","sendStatus","send","nulll","undefined","menu","err","redirect","query","dataUser","email","emailToShow","substring","repeat","indexOf","avt","activitie_info","id","collections","listCollections","activityCollections","filter","endsWith","activityCollection","status","join","diemdanh","list_student","info_student","first_name","last_name","class","id_acti","sendFile","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["rootRouters.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst { checkIfUserLoginRoute } = require('../lib/function_lib');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nconst path = require('path');\r\n\r\nfunction createRootRouter(client, parentDirectory) {\r\n    // index route\r\n    router.get('/', checkIfUserLoginRoute, async (req, res) => {\r\n        // kiểm tra châm điểm\r\n        const school_year = await client\r\n            .db(name_global_databases)\r\n            .collection('school_year')\r\n            .findOne(\r\n                {},\r\n                {\r\n                    projection: {\r\n                        _id: 0,\r\n                        year: 1,\r\n                        start_day: 1,\r\n                        end_day: 1,\r\n                    },\r\n                },\r\n            );\r\n        const check_y = () => {\r\n            let today = new Date().getTime();\r\n            let start_day = new Date(school_year.start_day).getTime();\r\n            let end_day = new Date(school_year.end_day).getTime();\r\n            let forever_day = new Date('2003-10-18').getTime(); // special date\r\n\r\n            // check if end mark time or not\r\n            if (start_day <= today && (today < end_day || end_day == forever_day)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n        let check_year = check_y();\r\n        // console.log(check_year);\r\n        //\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[0]) {\r\n                const schoolYear = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne({}, { projection: { _id: 0, year: 1 } });\r\n                if (user.cls[0]) {\r\n                    const schoolYear_all = await client\r\n                        .db(name_global_databases)\r\n                        .collection('classes')\r\n                        .findOne({ _id: user.cls[0] }, { projection: { _id: 0, years: 1 } });\r\n                    let schoolYearsToSearch = [];\r\n                    if (schoolYear_all.years[schoolYear.year.slice(4)]) {\r\n                        for (let i = 0; i < Object.keys(schoolYear_all.years[schoolYear.year.slice(4)]).length; i++) {\r\n                            schoolYearsToSearch.push(`HK${i + 1}_` + schoolYear.year.slice(4));\r\n                        }\r\n                        // console.log(\"xx\",schoolYear_all.years[schoolYear.year.slice(4)]);\r\n\r\n                        const studentTotalScores = await Promise.all(\r\n                            schoolYearsToSearch.map(async (year) => {\r\n                                // Tìm trong bảng '_dep_table' trước\r\n                                const depCollection = client.db(user.dep).collection(user.cls[0] + '_dep_table');\r\n                                const stfCollection = client.db(user.dep).collection(user.cls[0] + '_stf_table');\r\n                                const stdCollection = client.db(user.dep).collection(user.cls[0] + '_std_table');\r\n                                const depDocument = await depCollection.findOne(\r\n                                    { mssv: user._id, school_year: year },\r\n                                    { projection: { _id: 0, total: 1 } },\r\n                                );\r\n\r\n                                if (depDocument) {\r\n                                    return {\r\n                                        year: year,\r\n                                        total: depDocument.total,\r\n                                    };\r\n                                }\r\n                                const stfDocument = await stfCollection.findOne(\r\n                                    { mssv: user._id, school_year: year },\r\n                                    { projection: { _id: 0, total: 1 } },\r\n                                );\r\n                                if (stfDocument) {\r\n                                    return {\r\n                                        year: year,\r\n                                        total: stfDocument.total,\r\n                                    };\r\n                                }\r\n                                const stdDocument = await stdCollection.findOne(\r\n                                    { mssv: user._id, school_year: year },\r\n                                    { projection: { _id: 0, total: 1 } },\r\n                                );\r\n                                if (stdDocument) {\r\n                                    return {\r\n                                        year: year,\r\n                                        total: stdDocument.total,\r\n                                    };\r\n                                }\r\n                                return {\r\n                                    year: year,\r\n                                    total: 'Chưa có điểm',\r\n                                };\r\n                            }),\r\n                        );\r\n                        console.log(studentTotalScores);\r\n                        const studentActivities = await Promise.all(\r\n                            schoolYearsToSearch.map(async (year) => {\r\n                                info_search = `student_list.${user._id}`;\r\n                                let activitie_info_lop = await client\r\n                                    .db(user.dep)\r\n                                    .collection(`${user.cls[0]}_activities`)\r\n                                    .find(\r\n                                        {\r\n                                            [info_search]: { $exists: true },\r\n                                            year: year,\r\n                                        },\r\n                                        {\r\n                                            projection: {\r\n                                                name: 1,\r\n                                                student_list: 1,\r\n                                                ai: 1,\r\n                                                level: 1,\r\n                                            },\r\n                                        },\r\n                                    )\r\n\r\n                                    .toArray();\r\n                                if (activitie_info_lop.length > 0) {\r\n                                    activitie_info_lop.forEach((element) => {\r\n                                        if (element.ai && element.ai[user._id]) {\r\n                                            element.thamgia = true;\r\n                                        }\r\n                                        if (element.student_list[user._id] == 2) {\r\n                                            element.khenthuong = true;\r\n                                        }\r\n                                    });\r\n                                }\r\n                                let activitie_info_khoa = await client\r\n                                    .db(user.dep)\r\n                                    .collection('activities')\r\n                                    .find(\r\n                                        {\r\n                                            [info_search]: { $exists: true },\r\n                                            year: year,\r\n                                        },\r\n                                        {\r\n                                            projection: {\r\n                                                name: 1,\r\n                                                student_list: 1,\r\n                                                ai: 1,\r\n                                                level: 1,\r\n                                            },\r\n                                        },\r\n                                    )\r\n                                    .toArray();\r\n\r\n                                if (activitie_info_khoa.length > 0) {\r\n                                    activitie_info_khoa.forEach((element) => {\r\n                                        if (element.ai && element.ai[user._id]) {\r\n                                            element.thamgia = true;\r\n                                        }\r\n                                        if (element.student_list[user._id] == 2) {\r\n                                            element.khenthuong = true;\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                let activitie_info_truong = await client\r\n                                    .db(name_global_databases)\r\n                                    .collection('activities')\r\n                                    .find(\r\n                                        {\r\n                                            [info_search]: { $exists: true },\r\n                                            year: year,\r\n                                        },\r\n                                        {\r\n                                            projection: {\r\n                                                name: 1,\r\n                                                student_list: 1,\r\n                                                ai: 1,\r\n                                                level: 1,\r\n                                            },\r\n                                        },\r\n                                    )\r\n                                    .toArray();\r\n                                if (activitie_info_truong.length > 0) {\r\n                                    activitie_info_truong.forEach((element) => {\r\n                                        if (element.ai && element.ai[user._id]) {\r\n                                            element.thamgia = true;\r\n                                        }\r\n                                        if (element.student_list[user._id] == 2) {\r\n                                            element.khenthuong = true;\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                return {\r\n                                    year: year,\r\n                                    activitie_info_lop: activitie_info_lop,\r\n                                    activitie_info_khoa: activitie_info_khoa,\r\n                                    activitie_info_truong: activitie_info_truong,\r\n                                };\r\n                            }),\r\n                        );\r\n                        if (\r\n                            user.pow[0] &&\r\n                            !user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            !user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('sinhvien-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: false,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        } else if (\r\n                            user.pow[0] &&\r\n                            user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('bancansu-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                pow: 0,\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: false,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        } else if (\r\n                            user.pow[0] &&\r\n                            user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            !user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('bancansu-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                pow: 1,\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: false,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        } else if (\r\n                            user.pow[0] &&\r\n                            !user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('bancansu-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                pow: 2,\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: false,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        // console.log(\"xx\",schoolYear_all.years[schoolYear.year.slice(4)]);\r\n                        for (let i = 0; i < 3; i++) {\r\n                            schoolYearsToSearch.push(`HK${i + 1}_` + schoolYear.year.slice(4));\r\n                        }\r\n                        const studentTotalScores = await Promise.all(\r\n                            schoolYearsToSearch.map(async (year) => {\r\n                                // Tìm trong bảng '_dep_table' trước\r\n                                const depCollection = client.db(user.dep).collection(user.cls[0] + '_dep_table');\r\n                                const stfCollection = client.db(user.dep).collection(user.cls[0] + '_stf_table');\r\n                                const stdCollection = client.db(user.dep).collection(user.cls[0] + '_std_table');\r\n                                const depDocument = await depCollection.findOne(\r\n                                    { mssv: user._id, school_year: year },\r\n                                    { projection: { _id: 0, total: 1 } },\r\n                                );\r\n\r\n                                if (depDocument) {\r\n                                    return {\r\n                                        year: year,\r\n                                        total: depDocument.total,\r\n                                    };\r\n                                }\r\n                                const stfDocument = await stfCollection.findOne(\r\n                                    { mssv: user._id, school_year: year },\r\n                                    { projection: { _id: 0, total: 1 } },\r\n                                );\r\n                                if (stfDocument) {\r\n                                    return {\r\n                                        year: year,\r\n                                        total: stfDocument.total,\r\n                                    };\r\n                                }\r\n                                const stdDocument = await stdCollection.findOne(\r\n                                    { mssv: user._id, school_year: year },\r\n                                    { projection: { _id: 0, total: 1 } },\r\n                                );\r\n                                if (stdDocument) {\r\n                                    return {\r\n                                        year: year,\r\n                                        total: stdDocument.total,\r\n                                    };\r\n                                }\r\n                                return {\r\n                                    year: year,\r\n                                    total: 'Chưa có điểm',\r\n                                };\r\n                            }),\r\n                        );\r\n                        console.log(studentTotalScores);\r\n                        const studentActivities = await Promise.all(\r\n                            schoolYearsToSearch.map(async (year) => {\r\n                                info_search = `student_list.${user._id}`;\r\n                                let activitie_info_lop = await client\r\n                                    .db(user.dep)\r\n                                    .collection(`${user.cls[0]}_activities`)\r\n                                    .find(\r\n                                        {\r\n                                            [info_search]: { $exists: true },\r\n                                            year: year,\r\n                                        },\r\n                                        {\r\n                                            projection: {\r\n                                                name: 1,\r\n                                                student_list: 1,\r\n                                                ai: 1,\r\n                                                level: 1,\r\n                                            },\r\n                                        },\r\n                                    )\r\n\r\n                                    .toArray();\r\n                                if (activitie_info_lop.length > 0) {\r\n                                    activitie_info_lop.forEach((element) => {\r\n                                        if (element.ai && element.ai[user._id]) {\r\n                                            element.thamgia = true;\r\n                                        }\r\n                                        if (element.student_list[user._id] == 2) {\r\n                                            element.khenthuong = true;\r\n                                        }\r\n                                    });\r\n                                }\r\n                                let activitie_info_khoa = await client\r\n                                    .db(user.dep)\r\n                                    .collection('activities')\r\n                                    .find(\r\n                                        {\r\n                                            [info_search]: { $exists: true },\r\n                                            year: year,\r\n                                        },\r\n                                        {\r\n                                            projection: {\r\n                                                name: 1,\r\n                                                student_list: 1,\r\n                                                ai: 1,\r\n                                                level: 1,\r\n                                            },\r\n                                        },\r\n                                    )\r\n                                    .toArray();\r\n\r\n                                if (activitie_info_khoa.length > 0) {\r\n                                    activitie_info_khoa.forEach((element) => {\r\n                                        if (element.ai && element.ai[user._id]) {\r\n                                            element.thamgia = true;\r\n                                        }\r\n                                        if (element.student_list[user._id] == 2) {\r\n                                            element.khenthuong = true;\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                let activitie_info_truong = await client\r\n                                    .db(name_global_databases)\r\n                                    .collection('activities')\r\n                                    .find(\r\n                                        {\r\n                                            [info_search]: { $exists: true },\r\n                                            year: year,\r\n                                        },\r\n                                        {\r\n                                            projection: {\r\n                                                name: 1,\r\n                                                student_list: 1,\r\n                                                ai: 1,\r\n                                                level: 1,\r\n                                            },\r\n                                        },\r\n                                    )\r\n                                    .toArray();\r\n                                if (activitie_info_truong.length > 0) {\r\n                                    activitie_info_truong.forEach((element) => {\r\n                                        if (element.ai && element.ai[user._id]) {\r\n                                            element.thamgia = true;\r\n                                        }\r\n                                        if (element.student_list[user._id] == 2) {\r\n                                            element.khenthuong = true;\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                return {\r\n                                    year: year,\r\n                                    activitie_info_lop: activitie_info_lop,\r\n                                    activitie_info_khoa: activitie_info_khoa,\r\n                                    activitie_info_truong: activitie_info_truong,\r\n                                };\r\n                            }),\r\n                        );\r\n                        if (\r\n                            user.pow[0] &&\r\n                            !user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            !user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('sinhvien-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: true,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        } else if (\r\n                            user.pow[0] &&\r\n                            user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('bancansu-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                pow: 0,\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: true,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        } else if (\r\n                            user.pow[0] &&\r\n                            user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            !user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('bancansu-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                pow: 1,\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: true,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        } else if (\r\n                            user.pow[0] &&\r\n                            !user.pow[1] &&\r\n                            !user.pow[2] &&\r\n                            user.pow[3] &&\r\n                            !user.pow[4] &&\r\n                            !user.pow[5] &&\r\n                            !user.pow[6] &&\r\n                            !user.pow[7] &&\r\n                            !user.pow[8]\r\n                        ) {\r\n                            return res.render('bancansu-index', {\r\n                                header: 'global-header',\r\n                                footer: 'global-footer',\r\n                                thongbao: 'global-notifications',\r\n                                pow: 2,\r\n                                bandiem: studentTotalScores,\r\n                                hoatdong: studentActivities,\r\n                                hethan: true,\r\n                                nienkhoa: Object.keys(schoolYear_all.years),\r\n                                check_chamdiem: check_year,\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    return res.sendStatus(403).send('Sinh viên đã tốt nghiệp');\r\n                }\r\n            } else {\r\n                if (\r\n                    !user.pow[0] &&\r\n                    user.pow[1] &&\r\n                    !user.pow[2] &&\r\n                    user.pow[3] &&\r\n                    user.pow[4] &&\r\n                    !user.pow[5] &&\r\n                    !user.pow[6] &&\r\n                    !user.pow[7] &&\r\n                    !user.pow[8]\r\n                ) {\r\n                    const student_list = user.cls[0];\r\n\r\n                    const nulll = [1];\r\n                    return res.render('teacher-index', {\r\n                        header: 'global-header',\r\n                        student_list: student_list != undefined ? student_list : nulll,\r\n                        footer: 'global-footer',\r\n                    });\r\n                } else if (\r\n                    !user.pow[0] &&\r\n                    !user.pow[1] &&\r\n                    user.pow[2] &&\r\n                    user.pow[3] &&\r\n                    user.pow[4] &&\r\n                    user.pow[5] &&\r\n                    user.pow[6] &&\r\n                    user.pow[7] &&\r\n                    user.pow[8]\r\n                ) {\r\n                    return res.render('doankhoa-index', {\r\n                        header: 'global-header',\r\n                        footer: 'global-footer',\r\n                        menu: 'doankhoa-menu',\r\n                    });\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | INDEX_ROUTE | ERROR | ', err);\r\n        }\r\n    });\r\n\r\n    // xac thuc route\r\n    router.get('/verifyOTP', async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user) {\r\n                return res.redirect('/');\r\n            }\r\n            const mssv = req.query.mssv;\r\n            const dataUser = await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .findOne({ _id: mssv }, { projection: { _id: 0, email: 1 } });\r\n            let emailToShow = '';\r\n            if (dataUser) {\r\n                const email = dataUser.email;\r\n                emailToShow =\r\n                    email.substring(0, 3) + '*'.repeat(email.indexOf('@') - 3) + email.substring(email.indexOf('@'));\r\n            }\r\n            return res.render('global-verify-otp', {\r\n                header: 'global-header',\r\n                footer: 'global-footer',\r\n                avt: null,\r\n                thongbao: 'global-notifications',\r\n                email: emailToShow,\r\n            });\r\n        } catch (err) {\r\n            console.log('SYSTEM | OTP_ROUTE | ERROR | ', err);\r\n            return res.render('global-verify-otp', {\r\n                header: 'global-header',\r\n                footer: 'global-footer',\r\n                avt: null,\r\n                thongbao: 'global-notifications',\r\n                email: '',\r\n            });\r\n        }\r\n    });\r\n\r\n    // Quen mat khau\r\n    router.get('/quenmatkhau', async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user) {\r\n            return res.redirect('/');\r\n        }\r\n        return res.render('global-forgot-password', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n            thongbao: 'global-notifications',\r\n            avt: null,\r\n        });\r\n    });\r\n\r\n    router.get('/dangkyhoatdong', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const query = req.query;\r\n            const user = req.session.user;\r\n            let activitie_info;\r\n            if (query.id && query.level) {\r\n                switch (query.level) {\r\n                    case 'lop':\r\n                        if (user.pow[0]) {\r\n                            activitie_info = await client.db(user.dep).collection(`${user.cls[0]}_activities`).findOne({\r\n                                _id: query.id,\r\n                            });\r\n                            console.log(user.cls[0]);\r\n                        } else {\r\n                            const collections = await client.db(user.dep).listCollections().toArray();\r\n                            // Filter collections ending with '_activities'\r\n                            const activityCollections = await collections.filter((collection) =>\r\n                                collection.name.endsWith('_activities'),\r\n                            );\r\n                            // Loop through activity collections and retrieve all documents\r\n                            for (const activityCollection of activityCollections) {\r\n                                activitie_info = await client.db(user.dep).collection(activityCollection.name).findOne({\r\n                                    _id: query.id,\r\n                                });\r\n                                if (activitie_info) {\r\n                                    break; // Thoát khỏi vòng lặp khi tìm thấy kết quả\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'khoa':\r\n                        activitie_info = await client.db(user.dep).collection('activities').findOne({\r\n                            _id: query.id,\r\n                        });\r\n                        break;\r\n                    case 'truong':\r\n                        activitie_info = await client.db(name_global_databases).collection('activities').findOne({\r\n                            _id: query.id,\r\n                        });\r\n                        break;\r\n                }\r\n                if (!activitie_info) {\r\n                    return res.status(404).send('Not Found');\r\n                }\r\n                activitie_info.join = false;\r\n                activitie_info.diemdanh = false;\r\n                if (activitie_info.student_list) {\r\n                    const list_student = Object.keys(activitie_info.student_list);\r\n                    let info_student = [];\r\n                    for (let i = 0; i < list_student.length; i++) {\r\n                        info_student.push(\r\n                            await client\r\n                                .db(name_global_databases)\r\n                                .collection('user_info')\r\n                                .findOne(\r\n                                    {\r\n                                        _id: list_student[i],\r\n                                    },\r\n                                    { projection: { first_name: 1, last_name: 1, class: 1 } },\r\n                                ),\r\n                        );\r\n                    }\r\n                    activitie_info.info_student = info_student;\r\n                    if (user._id in activitie_info.student_list) {\r\n                        activitie_info.join = true;\r\n                    }\r\n                    if (activitie_info.ai && user._id in activitie_info.ai && activitie_info.ai[user._id]) {\r\n                        activitie_info.diemdanh = true;\r\n                    }\r\n                }\r\n\r\n                return res.render('sinhvien-activeregistration', {\r\n                    header: 'global-header',\r\n                    thongbao: 'global-notifications',\r\n                    footer: 'global-footer',\r\n                    activitie_info: activitie_info,\r\n                    id_acti: query.id,\r\n                });\r\n            } else {\r\n                return res.redirect('/');\r\n            }\r\n        } catch (err) {\r\n            return console.log('SYSTEM | HOAT_DONG_DANG_KY_ROUTE | ERROR | ', err);\r\n        }\r\n    });\r\n\r\n    // 403 route\r\n    router.get('/403', async (req, res) => {\r\n        return res.sendFile(path.join(parentDirectory, 'dPage', '403.html'));\r\n    });\r\n\r\n    return router;\r\n}\r\nmodule.exports = createRootRouter;\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1719476170726},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\loginRouters.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nfunction createLoginRouter(client) {\n  // login route\n  router.get('/', async (req, res) => {\n    const user = req.session.user;\n    if (user) {\n      return res.redirect('/');\n    }\n    return res.render('global-login', {\n      header: 'global-header',\n      thongbao: 'global-notifications',\n      footer: 'global-footer',\n      avt: null\n    });\n  });\n  // firstlogin route\n  router.get('/firstlogin', async (req, res) => {\n    const user = req.session.user;\n    let tile = 'Đăng nhập lần đầu';\n    if (req.query.tile == 'ok') {\n      tile = 'Cập nhật mật khẩu';\n    }\n    if (!user?.first) {\n      return res.redirect('/');\n    }\n    return res.render('global-first-login', {\n      header: 'global-header',\n      thongbao: 'global-notifications',\n      footer: 'global-footer',\n      avt: null,\n      logout: true,\n      tile: tile\n    });\n  });\n  return router;\n}\nmodule.exports = createLoginRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImdldE5hbWVHbG9iYWwiLCJuYW1lX2dsb2JhbF9kYXRhYmFzZXMiLCJjcmVhdGVMb2dpblJvdXRlciIsImNsaWVudCIsImdldCIsInJlcSIsInJlcyIsInVzZXIiLCJzZXNzaW9uIiwicmVkaXJlY3QiLCJyZW5kZXIiLCJoZWFkZXIiLCJ0aG9uZ2JhbyIsImZvb3RlciIsImF2dCIsInRpbGUiLCJxdWVyeSIsImZpcnN0IiwibG9nb3V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXHByb2plY3RcXHdlYlxcbmV3Q0RSTC0xXFxiYWNrZW5kXFxyb3V0ZXJcXCIsInNvdXJjZXMiOlsibG9naW5Sb3V0ZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcbmNvbnN0IHsgZ2V0TmFtZUdsb2JhbCB9ID0gcmVxdWlyZSgnLi4vbGliL21vZ29kYl9saWInKTtcclxuY29uc3QgbmFtZV9nbG9iYWxfZGF0YWJhc2VzID0gZ2V0TmFtZUdsb2JhbCgpO1xyXG5mdW5jdGlvbiBjcmVhdGVMb2dpblJvdXRlcihjbGllbnQpIHtcclxuICAgIC8vIGxvZ2luIHJvdXRlXHJcbiAgICByb3V0ZXIuZ2V0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXI7XHJcbiAgICAgICAgaWYgKHVzZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdCgnLycpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignZ2xvYmFsLWxvZ2luJywge1xyXG4gICAgICAgICAgICBoZWFkZXI6ICdnbG9iYWwtaGVhZGVyJyxcclxuICAgICAgICAgICAgdGhvbmdiYW86ICdnbG9iYWwtbm90aWZpY2F0aW9ucycsXHJcbiAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICBhdnQ6IG51bGwsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIC8vIGZpcnN0bG9naW4gcm91dGVcclxuICAgIHJvdXRlci5nZXQoJy9maXJzdGxvZ2luJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXI7XHJcbiAgICAgICAgbGV0IHRpbGUgPSAnxJDEg25nIG5o4bqtcCBs4bqnbiDEkeG6p3UnO1xyXG4gICAgICAgIGlmIChyZXEucXVlcnkudGlsZSA9PSAnb2snKSB7XHJcbiAgICAgICAgICAgIHRpbGUgPSAnQ+G6rXAgbmjhuq10IG3huq10IGto4bqpdSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdXNlcj8uZmlyc3QpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdCgnLycpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignZ2xvYmFsLWZpcnN0LWxvZ2luJywge1xyXG4gICAgICAgICAgICBoZWFkZXI6ICdnbG9iYWwtaGVhZGVyJyxcclxuICAgICAgICAgICAgdGhvbmdiYW86ICdnbG9iYWwtbm90aWZpY2F0aW9ucycsXHJcbiAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICBhdnQ6IG51bGwsXHJcbiAgICAgICAgICAgIGxvZ291dDogdHJ1ZSxcclxuICAgICAgICAgICAgdGlsZTogdGlsZSxcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHJvdXRlcjtcclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUxvZ2luUm91dGVyO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxDQUFDLENBQUM7QUFDL0IsTUFBTTtFQUFFQztBQUFjLENBQUMsR0FBR0gsT0FBTyxDQUFDLG1CQUFtQixDQUFDO0FBQ3RELE1BQU1JLHFCQUFxQixHQUFHRCxhQUFhLENBQUMsQ0FBQztBQUM3QyxTQUFTRSxpQkFBaUJBLENBQUNDLE1BQU0sRUFBRTtFQUMvQjtFQUNBTCxNQUFNLENBQUNNLEdBQUcsQ0FBQyxHQUFHLEVBQUUsT0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7SUFDaEMsTUFBTUMsSUFBSSxHQUFHRixHQUFHLENBQUNHLE9BQU8sQ0FBQ0QsSUFBSTtJQUM3QixJQUFJQSxJQUFJLEVBQUU7TUFDTixPQUFPRCxHQUFHLENBQUNHLFFBQVEsQ0FBQyxHQUFHLENBQUM7SUFDNUI7SUFDQSxPQUFPSCxHQUFHLENBQUNJLE1BQU0sQ0FBQyxjQUFjLEVBQUU7TUFDOUJDLE1BQU0sRUFBRSxlQUFlO01BQ3ZCQyxRQUFRLEVBQUUsc0JBQXNCO01BQ2hDQyxNQUFNLEVBQUUsZUFBZTtNQUN2QkMsR0FBRyxFQUFFO0lBQ1QsQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0VBQ0Y7RUFDQWhCLE1BQU0sQ0FBQ00sR0FBRyxDQUFDLGFBQWEsRUFBRSxPQUFPQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztJQUMxQyxNQUFNQyxJQUFJLEdBQUdGLEdBQUcsQ0FBQ0csT0FBTyxDQUFDRCxJQUFJO0lBQzdCLElBQUlRLElBQUksR0FBRyxtQkFBbUI7SUFDOUIsSUFBSVYsR0FBRyxDQUFDVyxLQUFLLENBQUNELElBQUksSUFBSSxJQUFJLEVBQUU7TUFDeEJBLElBQUksR0FBRyxtQkFBbUI7SUFDOUI7SUFDQSxJQUFJLENBQUNSLElBQUksRUFBRVUsS0FBSyxFQUFFO01BQ2QsT0FBT1gsR0FBRyxDQUFDRyxRQUFRLENBQUMsR0FBRyxDQUFDO0lBQzVCO0lBQ0EsT0FBT0gsR0FBRyxDQUFDSSxNQUFNLENBQUMsb0JBQW9CLEVBQUU7TUFDcENDLE1BQU0sRUFBRSxlQUFlO01BQ3ZCQyxRQUFRLEVBQUUsc0JBQXNCO01BQ2hDQyxNQUFNLEVBQUUsZUFBZTtNQUN2QkMsR0FBRyxFQUFFLElBQUk7TUFDVEksTUFBTSxFQUFFLElBQUk7TUFDWkgsSUFBSSxFQUFFQTtJQUNWLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUNGLE9BQU9qQixNQUFNO0FBQ2pCO0FBQ0FxQixNQUFNLENBQUNDLE9BQU8sR0FBR2xCLGlCQUFpQiIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["express","require","router","Router","getNameGlobal","name_global_databases","createLoginRouter","client","get","req","res","user","session","redirect","render","header","thongbao","footer","avt","tile","query","first","logout","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["loginRouters.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nfunction createLoginRouter(client) {\r\n    // login route\r\n    router.get('/', async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user) {\r\n            return res.redirect('/');\r\n        }\r\n        return res.render('global-login', {\r\n            header: 'global-header',\r\n            thongbao: 'global-notifications',\r\n            footer: 'global-footer',\r\n            avt: null,\r\n        });\r\n    });\r\n    // firstlogin route\r\n    router.get('/firstlogin', async (req, res) => {\r\n        const user = req.session.user;\r\n        let tile = 'Đăng nhập lần đầu';\r\n        if (req.query.tile == 'ok') {\r\n            tile = 'Cập nhật mật khẩu';\r\n        }\r\n        if (!user?.first) {\r\n            return res.redirect('/');\r\n        }\r\n        return res.render('global-first-login', {\r\n            header: 'global-header',\r\n            thongbao: 'global-notifications',\r\n            footer: 'global-footer',\r\n            avt: null,\r\n            logout: true,\r\n            tile: tile,\r\n        });\r\n    });\r\n    return router;\r\n}\r\nmodule.exports = createLoginRouter;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAM;EAAEC;AAAc,CAAC,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMI,qBAAqB,GAAGD,aAAa,CAAC,CAAC;AAC7C,SAASE,iBAAiBA,CAACC,MAAM,EAAE;EAC/B;EACAL,MAAM,CAACM,GAAG,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;IAChC,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAC7B,IAAIA,IAAI,EAAE;MACN,OAAOD,GAAG,CAACG,QAAQ,CAAC,GAAG,CAAC;IAC5B;IACA,OAAOH,GAAG,CAACI,MAAM,CAAC,cAAc,EAAE;MAC9BC,MAAM,EAAE,eAAe;MACvBC,QAAQ,EAAE,sBAAsB;MAChCC,MAAM,EAAE,eAAe;MACvBC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC,CAAC;EACF;EACAhB,MAAM,CAACM,GAAG,CAAC,aAAa,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;IAC1C,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAC7B,IAAIQ,IAAI,GAAG,mBAAmB;IAC9B,IAAIV,GAAG,CAACW,KAAK,CAACD,IAAI,IAAI,IAAI,EAAE;MACxBA,IAAI,GAAG,mBAAmB;IAC9B;IACA,IAAI,CAACR,IAAI,EAAEU,KAAK,EAAE;MACd,OAAOX,GAAG,CAACG,QAAQ,CAAC,GAAG,CAAC;IAC5B;IACA,OAAOH,GAAG,CAACI,MAAM,CAAC,oBAAoB,EAAE;MACpCC,MAAM,EAAE,eAAe;MACvBC,QAAQ,EAAE,sBAAsB;MAChCC,MAAM,EAAE,eAAe;MACvBC,GAAG,EAAE,IAAI;MACTI,MAAM,EAAE,IAAI;MACZH,IAAI,EAAEA;IACV,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOjB,MAAM;AACjB;AACAqB,MAAM,CAACC,OAAO,GAAGlB,iBAAiB","ignoreList":[]}},"mtime":1705240655664},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\profileRouters.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  checkIfUserLoginRoute\n} = require('../lib/function_lib');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nfunction createProfileRouter(client) {\n  // thong tin ca nhan route\n  router.get('/', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    const user_info = await client.db(name_global_databases).collection('user_info').findOne({\n      _id: req.session.user._id\n    }, {\n      projection: {\n        last_name: 1,\n        first_name: 1,\n        email: 1\n      }\n    });\n    return res.render('global-edit-profile', {\n      header: 'global-header',\n      footer: 'global-footer',\n      menu: 'doankhoa-menu',\n      name: user_info.last_name + ' ' + user_info.first_name,\n      mssv: user_info._id,\n      email: user_info.email,\n      quyen: user,\n      thongbao: 'global-notifications'\n    });\n  });\n  // doi password route\n  router.get('/change_pass', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    return res.render('global-change-password', {\n      header: 'global-header',\n      thongbao: 'global-notifications',\n      menu: 'doankhoa-menu',\n      quyen: user,\n      footer: 'global-footer'\n    });\n  });\n  return router;\n}\nmodule.exports = createProfileRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImNoZWNrSWZVc2VyTG9naW5Sb3V0ZSIsImdldE5hbWVHbG9iYWwiLCJuYW1lX2dsb2JhbF9kYXRhYmFzZXMiLCJjcmVhdGVQcm9maWxlUm91dGVyIiwiY2xpZW50IiwiZ2V0IiwicmVxIiwicmVzIiwidXNlciIsInNlc3Npb24iLCJ1c2VyX2luZm8iLCJkYiIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwiX2lkIiwicHJvamVjdGlvbiIsImxhc3RfbmFtZSIsImZpcnN0X25hbWUiLCJlbWFpbCIsInJlbmRlciIsImhlYWRlciIsImZvb3RlciIsIm1lbnUiLCJuYW1lIiwibXNzdiIsInF1eWVuIiwidGhvbmdiYW8iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxccHJvamVjdFxcd2ViXFxuZXdDRFJMLTFcXGJhY2tlbmRcXHJvdXRlclxcIiwic291cmNlcyI6WyJwcm9maWxlUm91dGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5jb25zdCB7IGNoZWNrSWZVc2VyTG9naW5Sb3V0ZSB9ID0gcmVxdWlyZSgnLi4vbGliL2Z1bmN0aW9uX2xpYicpO1xyXG5jb25zdCB7IGdldE5hbWVHbG9iYWwgfSA9IHJlcXVpcmUoJy4uL2xpYi9tb2dvZGJfbGliJyk7XHJcbmNvbnN0IG5hbWVfZ2xvYmFsX2RhdGFiYXNlcyA9IGdldE5hbWVHbG9iYWwoKTtcclxuZnVuY3Rpb24gY3JlYXRlUHJvZmlsZVJvdXRlcihjbGllbnQpIHtcclxuICAgIC8vIHRob25nIHRpbiBjYSBuaGFuIHJvdXRlXHJcbiAgICByb3V0ZXIuZ2V0KCcvJywgY2hlY2tJZlVzZXJMb2dpblJvdXRlLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBjb25zdCB1c2VyID0gcmVxLnNlc3Npb24udXNlcjtcclxuICAgICAgICBjb25zdCB1c2VyX2luZm8gPSBhd2FpdCBjbGllbnRcclxuICAgICAgICAgICAgLmRiKG5hbWVfZ2xvYmFsX2RhdGFiYXNlcylcclxuICAgICAgICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJfaW5mbycpXHJcbiAgICAgICAgICAgIC5maW5kT25lKHsgX2lkOiByZXEuc2Vzc2lvbi51c2VyLl9pZCB9LCB7IHByb2plY3Rpb246IHsgbGFzdF9uYW1lOiAxLCBmaXJzdF9uYW1lOiAxLCBlbWFpbDogMSB9IH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzLnJlbmRlcignZ2xvYmFsLWVkaXQtcHJvZmlsZScsIHtcclxuICAgICAgICAgICAgaGVhZGVyOiAnZ2xvYmFsLWhlYWRlcicsXHJcbiAgICAgICAgICAgIGZvb3RlcjogJ2dsb2JhbC1mb290ZXInLFxyXG4gICAgICAgICAgICBtZW51OiAnZG9hbmtob2EtbWVudScsXHJcbiAgICAgICAgICAgIG5hbWU6IHVzZXJfaW5mby5sYXN0X25hbWUgKyAnICcgKyB1c2VyX2luZm8uZmlyc3RfbmFtZSxcclxuICAgICAgICAgICAgbXNzdjogdXNlcl9pbmZvLl9pZCxcclxuICAgICAgICAgICAgZW1haWw6IHVzZXJfaW5mby5lbWFpbCxcclxuICAgICAgICAgICAgcXV5ZW46IHVzZXIsXHJcbiAgICAgICAgICAgIHRob25nYmFvOiAnZ2xvYmFsLW5vdGlmaWNhdGlvbnMnLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICAvLyBkb2kgcGFzc3dvcmQgcm91dGVcclxuICAgIHJvdXRlci5nZXQoJy9jaGFuZ2VfcGFzcycsIGNoZWNrSWZVc2VyTG9naW5Sb3V0ZSwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdXNlciA9IHJlcS5zZXNzaW9uLnVzZXI7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ2dsb2JhbC1jaGFuZ2UtcGFzc3dvcmQnLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcjogJ2dsb2JhbC1oZWFkZXInLFxyXG4gICAgICAgICAgICB0aG9uZ2JhbzogJ2dsb2JhbC1ub3RpZmljYXRpb25zJyxcclxuICAgICAgICAgICAgbWVudTogJ2RvYW5raG9hLW1lbnUnLFxyXG4gICAgICAgICAgICBxdXllbjogdXNlcixcclxuICAgICAgICAgICAgZm9vdGVyOiAnZ2xvYmFsLWZvb3RlcicsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiByb3V0ZXI7XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVQcm9maWxlUm91dGVyO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxDQUFDLENBQUM7QUFDL0IsTUFBTTtFQUFFQztBQUFzQixDQUFDLEdBQUdILE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUNoRSxNQUFNO0VBQUVJO0FBQWMsQ0FBQyxHQUFHSixPQUFPLENBQUMsbUJBQW1CLENBQUM7QUFDdEQsTUFBTUsscUJBQXFCLEdBQUdELGFBQWEsQ0FBQyxDQUFDO0FBQzdDLFNBQVNFLG1CQUFtQkEsQ0FBQ0MsTUFBTSxFQUFFO0VBQ2pDO0VBQ0FOLE1BQU0sQ0FBQ08sR0FBRyxDQUFDLEdBQUcsRUFBRUwscUJBQXFCLEVBQUUsT0FBT00sR0FBRyxFQUFFQyxHQUFHLEtBQUs7SUFDdkQsTUFBTUMsSUFBSSxHQUFHRixHQUFHLENBQUNHLE9BQU8sQ0FBQ0QsSUFBSTtJQUM3QixNQUFNRSxTQUFTLEdBQUcsTUFBTU4sTUFBTSxDQUN6Qk8sRUFBRSxDQUFDVCxxQkFBcUIsQ0FBQyxDQUN6QlUsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUN2QkMsT0FBTyxDQUFDO01BQUVDLEdBQUcsRUFBRVIsR0FBRyxDQUFDRyxPQUFPLENBQUNELElBQUksQ0FBQ007SUFBSSxDQUFDLEVBQUU7TUFBRUMsVUFBVSxFQUFFO1FBQUVDLFNBQVMsRUFBRSxDQUFDO1FBQUVDLFVBQVUsRUFBRSxDQUFDO1FBQUVDLEtBQUssRUFBRTtNQUFFO0lBQUUsQ0FBQyxDQUFDO0lBRXRHLE9BQU9YLEdBQUcsQ0FBQ1ksTUFBTSxDQUFDLHFCQUFxQixFQUFFO01BQ3JDQyxNQUFNLEVBQUUsZUFBZTtNQUN2QkMsTUFBTSxFQUFFLGVBQWU7TUFDdkJDLElBQUksRUFBRSxlQUFlO01BQ3JCQyxJQUFJLEVBQUViLFNBQVMsQ0FBQ00sU0FBUyxHQUFHLEdBQUcsR0FBR04sU0FBUyxDQUFDTyxVQUFVO01BQ3RETyxJQUFJLEVBQUVkLFNBQVMsQ0FBQ0ksR0FBRztNQUNuQkksS0FBSyxFQUFFUixTQUFTLENBQUNRLEtBQUs7TUFDdEJPLEtBQUssRUFBRWpCLElBQUk7TUFDWGtCLFFBQVEsRUFBRTtJQUNkLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUNGO0VBQ0E1QixNQUFNLENBQUNPLEdBQUcsQ0FBQyxjQUFjLEVBQUVMLHFCQUFxQixFQUFFLE9BQU9NLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0lBQ2xFLE1BQU1DLElBQUksR0FBR0YsR0FBRyxDQUFDRyxPQUFPLENBQUNELElBQUk7SUFDN0IsT0FBT0QsR0FBRyxDQUFDWSxNQUFNLENBQUMsd0JBQXdCLEVBQUU7TUFDeENDLE1BQU0sRUFBRSxlQUFlO01BQ3ZCTSxRQUFRLEVBQUUsc0JBQXNCO01BQ2hDSixJQUFJLEVBQUUsZUFBZTtNQUNyQkcsS0FBSyxFQUFFakIsSUFBSTtNQUNYYSxNQUFNLEVBQUU7SUFDWixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7RUFDRixPQUFPdkIsTUFBTTtBQUNqQjtBQUNBNkIsTUFBTSxDQUFDQyxPQUFPLEdBQUd6QixtQkFBbUIiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["express","require","router","Router","checkIfUserLoginRoute","getNameGlobal","name_global_databases","createProfileRouter","client","get","req","res","user","session","user_info","db","collection","findOne","_id","projection","last_name","first_name","email","render","header","footer","menu","name","mssv","quyen","thongbao","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["profileRouters.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst { checkIfUserLoginRoute } = require('../lib/function_lib');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nfunction createProfileRouter(client) {\r\n    // thong tin ca nhan route\r\n    router.get('/', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n        const user_info = await client\r\n            .db(name_global_databases)\r\n            .collection('user_info')\r\n            .findOne({ _id: req.session.user._id }, { projection: { last_name: 1, first_name: 1, email: 1 } });\r\n\r\n        return res.render('global-edit-profile', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n            menu: 'doankhoa-menu',\r\n            name: user_info.last_name + ' ' + user_info.first_name,\r\n            mssv: user_info._id,\r\n            email: user_info.email,\r\n            quyen: user,\r\n            thongbao: 'global-notifications',\r\n        });\r\n    });\r\n    // doi password route\r\n    router.get('/change_pass', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n        return res.render('global-change-password', {\r\n            header: 'global-header',\r\n            thongbao: 'global-notifications',\r\n            menu: 'doankhoa-menu',\r\n            quyen: user,\r\n            footer: 'global-footer',\r\n        });\r\n    });\r\n    return router;\r\n}\r\nmodule.exports = createProfileRouter;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAM;EAAEC;AAAsB,CAAC,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAChE,MAAM;EAAEI;AAAc,CAAC,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMK,qBAAqB,GAAGD,aAAa,CAAC,CAAC;AAC7C,SAASE,mBAAmBA,CAACC,MAAM,EAAE;EACjC;EACAN,MAAM,CAACO,GAAG,CAAC,GAAG,EAAEL,qBAAqB,EAAE,OAAOM,GAAG,EAAEC,GAAG,KAAK;IACvD,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAC7B,MAAME,SAAS,GAAG,MAAMN,MAAM,CACzBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,WAAW,CAAC,CACvBC,OAAO,CAAC;MAAEC,GAAG,EAAER,GAAG,CAACG,OAAO,CAACD,IAAI,CAACM;IAAI,CAAC,EAAE;MAAEC,UAAU,EAAE;QAAEC,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE;IAAE,CAAC,CAAC;IAEtG,OAAOX,GAAG,CAACY,MAAM,CAAC,qBAAqB,EAAE;MACrCC,MAAM,EAAE,eAAe;MACvBC,MAAM,EAAE,eAAe;MACvBC,IAAI,EAAE,eAAe;MACrBC,IAAI,EAAEb,SAAS,CAACM,SAAS,GAAG,GAAG,GAAGN,SAAS,CAACO,UAAU;MACtDO,IAAI,EAAEd,SAAS,CAACI,GAAG;MACnBI,KAAK,EAAER,SAAS,CAACQ,KAAK;MACtBO,KAAK,EAAEjB,IAAI;MACXkB,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC,CAAC;EACF;EACA5B,MAAM,CAACO,GAAG,CAAC,cAAc,EAAEL,qBAAqB,EAAE,OAAOM,GAAG,EAAEC,GAAG,KAAK;IAClE,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAC7B,OAAOD,GAAG,CAACY,MAAM,CAAC,wBAAwB,EAAE;MACxCC,MAAM,EAAE,eAAe;MACvBM,QAAQ,EAAE,sBAAsB;MAChCJ,IAAI,EAAE,eAAe;MACrBG,KAAK,EAAEjB,IAAI;MACXa,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOvB,MAAM;AACjB;AACA6B,MAAM,CAACC,OAAO,GAAGzB,mBAAmB","ignoreList":[]}},"mtime":1705240655665},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\apiRouters.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst XlsxPopulate = require('xlsx-populate');\nconst {\n  v4: uuidv4\n} = require('uuid');\nconst path = require('path');\nconst fs = require('fs');\nconst uploadDirectory = path.join('../../upload_temp');\nconst multer = require('multer');\nconst server = require('../lib/csdl_google_lib');\nconst {\n  ObjectId\n} = require('mongodb');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nconst {\n  comparePassword,\n  hashPassword,\n  sortStudentName,\n  scheduleFileDeletion,\n  mark,\n  updateStudentTotalScore,\n  sendEmail,\n  randomPassword,\n  checkIfUserLoginAPI,\n  createId,\n  get_full_id,\n  deleteClassApi,\n  createPdf\n} = require('../lib/function_lib');\nif (!fs.existsSync(uploadDirectory)) {\n  fs.mkdirSync(uploadDirectory);\n}\nconst storage_file = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, uploadDirectory);\n  },\n  filename: function (req, file, cb) {\n    cb(null, file.originalname);\n  }\n});\nconst upload = multer({\n  storage: storage_file\n});\n\n// API SPACE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nfunction createAPIRouter(client, wss) {\n  // Log in --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/login', async (req, res) => {\n    const data = req.body;\n    // 403: sai thong tin dang nhap\n    // data = {mssv: bbp, password: 1234567890, remember: true}\n    try {\n      const user = req.session.user;\n      if (!user) {\n        //(log in database)\n        let user = await client.db(name_global_databases).collection('login_info').findOne({\n          _id: data.mssv\n        });\n        let user_info_check = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: data.mssv\n        });\n        if (user === null || user_info_check === null || user_info_check.class == []) {\n          // kiểm tra nếu bên login có info mà bên user k có thì xoá bên login (ghost account)\n          if (user) {\n            await client.db(name_global_databases).collection('login_info').deleteOne({\n              _id: data.mssv\n            });\n          }\n          if (user_info_check) {\n            await client.db(name_global_databases).collection('user_info').deleteOne({\n              _id: data.mssv\n            });\n          }\n          // Đăng nhập không thành công\n          return res.sendStatus(403);\n        } else if (user._id === data.mssv && comparePassword(data.password, user.password)) {\n          let seasionIDs = await client.db(name_global_databases).collection('sessions_manager').findOne({\n            _id: data.mssv\n          });\n          if (seasionIDs) {\n            seasionIDs = seasionIDs.sessionId;\n            const existingDocs = await client.db(name_global_databases).collection('sessions').find({\n              _id: {\n                $in: seasionIDs\n              }\n            }).toArray();\n            const existingIDs = existingDocs.map(doc => doc._id);\n            const idsToDelete = seasionIDs.filter(id => !existingIDs.includes(id));\n            if (idsToDelete.length > 0) {\n              await client.db(name_global_databases).collection('sessions_manager').updateOne({\n                _id: data.mssv\n              }, {\n                $pull: {\n                  sessionId: {\n                    $in: idsToDelete\n                  }\n                }\n              });\n            }\n          }\n\n          // get user class(cls), power and department(dep)\n          const cls = await client.db(name_global_databases).collection('user_info').findOne({\n            _id: data.mssv\n          }, {\n            projection: {\n              _id: 0,\n              class: 1,\n              power: 1,\n              dep: 1\n            }\n          });\n          if (!cls.power[2]) {\n            const branch = await client.db(name_global_databases).collection('classes').findOne({\n              _id: cls.class[0]\n            }, {\n              projection: {\n                _id: 0,\n                branch: 1\n              }\n            });\n            if (branch) {\n              const dep = await client.db(name_global_databases).collection('branchs').findOne({\n                _id: branch.branch\n              }, {\n                projection: {\n                  _id: 0,\n                  dep: 1\n                }\n              });\n              user.dep = dep.dep;\n            }\n            user.cls = cls.class;\n          } else {\n            user.dep = cls.dep;\n          }\n          user.pow = cls.power;\n          // Đăng nhập thành công, lưu thông tin người dùng vào phiên\n          req.session.user = user;\n          // Kiểm tra xem người dùng có chọn \"Remember me\" không\n          if (data.remember) {\n            // Thiết lập thời gian sống cookie lâu hơn để lưu thông tin đăng nhập trong 30 ngày\n            req.session.cookie.maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days\n          } else {\n            // Thiết lập thời gian sống cookie lại về mặc định (1 giờ)\n            req.session.cookie.maxAge = 3600000; // 1 hour\n          }\n          const sessionId = req.session.id;\n          await client.db(name_global_databases).collection('sessions_manager').updateOne({\n            _id: user._id\n          }, {\n            $push: {\n              sessionId: sessionId\n            }\n          }, {\n            upsert: true\n          });\n          if (user.first == 'new_user') {\n            return res.status(200).json({\n              check: true\n            });\n          } else {\n            return res.status(200).json({\n              check: false\n            });\n          }\n        } else {\n          // Đăng nhập không thành công\n          return res.sendStatus(403);\n        }\n      } else {\n        return res.sendStatus(404);\n      }\n    } catch (err) {\n      console.log('SYSTEM | LOG_IN | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Logout ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.get('/logout', checkIfUserLoginAPI, async (req, res) => {\n    // Xóa thông tin phiên (session) của người dùng\n    const mssv = req.session.user._id;\n    req.session.destroy(err => {\n      if (err) {\n        console.log('SYSTEM | LOG_OUT | Failed to logout:', err);\n        return res.sendStatus(500);\n      } else {\n        let seasionIDs;\n        async function processSessionIDs() {\n          try {\n            seasionIDs = await client.db(name_global_databases).collection('sessions_manager').findOne({\n              _id: mssv\n            });\n            if (seasionIDs) {\n              seasionIDs = seasionIDs.sessionId;\n              const existingDocs = await client.db(name_global_databases).collection('sessions').find({\n                _id: {\n                  $in: seasionIDs\n                }\n              }).toArray();\n              const existingIDs = existingDocs.map(doc => doc._id);\n              const idsToDelete = seasionIDs.filter(id => !existingIDs.includes(id));\n              if (idsToDelete.length > 0) {\n                await client.db(name_global_databases).collection('sessions_manager').updateOne({\n                  _id: mssv\n                }, {\n                  $pull: {\n                    sessionId: {\n                      $in: idsToDelete\n                    }\n                  }\n                });\n              }\n            }\n            return res.redirect('/login'); // Chạy hàm dưới sau khi đã xử lý xong\n          } catch (error) {\n            console.log('SYSTEM | LOG_OUT | Failed to clean up sessions:', error);\n            return res.sendStatus(500);\n          }\n        }\n        processSessionIDs();\n      }\n    });\n  });\n\n  // Đăng xuất tất cả thiết bị\n  router.get('/logoutAlldevice', checkIfUserLoginAPI, async (req, res) => {\n    // Xóa thông tin phiên (session) của người dùng\n    const _id = req.session.user._id;\n    const result = await client.db(name_global_databases).collection('sessions_manager').findOne({\n      _id: _id\n    });\n    const listSeasionId = result.sessionId;\n    listSeasionId.splice(listSeasionId.indexOf(req.session.id), 1);\n    await client.db(name_global_databases).collection('sessions_manager').updateOne({\n      _id: _id\n    }, {\n      $pull: {\n        sessionId: {\n          $ne: req.session.id\n        }\n      }\n    });\n    await client.db(name_global_databases).collection('sessions').deleteMany({\n      _id: {\n        $in: listSeasionId\n      }\n    });\n    wss.clients.forEach(ws => {\n      if (listSeasionId.includes(ws.id)) {\n        ws.send('reload');\n      }\n    });\n    return res.sendStatus(200);\n  });\n\n  // Đổi thông tin người dùng --------------------------------------------------------------------------------------------------------------------------------\n  router.post('/updateInfo', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const data = req.body;\n      await client.db(name_global_databases).collection('user_info').updateOne({\n        _id: req.session.user._id\n      }, {\n        $set: {\n          displayName: data.displayName,\n          avt: data.avt\n        }\n      });\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | UPDATE_INFO | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Reset pass ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/resetpassword', async (req, res) => {\n    try {\n      const data = req.body;\n      const OTP = await client.db(name_global_databases).collection('OTP').findOne({\n        _id: data.mssv\n      }, {\n        projection: {\n          _id: 0\n        }\n      });\n      if (OTP && comparePassword(data.otp, OTP.otpcode)) {\n        await client.db(name_global_databases).collection('login_info').updateOne({\n          _id: data.mssv\n        }, {\n          $set: {\n            first: 'otp'\n          }\n        });\n        //(log in database)\n        let user = await client.db(name_global_databases).collection('login_info').findOne({\n          _id: data.mssv\n        });\n        await client.db(name_global_databases).collection('OTP').deleteOne({\n          _id: data.mssv\n        });\n        let seasionIDs = await client.db(name_global_databases).collection('sessions_manager').findOne({\n          _id: data.mssv\n        });\n        if (seasionIDs) {\n          seasionIDs = seasionIDs.sessionId;\n          const existingDocs = await client.db(name_global_databases).collection('sessions').find({\n            _id: {\n              $in: seasionIDs\n            }\n          }).toArray();\n          const existingIDs = existingDocs.map(doc => doc._id);\n          const idsToDelete = seasionIDs.filter(id => !existingIDs.includes(id));\n          if (idsToDelete.length > 0) {\n            await client.db(name_global_databases).collection('sessions_manager').updateOne({\n              _id: data.mssv\n            }, {\n              $pull: {\n                sessionId: {\n                  $in: idsToDelete\n                }\n              }\n            });\n          }\n        }\n\n        // get user class(cls), power and department(dep)\n        const cls = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: data.mssv\n        }, {\n          projection: {\n            _id: 0,\n            class: 1,\n            power: 1,\n            dep: 1\n          }\n        });\n        if (!cls.power[2]) {\n          const branch = await client.db(name_global_databases).collection('classes').findOne({\n            _id: cls.class[0]\n          }, {\n            projection: {\n              _id: 0,\n              branch: 1\n            }\n          });\n          if (branch) {\n            const dep = await client.db(name_global_databases).collection('branchs').findOne({\n              _id: branch.branch\n            }, {\n              projection: {\n                _id: 0,\n                dep: 1\n              }\n            });\n            user.dep = dep.dep;\n          }\n          user.cls = cls.class;\n        } else {\n          user.dep = cls.dep;\n        }\n        user.pow = cls.power;\n        // Đăng nhập thành công, lưu thông tin người dùng vào phiên\n        req.session.user = user;\n        // Kiểm tra xem người dùng có chọn \"Remember me\" không\n        if (data.remember) {\n          // Thiết lập thời gian sống cookie lâu hơn để lưu thông tin đăng nhập trong 30 ngày\n          req.session.cookie.maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days\n        } else {\n          // Thiết lập thời gian sống cookie lại về mặc định (1 giờ)\n          req.session.cookie.maxAge = 3600000; // 1 hour\n        }\n        const sessionId = req.session.id;\n        await client.db(name_global_databases).collection('sessions_manager').updateOne({\n          _id: user._id\n        }, {\n          $push: {\n            sessionId: sessionId\n          }\n        }, {\n          upsert: true\n        });\n        return res.sendStatus(200);\n      } else {\n        res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | RESET_PASSWORD | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Resent OTP ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/resendotp', async (req, res) => {\n    try {\n      const mssv = req.body.mssv;\n      const dataUser = await client.db(name_global_databases).collection('user_info').findOne({\n        _id: mssv\n      }, {\n        projection: {\n          _id: 0,\n          email: 1\n        }\n      });\n      // Thêm tài liệu mới có thời gian hết hạn sau 1 phút\n      const OTPscode = await randomPassword();\n      await client.db(name_global_databases).collection('OTP').updateOne({\n        _id: mssv\n      }, {\n        $set: {\n          otpcode: hashPassword(OTPscode),\n          expireAt: new Date(Date.now() + 60 * 5 * 1000) // Hết hạn sau 5 phút\n        }\n      }, {\n        upsert: true\n      });\n      if (dataUser) {\n        const email = dataUser.email;\n        await sendEmail(OTPscode, email);\n      }\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | RESEND_OTP | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Đổi pass ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/change_pass', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const data = req.body;\n      const old_pass = await client.db(name_global_databases).collection('login_info').findOne({\n        _id: req.session.user._id\n      }, {\n        projection: {\n          _id: 0,\n          password: 1\n        }\n      });\n      if (comparePassword(data.old_password, old_pass.password)) {\n        if (!comparePassword(data.new_password, old_pass.password)) {\n          await client.db(name_global_databases).collection('login_info').updateOne({\n            _id: req.session.user._id\n          }, {\n            $set: {\n              password: hashPassword(data.new_password)\n            }\n          });\n          return res.sendStatus(200);\n        } else {\n          return res.sendStatus(403);\n        }\n      } else {\n        res.sendStatus(404);\n      }\n    } catch (err) {\n      console.log('SYSTEM | CHANGE_PASSWORD | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Đổi pass lần đầu đăng nhập -------------------------------------------------------------------------------------------------------------------------------\n  router.post('/first_login', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const data = req.body;\n      const old_pass = await client.db(name_global_databases).collection('login_info').findOne({\n        _id: req.session.user._id\n      }, {\n        projection: {\n          _id: 0,\n          password: 1\n        }\n      });\n      if (comparePassword(data.new_password, old_pass.password)) {\n        return res.sendStatus(403);\n      } else {\n        delete req.session.user.first;\n        await client.db(name_global_databases).collection('login_info').updateOne({\n          _id: req.session.user._id\n        }, {\n          $unset: {\n            first: ''\n          }\n        });\n        await client.db(name_global_databases).collection('login_info').updateOne({\n          _id: req.session.user._id\n        }, {\n          $set: {\n            password: hashPassword(data.new_password)\n          }\n        });\n        return res.sendStatus(200);\n      }\n    } catch (err) {\n      console.log('SYSTEM | CHANGE_PASSWORD | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Save table and update old table std------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/std_mark', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[0]) {\n        const data = req.body;\n        const marker = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: user._id\n        }, {\n          projection: {\n            _id: 0,\n            last_name: 1,\n            first_name: 1\n          }\n        });\n        const marked = await mark('_std_table', user, user._id, data, marker, user.cls[0]);\n        switch (marked) {\n          case 0:\n            return res.sendStatus(200);\n          case 1:\n            return res.sendStatus(203);\n          case 2:\n            return res.sendStatus(205);\n        }\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | STD_MARK | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Save table and update old table stf------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/stf_mark', checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    if (user.pow[1]) {\n      try {\n        const data = req.body;\n        const marker = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: user._id\n        }, {\n          projection: {\n            _id: 0,\n            last_name: 1,\n            first_name: 1\n          }\n        });\n        const marked = await mark('_stf_table', user, data.mssv, data, marker, data.class);\n        switch (marked) {\n          case 0:\n            return res.sendStatus(200);\n          case 1:\n            return res.sendStatus(203);\n          case 2:\n            return res.sendStatus(205);\n        }\n      } catch (err) {\n        console.log('SYSTEM | STF_MARK | ERROR | ', err);\n        return res.sendStatus(500);\n      }\n    } else if (user.pow[4]) {\n      try {\n        const data = req.body;\n        const marker = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: user._id\n        }, {\n          projection: {\n            _id: 0,\n            last_name: 1,\n            first_name: 1\n          }\n        });\n        const marked = await mark('_stf_table', user, data.mssv, data, marker, user.cls[0]);\n        switch (marked) {\n          case 0:\n            return res.sendStatus(200);\n          case 1:\n            return res.sendStatus(203);\n          case 2:\n            return res.sendStatus(205);\n        }\n      } catch (err) {\n        console.log('SYSTEM | STF_MARK | ERROR | ', err);\n        return res.sendStatus(500);\n      }\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n\n  // Save table and update old table dep------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/dep_mark', checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    if (user.pow[2]) {\n      try {\n        const data = req.body;\n        const marker = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: user._id\n        }, {\n          projection: {\n            _id: 0,\n            last_name: 1,\n            first_name: 1\n          }\n        });\n        const marked = await mark('_dep_table', user, data.mssv, data, marker, data.class);\n        switch (marked) {\n          case 0:\n            return res.sendStatus(200);\n          case 1:\n            return res.sendStatus(203);\n        }\n        return res.sendStatus(200);\n      } catch (err) {\n        console.log('SYSTEM | STF_MARK | ERROR | ', err);\n        return res.sendStatus(500);\n      }\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n\n  // Upload file -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/uploadFile', upload.array('files[]'), checkIfUserLoginAPI, async function (req, res) {\n    if (!req.files) {\n      return res.status(400).send('No file uploaded.');\n    }\n    let list_name = [];\n    let list_dep = [];\n    // Kiểm tra kiểu dữ liệu của các tệp\n    for (let i = 0; i < req.files.length; i++) {\n      const fileName = req.files[i].originalname;\n      const fileDescription = req.body.descripts[i]; // Trích xuất mô tả tương ứng từ danh sách descripts[]\n      list_dep.push(fileDescription);\n      list_name.push(fileName);\n    }\n\n    // Xử lý các tệp đã tải lên ở đây\n    res.writeHead(200, {\n      'Content-Type': 'applicaiton/json'\n    });\n    return res.end(JSON.stringify(await get_full_id(uploadDirectory, list_name, list_dep)));\n  });\n\n  // Create new account -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.post('/createAccount', upload.single('file'), checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    const dummyScore = {\n      first: [0, 0, 0, 0, 0],\n      second: [0, 0],\n      third: [0, 0, 0],\n      fourth: [0, 0, 0],\n      fifth: [0, 0, 0, 0],\n      img_ids: [],\n      total: 0\n    };\n    if (user.pow[4] || user.pow[7]) {\n      const fileStudents = req.file;\n      async function generateEmail(str) {\n        let s1 = 'ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠạẢảẤấẦầẨẩẪẫẬậẮắẰằẲẳẴẵẶặẸẹẺẻẼẽẾếỀềỂểỄễỆệỈỉỊịỌọỎỏỐốỒồỔổỖỗỘộỚớỜờỞởỠỡỢợỤụỦủỨứỪừỬửỮữỰựỲỳỴỵỶỷỸỹ';\n        let s0 = 'AAAAEEEIIOOOOUUYaaaaeeeiioooouuyAaDdIiUuOoUuAaAaAaAaAaAaAaAaAaAaAaAaEeEeEeEeEeEeEeEeEeIiIiOoOoOoOoOoOoOoOoOoOoOoUuUuUuUuUuUuUuYyYyYyYy';\n        let newStr = '';\n        let listSpace = [];\n        for (let i = 0; i < str.length; i++) {\n          if (s1.indexOf(str[i]) != -1) {\n            newStr += s0[s1.indexOf(str[i])];\n          } else {\n            newStr += str[i];\n          }\n          if (str[i] == ' ') {\n            listSpace.push(i);\n          }\n        }\n        let output = newStr[0];\n        for (let i = 0; i < listSpace.length - 2; i++) {\n          output += newStr.charAt(listSpace[i] + 1);\n        }\n        output += newStr.slice(listSpace[listSpace.length - 2] + 1).replace(/\\s/g, '');\n        return output.toLowerCase() + '@student.ctuet.edu.vn';\n      }\n      if (fileStudents) {\n        const workbook = await XlsxPopulate.fromFileAsync(fileStudents.path);\n        const sheet = workbook.sheet(0);\n        // const sheetCount = workbook.sheetCount();\n        const values = sheet.usedRange().value();\n        const usedRange = sheet.usedRange();\n        const expectedValues = ['MSSV', 'HỌ', 'TÊN'];\n        // const columnCount = expectedValues.length;\n        let isCorrect = true;\n        const endCell = usedRange.endCell();\n        const rowCount = endCell.rowNumber();\n        const columnCount = 3;\n        for (let column = 1; column <= columnCount; column++) {\n          const cell = sheet.cell(1, column); // Ô đầu tiên trên hàng 1 và cột column\n          const value = cell.value();\n          if (value !== expectedValues[column - 1]) {\n            isCorrect = false;\n            break;\n          }\n        }\n        if (isCorrect) {\n          let havevalue = true;\n          for (let row = 2; row <= 5; row++) {\n            let hasValue = false;\n            for (let column = 1; column <= columnCount; column++) {\n              const cell = sheet.cell(row, column);\n              const value = cell.value();\n              if (value) {\n                hasValue = true;\n                break;\n              }\n            }\n            if (hasValue) {\n              break;\n            } else {\n              havevalue = false;\n              break;\n            }\n          }\n          if (havevalue) {\n            if (req.body.status == 'true') {\n              try {\n                // read excel file:\n                // create all account\n\n                let maxWidthEmail = 0;\n                //[['MSSV', 'Họ', 'Tên' ]]\n                sheet.cell('D1').value('Email');\n                sheet.cell('E1').value('Password');\n                const dataRows = [];\n                for (let i = 1; i < values.length; i++) {\n                  let pw = await randomPassword();\n                  let email = await generateEmail(`${values[i][1].toString()} ${values[i][2].toString()} ${values[i][0].toString()}`);\n                  let dataInsertUser = {\n                    _id: values[i][0].toString(),\n                    first_name: values[i][2].toString(),\n                    last_name: values[i][1].toString(),\n                    avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\n                    power: {\n                      0: true\n                    },\n                    class: [req.body.cls],\n                    displayName: `${values[i][1].toString()} ${values[i][2].toString()}`,\n                    email: email,\n                    total_score: {}\n                  };\n                  let dataInsertLogin = {\n                    _id: values[i][0].toString(),\n                    password: hashPassword(pw),\n                    first: 'new_user'\n                  };\n                  const dataRow = [dataInsertUser._id, pw, dataInsertUser.last_name, dataInsertUser.first_name];\n                  dataRows.push(dataRow);\n                  client.db('global').collection('user_info').updateOne({\n                    _id: dataInsertUser._id\n                  }, {\n                    $set: dataInsertUser\n                  }, {\n                    upsert: true\n                  });\n                  client.db('global').collection('login_info').updateOne({\n                    _id: dataInsertLogin._id\n                  }, {\n                    $set: dataInsertLogin\n                  }, {\n                    upsert: true\n                  });\n                  await mark('_std_table', user, dataInsertUser._id, dummyScore, {\n                    first_name: dataInsertUser.first_name,\n                    last_name: dataInsertUser.last_name\n                  }, dataInsertUser.class[0]);\n                  await sheet.cell(`D${i + 1}`).value(email);\n                  await sheet.cell(`E${i + 1}`).value(pw);\n                  const range = sheet.range(`D${i + 1}:E${i + 1}`);\n                  range.style({\n                    border: true\n                  });\n                  if (email.length > maxWidthEmail) {\n                    maxWidthEmail = email.length;\n                  }\n                }\n                // Write to file.\n                sheet.column('D').width(maxWidthEmail);\n                const uuid = uuidv4();\n                await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\n                // xoa file sau khi xu ly\n                scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\n                const workbookacc = await XlsxPopulate.fromFileAsync('./src/excelTemplate/FILE_TAO_ACC.xlsx');\n                if (dataRows.length > 0) {\n                  await workbookacc.sheet(0).cell('A2').value(dataRows);\n                }\n                const outputFile = path.join(`.downloads/${uuid}.xlsx`);\n                await workbookacc.toFileAsync(outputFile);\n                scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\n                return res.download(path.join('.downloads', uuid + '.xlsx'));\n              } catch (err) {\n                console.log('SYSTEM | CREATE_ACCOUNT | ERROR | ', err);\n                return res.sendStatus(500);\n              }\n            } else {\n              try {\n                // read excel file:\n                // create all account\n                const workbook = await XlsxPopulate.fromFileAsync(fileStudents.path);\n                const sheet = workbook.sheet(0);\n                const values = sheet.usedRange().value();\n                let maxWidthEmail = 0;\n                //[['MSSV', 'Họ', 'Tên' ]]\n                sheet.cell('D1').value('Email');\n                sheet.cell('E1').value('Password');\n                for (let i = 1; i < values.length; i++) {\n                  let studentIdToCheck = values[i][0].toString(); // Mã số sinh viên cần kiểm tra\n\n                  const marker = await client.db(name_global_databases).collection('user_info').findOne({\n                    _id: studentIdToCheck\n                  }, {\n                    projection: {\n                      _id: 0,\n                      last_name: 1,\n                      first_name: 1\n                    }\n                  });\n                  if (!marker) {\n                    let pw = await randomPassword();\n                    let email = await generateEmail(`${values[i][1]} ${values[i][2]} ${values[i][0].toString()}`);\n                    let dataInsertUser = {\n                      _id: values[i][0].toString(),\n                      first_name: values[i][2].toString(),\n                      last_name: values[i][1].toString(),\n                      avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\n                      power: {\n                        0: true\n                      },\n                      class: [req.body.cls],\n                      displayName: `${values[i][1].toString()} ${values[i][2].toString()}`,\n                      email: email,\n                      total_score: {}\n                    };\n                    let dataInsertLogin = {\n                      _id: values[i][0].toString(),\n                      password: hashPassword(pw),\n                      first: 'new_user'\n                    };\n                    client.db('global').collection('user_info').updateOne({\n                      _id: dataInsertUser._id\n                    }, {\n                      $set: dataInsertUser\n                    }, {\n                      upsert: true\n                    });\n                    client.db('global').collection('login_info').updateOne({\n                      _id: dataInsertLogin._id\n                    }, {\n                      $set: dataInsertLogin\n                    }, {\n                      upsert: true\n                    });\n                    await mark('_std_table', user, dataInsertUser._id, dummyScore, {\n                      first_name: dataInsertUser.first_name,\n                      last_name: dataInsertUser.last_name\n                    }, dataInsertUser.class[0]);\n                    await sheet.cell(`D${i + 1}`).value(email);\n                    await sheet.cell(`E${i + 1}`).value(pw);\n                    const range = sheet.range(`D${i + 1}:E${i + 1}`);\n                    range.style({\n                      border: true\n                    });\n                    if (email.length > maxWidthEmail) {\n                      maxWidthEmail = email.length;\n                    }\n\n                    // Write to file.\n                    sheet.column('D').width(maxWidthEmail);\n                    const uuid = uuidv4();\n                    await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\n                    res.download(path.join('.downloads', uuid + '.xlsx'));\n                    // xoa file sau khi xu ly\n                    scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\n                  }\n                }\n              } catch (err) {\n                console.log('SYSTEM | CREATE_ACCOUNT | ERROR | ', err);\n                return res.sendStatus(500);\n              }\n            }\n          } else {\n            return res.sendStatus(404);\n          }\n        } else {\n          return res.sendStatus(405);\n        }\n      } else {\n        const dataStudent = req.body;\n        let pw = await randomPassword();\n        let email = await generateEmail(`${dataStudent['ho']} ${dataStudent['ten']} ${dataStudent['mssv'].toString()}`);\n        let power;\n        power = {\n          0: true,\n          1: dataStudent['chamdiem'],\n          3: dataStudent['lbhd'],\n          10: dataStudent['dangvien']\n        };\n        let dataInsertUser = {\n          _id: dataStudent['mssv'].toString(),\n          first_name: dataStudent['ten'],\n          last_name: dataStudent['ho'],\n          avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\n          power: power,\n          class: [dataStudent['cls']],\n          displayName: `${dataStudent['ho']} ${dataStudent['ten']}`,\n          email: email,\n          total_score: {}\n        };\n        let dataInsertLogin = {\n          _id: dataStudent['mssv'].toString(),\n          password: hashPassword(pw),\n          first: 'new_user'\n        };\n        client.db('global').collection('user_info').updateOne({\n          _id: dataInsertUser._id\n        }, {\n          $set: dataInsertUser\n        }, {\n          upsert: true\n        });\n        client.db('global').collection('login_info').updateOne({\n          _id: dataInsertLogin._id\n        }, {\n          $set: dataInsertLogin\n        }, {\n          upsert: true\n        });\n        await mark('_std_table', user, dataInsertUser._id, dummyScore, {\n          first_name: dataInsertUser.first_name,\n          last_name: dataInsertUser.last_name\n        }, dataInsertUser.class[0]);\n        // xu ly sau khi them sinh vien\n        const uuid = uuidv4();\n        const workbook = await XlsxPopulate.fromFileAsync('./src/excelTemplate/Tao_danh_sach_lop_moi.xlsx');\n        const sheet = workbook.sheet(0);\n        await sheet.cell(`A2`).value(dataStudent['mssv'].toString());\n        await sheet.cell(`B2`).value(dataStudent['ho']);\n        await sheet.cell(`C2`).value(dataStudent['ten']);\n        await sheet.cell(`D1`).value('Email');\n        await sheet.cell(`E1`).value('Password');\n        await sheet.cell(`D2`).value(email);\n        await sheet.cell(`E2`).value(pw);\n        let range = sheet.range(`D2:E2`);\n        range.style({\n          border: true\n        });\n        sheet.column('D').width(email.length);\n        await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\n        res.download(path.join('.downloads', uuid + '.xlsx'));\n        // xoa file sau khi xu ly\n        scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\n\n        // return res.sendStatus(200);\n      }\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n\n  // Update student\n  router.post('/updateAccount', checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    if (user.pow[4] || user.pow[7]) {\n      const dataStudent = req.body;\n      let power = {\n        0: true,\n        1: dataStudent['chamdiem'],\n        3: dataStudent['lbhd'],\n        10: dataStudent['dangvien']\n      };\n      let dataInsertUser = {\n        _id: dataStudent['mssv'].toString(),\n        first_name: dataStudent['ten'],\n        last_name: dataStudent['ho'],\n        power: power,\n        displayName: `${dataStudent['ho']} ${dataStudent['ten']}`\n      };\n      client.db('global').collection('user_info').updateOne({\n        _id: dataInsertUser._id\n      }, {\n        $set: dataInsertUser\n      }, {\n        upsert: true\n      });\n      return res.sendStatus(200);\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n  router.get('/getTemplateAddStudent', upload.single('file'), checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    if (user.pow[4] || user.pow[7]) {\n      return res.download('./src/excelTemplate/Tao_danh_sach_lop_moi.xlsx');\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n  router.post('/deleteAccount', checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    if (user.pow[4] || user.pow[7]) {\n      try {\n        const cls = req.body.cls;\n        const listDelete = req.body.dataDelete;\n        for (let i = 0; i < listDelete.length; i++) {\n          await client.db('global').collection('user_info').deleteOne({\n            _id: listDelete[i]\n          });\n          let info_search = `student_list.${listDelete[i]}`;\n          await client.db(user.dep).collection(`${cls}_activities`).updateMany({\n            [info_search]: {\n              $exists: true\n            }\n          }, {\n            $pull: {\n              student_list: user._id,\n              ai: user._id\n            }\n          });\n          await client.db(user.dep).collection('activities').updateMany({\n            [info_search]: {\n              $exists: true\n            }\n          }, {\n            $pull: {\n              student_list: user._id,\n              ai: user._id\n            }\n          });\n          await client.db(name_global_databases).collection('activities').updateMany({\n            [info_search]: {\n              $exists: true\n            }\n          }, {\n            $pull: {\n              student_list: user._id,\n              ai: user._id\n            }\n          });\n        }\n        return res.sendStatus(200);\n      } catch (err) {\n        console.log('SYSTEM | DELETE_ACCOUNT | ERROR | ', err);\n        return res.sendStatus(500);\n      }\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n  // Export class score report --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.get('/exportClassScore', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[1] || user.pow[2]) {\n        const data = req.query;\n        //data = {year: \"HK1_2022-2023\", cls: '1'}\n        const school_year = data.year;\n        let cls = data.cls;\n        // create uuid for download file\n        const uuid = uuidv4();\n\n        // check for post data.cls if class define this mean they choose class so that must\n\n        let student_list = [];\n        if (user.pow[1]) {\n          student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n            class: user.cls[0],\n            'power.0': {\n              $exists: true\n            }\n          }, {\n            projection: {\n              first_name: 1,\n              last_name: 1\n            }\n          }).toArray());\n        } else {\n          student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n            class: cls,\n            'power.0': {\n              $exists: true\n            }\n          }, {\n            projection: {\n              first_name: 1,\n              last_name: 1\n            }\n          }).toArray());\n        }\n\n        // get all student total score from themself:\n        let scores = [];\n        if (student_list.length !== 0) {\n          for (let i = 0; i < student_list.length; i++) {\n            // [stt, mssv. ho, ten, lop,\n            // 1.0, 1.1, 1.2, 1.3, 1.4,\n            // 2.0, 2.1,\n            // 3.0, 3.1, 3.2,\n            // 4.0, 4.1, 4.2,\n            // 5.0, 5.1, 5.2, 5.3,\n            // \"\", total, conduct, \"\"]\n            let curr_score = [i + 1, student_list[i]._id, student_list[i].last_name, student_list[i].first_name, cls];\n            const curr_departmentt_score = await client.db(user.dep).collection(cls + '_dep_table').findOne({\n              mssv: student_list[i]._id,\n              school_year: school_year\n            }, {\n              projection: {\n                first: 1,\n                second: 1,\n                third: 1,\n                fourth: 1,\n                fifth: 1,\n                total: 1\n              }\n            });\n            if (curr_departmentt_score) {\n              curr_score.push(...curr_departmentt_score.first);\n              curr_score.push(...curr_departmentt_score.second);\n              curr_score.push(...curr_departmentt_score.third);\n              curr_score.push(...curr_departmentt_score.fourth);\n              curr_score.push(...curr_departmentt_score.fifth);\n            } else {\n              for (let j = 0; j < 17; j++) {\n                curr_score.push(null);\n              }\n            }\n            curr_score.push(null);\n            if (curr_departmentt_score) {\n              curr_score.push(curr_departmentt_score.total);\n              // set kind of conduct:\n              if (curr_departmentt_score.total >= 90) {\n                curr_score.push('xuất sắc');\n              } else if (curr_departmentt_score.total >= 80) {\n                curr_score.push('tốt');\n              } else if (curr_departmentt_score.total >= 65) {\n                curr_score.push('khá');\n              } else if (curr_departmentt_score.total >= 50) {\n                curr_score.push('trung bình');\n              } else if (curr_departmentt_score.total >= 35) {\n                curr_score.push('yếu');\n              } else {\n                curr_score.push('kém');\n              }\n            } else {\n              curr_score.push(null);\n              curr_score.push(null);\n            }\n\n            // add curr_score to scores\n            scores.push(curr_score);\n          }\n        } else {}\n\n        // Load an existing workbook\n        const workbook = await XlsxPopulate.fromFileAsync('./src/excelTemplate/Bang_diem_ca_lop_xuat_tu_he_thong.xlsx');\n        if (scores.length != 0) {\n          await workbook.sheet(0).cell('A7').value(scores);\n        }\n        // Write to file.\n\n        await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\n\n        // tải file xlsx về máy người dùng\n        // res.download(path.join('.downloads', uuid + \".xlsx\"));\n\n        res.download(path.join('.downloads', uuid + '.xlsx'));\n\n        // delete file after 12 hours\n        scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | EXPORT_CLASS_SCORE | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  // Export students score report --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.get('/exportStudentsScore', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.query;\n      let cls = data.cls;\n      let stdlist = [];\n      if (data.stdlist) {\n        stdlist = JSON.parse(data.stdlist);\n      }\n      const school_year = data.year;\n      if (user.pow[0] || user.pow[1] || user.pow[2]) {\n        if (data.type === 'singe' & user.pow[0]) {\n          cls = user.cls[0];\n          stdlist = [user._id];\n        }\n        //data = {year: \"HK1_2022-2023\", cls: '1', stdlist: []}\n        // create uuid for download file\n        const uuid = uuidv4();\n        // check for post data.cls if class define this mean they choose class so that must\n        let student_list = [];\n        student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n          class: cls,\n          'power.0': {\n            $exists: true\n          },\n          _id: {\n            $in: stdlist\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1\n          }\n        }).toArray());\n        // get all student total score from themself:\n        let scores = [];\n        if (student_list.length !== 0) {\n          for (let i = 0; i < student_list.length; i++) {\n            // [stt, mssv. ho, ten, lop,\n            // 1.0, 1.1, 1.2, 1.3, 1.4,\n            // 2.0, 2.1,\n            // 3.0, 3.1, 3.2,\n            // 4.0, 4.1, 4.2,\n            // 5.0, 5.1, 5.2, 5.3,\n            // \"\", total, conduct, \"\"]\n            let curr_score = {\n              year: school_year,\n              mssv: student_list[i]._id,\n              name: student_list[i].last_name + ' ' + student_list[i].first_name,\n              class: cls,\n              std: [],\n              stf: [],\n              dep: []\n            };\n            const curr_students_score = await client.db(user.dep).collection(cls + '_std_table').findOne({\n              mssv: student_list[i]._id,\n              school_year: school_year\n            }, {\n              projection: {\n                first: 1,\n                second: 1,\n                third: 1,\n                fourth: 1,\n                fifth: 1,\n                total: 1\n              }\n            });\n            const curr_staff_score = await client.db(user.dep).collection(cls + '_stf_table').findOne({\n              mssv: student_list[i]._id,\n              school_year: school_year\n            }, {\n              projection: {\n                first: 1,\n                second: 1,\n                third: 1,\n                fourth: 1,\n                fifth: 1,\n                total: 1\n              }\n            });\n            const curr_departmentt_score = await client.db(user.dep).collection(cls + '_dep_table').findOne({\n              mssv: student_list[i]._id,\n              school_year: school_year\n            }, {\n              projection: {\n                first: 1,\n                second: 1,\n                third: 1,\n                fourth: 1,\n                fifth: 1,\n                total: 1\n              }\n            });\n            if (curr_students_score) {\n              curr_score.std.push(...curr_students_score.first);\n              curr_score.std.push(...curr_students_score.second);\n              curr_score.std.push(...curr_students_score.third);\n              curr_score.std.push(...curr_students_score.fourth);\n              curr_score.std.push(...curr_students_score.fifth);\n              curr_score.std.push(curr_students_score.total);\n            } else {\n              for (let j = 0; j < 18; j++) {\n                curr_score.std.push('N/A');\n              }\n            }\n            if (curr_staff_score) {\n              curr_score.stf.push(...curr_staff_score.first);\n              curr_score.stf.push(...curr_staff_score.second);\n              curr_score.stf.push(...curr_staff_score.third);\n              curr_score.stf.push(...curr_staff_score.fourth);\n              curr_score.stf.push(...curr_staff_score.fifth);\n              curr_score.stf.push(curr_staff_score.total);\n            } else {\n              for (let j = 0; j < 18; j++) {\n                curr_score.stf.push('N/A');\n              }\n            }\n            if (curr_departmentt_score) {\n              curr_score.dep.push(...curr_departmentt_score.first);\n              curr_score.dep.push(...curr_departmentt_score.second);\n              curr_score.dep.push(...curr_departmentt_score.third);\n              curr_score.dep.push(...curr_departmentt_score.fourth);\n              curr_score.dep.push(...curr_departmentt_score.fifth);\n              curr_score.dep.push(curr_departmentt_score.total);\n            } else {\n              for (let j = 0; j < 18; j++) {\n                curr_score.dep.push('N/A');\n              }\n            }\n            scores.push(curr_score);\n          }\n        } else {\n          return res.sendStatus(402);\n        }\n        const temp_namefile = await createPdf('.downloads', scores);\n        // tải file xlsx về máy người dùng\n        res.download(path.join('.downloads', temp_namefile));\n\n        // delete file after 12 hours\n\n        scheduleFileDeletion(path.join('.downloads', temp_namefile));\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | EXPORT_STUDENTS_SCORE | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  // Load score list of student in specific class at specific time ---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n  router.get('/loadScoresList', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[1]) {\n        const data = req.query;\n        //data = {year: \"HK1_2022-2023\", cls: \"1\"}\n        const school_year = data.year;\n        const year_available = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1,\n            start_day: 1,\n            end_day: 1\n          }\n        });\n        const student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n          class: user.cls[0],\n          'power.0': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1,\n            total_score: 1\n          }\n        }).toArray());\n\n        // get all student total score from themself:\n        let result = {\n          // staff_name: [],\n          student_list: student_list,\n          // student_scores: [],\n          // staff_scores: [],\n          // department_scores: [],\n          year_available: year_available\n        };\n        return res.status(200).json(result);\n      } else {\n        // user not staff members\n        // redirect to home (return 403, api khong the chuyenh huong ve trang chu duoc)\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | LOAD_SCORE_LIST | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  // doan khoa load scores\n  router.get('/doan_khoa/loadScoresList', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[2]) {\n        const data = req.query;\n        //data = {year: \"HK1_2022-2023\", cls: \"1\"}\n        const school_year = data.year;\n        let cls = data.class;\n        // const bo_mon = data.bo_mon;\n        // check for post data.cls if class define this mean they choose class so that must\n        if (!cls) {\n          cls = 0;\n        }\n        const year_available = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1,\n            start_day: 1,\n            end_day: 1\n          }\n        });\n        const student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n          class: cls,\n          'power.0': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1,\n            total_score: 1\n          }\n        }).toArray());\n\n        // get all student total score from themself:\n        let result = {\n          // staff_name: [],\n          student_list: student_list,\n          // student_scores: [],\n          // staff_scores: [],\n          // department_scores: [],\n          year_available: year_available\n        };\n        return res.status(200).json(result);\n      } else {\n        // user not staff members\n        // redirect to home\n        return res.statusCode(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | DOAN_KHOA_LOAD_SCORE_LIST | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  // Auto mark (copy student mark to staff mark)\n  router.post('/autoMark', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[1]) {\n        const data = req.body;\n        let cls = data.cls;\n        //data = {year: \"HK1_2022-2023\", cls: \"1\", std_list = []}\n\n        // get staff member info :\n        const marker = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: user._id\n        }, {\n          projection: {\n            _id: 0,\n            last_name: 1,\n            first_name: 1\n          }\n        });\n        // check for post data.cls if class define this mean they choose class so that must\n        if (!cls) {\n          cls = 0;\n        }\n\n        // check if table is exist or not\n        // update or add new table copy from std_table to staff_table\n        for (let i = 0; i < data.std_list.length; i++) {\n          const std_table = await client.db(user.dep).collection(user.cls[parseInt(cls)] + '_std_table').findOne({\n            mssv: data.std_list[i],\n            school_year: data.year\n          });\n\n          // update old table if exist else insert new one\n          // copy from student table and add marker name\n          if (std_table) {\n            std_table.marker = marker.last_name + ' ' + marker.first_name;\n            delete std_table._id;\n            await client.db(user.dep).collection(user.cls[parseInt(cls)] + '_stf_table').updateOne({\n              mssv: data.std_list[i],\n              school_year: data.year\n            }, {\n              $set: std_table\n            }, {\n              upsert: true\n            });\n          }\n          await updateStudentTotalScore('_stf_table', std_table.school_year, std_table.mssv, std_table.total, std_table.marker);\n        }\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | AUTO_MARK | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  router.post('/doan_khoa/autoMark', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[2]) {\n        const data = req.body;\n        let cls = data.cls;\n        //data = {year: \"HK1_2022-2023\", cls: \"1\", std_list = []}\n\n        // get staff member info :\n        const marker = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: user._id\n        }, {\n          projection: {\n            _id: 0,\n            last_name: 1,\n            first_name: 1\n          }\n        });\n\n        // check if table is exist or not\n        // update or add new table copy from std_table to staff_table\n        for (let i = 0; i < data.std_list.length; i++) {\n          const std_table = await client.db(user.dep).collection(cls + '_stf_table').findOne({\n            mssv: data.std_list[i],\n            school_year: data.year\n          });\n\n          // update old table if exist else insert new one\n          // copy from student table and add marker name\n          if (std_table) {\n            std_table.marker = marker.last_name + ' ' + marker.first_name;\n            delete std_table._id;\n            await client.db(user.dep).collection(cls + '_dep_table').updateOne({\n              mssv: data.std_list[i],\n              school_year: data.year\n            }, {\n              $set: std_table\n            }, {\n              upsert: true\n            });\n          }\n          await updateStudentTotalScore('_dep_table', std_table.school_year, std_table.mssv, std_table.total, std_table.marker);\n        }\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | AUTO_MARK | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api danh sach sinh vien\n  router.post('/getStudentList', checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    const data = req.body; // data = {class: KTPM0121 (class id), skip: 1 // time load befour}\n    let reqClass = data.class;\n    // if (!reqClass) {\n    //   reqClass = user.cls[0];\n    // }\n    if (reqClass) {\n      if (user.pow[1] || user.pow[2]) {\n        const student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n          class: reqClass,\n          'power.0': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1,\n            power: 1\n          }\n        }).limit(30).skip(30 * data.skip).toArray());\n        const transformedData = student_list.map(item => {\n          let role = 'UnKnow'; // Giả định giá trị mặc định là 'unknow'\n          let dang_vien = false;\n          let cham_diem = false;\n          let lap_hoat_dong = false;\n          dang_vien = item.power['10'] ? true : false;\n          cham_diem = item.power['1'] ? true : false;\n          lap_hoat_dong = item.power['3'] ? true : false;\n          if (item.power['1'] || item.power['3']) {\n            role = 'Ban cán sự';\n          } else if (item.power['0']) {\n            role = 'Sinh viên';\n          }\n          return {\n            _id: item._id,\n            first_name: item.first_name,\n            last_name: item.last_name,\n            role,\n            dang_vien,\n            cham_diem,\n            lap_hoat_dong\n          };\n        });\n        return res.status(200).json(transformedData);\n      } else {\n        return res.sendStatus(403);\n      }\n    } else {\n      return res.sendStatus(404);\n    }\n  });\n  router.get('/getStudentInfoMark', checkIfUserLoginAPI, async (req, res) => {\n    const user = req.session.user;\n    let result = {\n      dang_vien: user.pow[10] ? true : false,\n      cham_diem: user.pow[1] ? true : false,\n      lap_hoat_dong: user.pow[3] ? true : false\n    };\n    return res.status(200).json(result);\n  });\n  router.get('/getuserscore', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[0]) {\n        const schoolYearParam = req.query.schoolYear;\n        const schoolYearsToSearch = ['HK1_' + schoolYearParam, 'HK2_' + schoolYearParam];\n        const studentTotalScores = await Promise.all(schoolYearsToSearch.map(async year => {\n          const studentTotalScore = await client.db(user.dep).collection(user.cls[0] + '_std_table').findOne({\n            mssv: user._id,\n            school_year: year\n          }, {\n            projection: {\n              _id: 0,\n              total: 1\n            }\n          });\n          return {\n            year: year.slice(0, 3),\n            total: studentTotalScore ? studentTotalScore.total : 'Chưa có điểm'\n          };\n        }));\n        return res.status(200).json(studentTotalScores);\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | GET_USER_SCORE | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api add or edit branch of department base on it exist or not\n  router.post('/addOrEditBranchs', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {old_name: \"Hệ thống thông tin\", name: \"Kỹ Thuật Phần Mềm\"}\n\n      // must be department to use this api\n      if (user.pow[5]) {\n        // remove old branch\n        await client.db(name_global_databases).collection('branchs').deleteOne({\n          _id: createId(data.old_name)\n        });\n        // add new branch\n        await client.db(name_global_databases).collection('branchs').insertOne({\n          _id: createId(data.name),\n          name: data.name,\n          dep: user.dep\n        });\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | ADD_OR_EDIT_BRANCHS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api delete cheked branchs\n  router.post('/deleteBranchs', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {rm_bs: [\"Kỹ Thuật Phần Mềm\", ...]}\n\n      // must be department to use this api\n      if (user.pow[5]) {\n        // remove all cheked branch in remove branchs líst\n        for (let i = 0; i < data.rm_bs.length; i++) {\n          await client.db(name_global_databases).collection('branchs').deleteOne({\n            _id: createId(data.rm_bs[i])\n          });\n          const dummy_class = await client.db(name_global_databases).collection('classes').find({\n            branch: createId(data.rm_bs[i])\n          }, {\n            projection: {\n              cvht: 1\n            }\n          }).toArray();\n          const cls_rm_data = dummy_class.map(cls => cls._id);\n          const cvht_rm_data = dummy_class.map(cls => cls.cvht);\n          const requestData = {\n            rm_cls: cls_rm_data,\n            rm_ts: cvht_rm_data\n          };\n\n          // // Gọi API bằng axios với phương thức POST\n          await deleteClassApi(requestData, user);\n          await client.db(name_global_databases).collection('user_info').updateMany({\n            _id: {\n              $in: cvht_rm_data\n            }\n          }, {\n            $set: {\n              branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n            }\n          });\n        }\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n    } catch (err) {\n      console.log('SYSTEM | DELETE_BRANCHS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // change mark deadline\n  router.post('/changeDeadLine', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      // must be department to use this api\n      if (user.pow[6]) {\n        const data = req.body; // data = {sch_y: \"HK1_2022-2023\", start_day: '18/10/2023', end_day: '19/11/999999999999999999']}\n        const cy = data.sch_y.split('_');\n        console.log(data);\n        // set end day to special date if it is ''\n        if (!data.end_day) {\n          data.end_day = '2003-10-18'; // special date\n        }\n        await client.db(name_global_databases).collection('school_year').updateOne({}, {\n          $set: {\n            year: data.sch_y,\n            start_day: new Date(data.start_day),\n            // change string to Date\n            end_day: new Date(data.end_day)\n          }\n        });\n        const keyupdate = `years.${cy[1]}`;\n        await client.db(name_global_databases).collection('classes').updateMany({}, {\n          $set: {\n            [keyupdate]: [1, 2, 3]\n          }\n        });\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n    } catch (err) {\n      console.log('SYSTEM | CHANGE_DEADLINE | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api add or edit teacher of department base on it exist or not\n  router.post('/addOrEditTeachers', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {old_id: \"19112003\", new_id: \"18102003\", new_name: \"Nguyễn Văn A\", branch: \"KTPM\"}\n\n      // must be department to use this api\n      if (user.pow[8]) {\n        // find to get old pass of teacher before remove it\n        const teacher_pass = await client.db(name_global_databases).collection('login_info').findOne({\n          _id: data.old_id\n        }, {\n          projection: {\n            password: 1\n          }\n        });\n        // find to get curr classes\n        const curr_teacher = await client.db(name_global_databases).collection('user_info').findOne({\n          _id: data.old_id\n        }, {\n          projection: {\n            class: 1,\n            avt: 1,\n            email: 1\n          }\n        });\n        if (curr_teacher) {\n          // remove old teachers\n          await client.db(name_global_databases).collection('user_info').deleteOne({\n            _id: data.old_id\n          });\n\n          // edit old one\n          await client.db(name_global_databases).collection('user_info').insertOne({\n            _id: data.new_id,\n            first_name: data.new_name.split(' ').slice(-1).join(' '),\n            last_name: data.new_name.split(' ').slice(0, -1).join(' '),\n            avt: curr_teacher.avt,\n            power: {\n              1: true,\n              3: true,\n              4: true\n            },\n            class: curr_teacher.class,\n            displayName: data.new_name,\n            // here before pop\n            branch: data.branch,\n            email: curr_teacher.email\n          });\n        } else {\n          // add new one\n          await client.db(name_global_databases).collection('user_info').insertOne({\n            _id: data.new_id,\n            first_name: data.new_name.split(' ').slice(-1).join(' '),\n            last_name: data.new_name.split(' ').slice(0, -1).join(' '),\n            avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\n            power: {\n              1: true,\n              3: true,\n              4: true\n            },\n            class: [],\n            displayName: data.new_name,\n            // here before pop\n            branch: data.branch,\n            email: ''\n          });\n        }\n        if (teacher_pass) {\n          await client.db(name_global_databases).collection('login_info').deleteOne({\n            _id: data.old_id\n          });\n          // edit old one\n          await client.db(name_global_databases).collection('login_info').insertOne({\n            _id: data.new_id,\n            password: hashPassword(teacher_pass.password)\n          });\n        } else {\n          // add new one\n          await client.db(name_global_databases).collection('login_info').insertOne({\n            _id: data.new_id,\n            password: hashPassword(data.new_id)\n          });\n        }\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | ADD_OR_EDIT_BRANCHS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api delete teachers checked\n  router.post('/deleteTeachers', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {rm_ts: [\"19112003\" (teacher_id), ...]}\n\n      // must be department to use this api\n      if (user.pow[8]) {\n        // remove all cheked teacher in remove teachers líst in user_info and login_info\n        await client.db(name_global_databases).collection('user_info').deleteMany({\n          _id: {\n            $in: data.rm_ts\n          }\n        });\n        await client.db(name_global_databases).collection('login_info').deleteMany({\n          _id: {\n            $in: data.rm_ts\n          }\n        });\n        await client.db(name_global_databases).collection('classes').updateMany({\n          cvht: {\n            $in: data.rm_ts\n          }\n        },\n        // Điều kiện để xác định tài liệu cần cập nhật\n        {\n          $set: {\n            cvht: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n          }\n        } // Sử dụng $pull để xoá các giá trị trong mảng cvht\n        );\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | DELETE_TEACHER | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api checkin students to activity\n  router.post('/CheckinActivities', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {id: '19181011' (activity's id), level: (Lớp/Khoa/Trường);\n      if (user.pow[0]) {\n        switch (data.level) {\n          case 'Lớp':\n            await client.db(user.dep).collection(`${user.cls[0]}_activities`).updateOne({\n              _id: data.id\n            }, {\n              $set: {\n                [`student_list.${user._id}`]: 0\n              }\n              // $push: {\n              //   bonus_list: user._id,\n              // },\n            }, {\n              upsert: true\n            });\n            return res.status(200).json({\n              id: user._id,\n              cls: user.cls\n            });\n          case 'Khoa':\n            // save activity in activities collection in 'Dep name' database\n            await client.db(user.dep).collection('activities').updateOne({\n              _id: data.id\n            }, {\n              $set: {\n                [`student_list.${user._id}`]: 0\n              }\n              // $push: {\n              //   bonus_list: user._id,\n              // },\n            }, {\n              upsert: true\n            });\n            return res.status(200).json({\n              id: user._id,\n              cls: user.cls\n            });\n          case 'Trường':\n            await client.db(name_global_databases).collection('activities').updateOne({\n              _id: data.id\n            }, {\n              $set: {\n                [`student_list.${user._id}`]: 0\n              }\n              // $push: {\n              //   bonus_list: user._id,\n              // },\n            }, {\n              upsert: true\n            });\n            return res.status(200).json({\n              id: user._id,\n              cls: user.cls\n            });\n        }\n        return res.status(404).json({\n          message: 'Thông tin xác thực sai!'\n        });\n      } else {\n        return res.sendStatus(403);\n      }\n\n      // use later to update student joining inside activities database\n      // student_list: {}, // change later to list of student with value is boolean (true for joining and false for not joining)\n      // bonus_list: [], // list of student's id that have bonus.\n    } catch (err) {\n      console.log('SYSTEM | CHECK_IN_ACTIVITIES | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api 出席 gakusei to activity\n  router.post('/muster', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {id: '19181011' (activity's id), level: (Lớp/Khoa/Trường);\n      if (user.pow[0]) {\n        switch (data.level) {\n          case 'Lớp':\n            await client.db(user.dep).collection(`${user.cls[0]}_activities`).updateOne({\n              _id: data.id\n            }, {\n              $set: {\n                [`ai.${user._id}`]: true\n              }\n              // $push: {\n              //   bonus_list: user._id,\n              // },\n            }, {\n              upsert: true\n            });\n            break;\n          case 'Khoa':\n            // save activity in activities collection in 'Dep name' database\n            await client.db(user.dep).collection('activities').updateOne({\n              _id: data.id\n            }, {\n              $set: {\n                [`ai.${user._id}`]: true\n              }\n              // $push: {\n              //   bonus_list: user._id,\n              // },\n            }, {\n              upsert: true\n            });\n            break;\n          case 'Trường':\n            await client.db(name_global_databases).collection('activities').updateOne({\n              _id: data.id\n            }, {\n              $set: {\n                [`ai.${user._id}`]: true\n              }\n              // $push: {\n              //   bonus_list: user._id,\n              // },\n            }, {\n              upsert: true\n            });\n            break;\n        }\n        await client.db(user.dep).collection(user.cls[0] + '_std_table').updateOne({\n          mssv: user._id,\n          school_year: data.year\n        }, {\n          $set: {\n            [`img_ids.${data.id}`]: data.img_ids\n          }\n        }, {\n          upsert: true\n        });\n        return res.status(200).json({\n          id: user._id,\n          cls: user.cls\n        });\n      } else {\n        return res.sendStatus(403);\n      }\n\n      // use later to update student joining inside activities database\n      // student_list: {}, // change later to list of student with value is boolean (true for joining and false for not joining)\n      // bonus_list: [], // list of student's id that have bonus.\n    } catch (err) {\n      console.log('SYSTEM | CHECK_IN_ACTIVITIES | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api add and edit activities -------------------------------------------------------------------------------------------------------------------------------\n  router.post('/addOrEditActivities', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {atv_id: '19181011' (activity's id);\n      // name: 'Hoat dong hay nha';\n      // content: 'Di du thu noi';\n      // 'level': 'khoa';\n      // cls_id:'KTPM';\n      // start_date: '2020-05-18';\n      // start_hour: '14:10:30'}\n\n      if (user.pow[3] && user.pow[11]) {\n        // get curr school year\n        const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1\n          }\n        });\n        // if it is a new one Send fake id and sure that not exist in database\n        switch (data.level) {\n          case 'lop':\n            // save activity in 'Class name' + _activities collection in 'Department name' database\n            await client.db(user.dep).collection(data.cls_id + '_activities').updateOne({\n              _id: data.atv_id\n            }, {\n              $set: {\n                name: data.name,\n                content: data.content,\n                level: 'Lớp',\n                cls: data.cls_id,\n                year: school_year.year,\n                start_time: new Date([data.start_date, data.start_hour]),\n                end: false\n              }\n            }, {\n              upsert: true\n            });\n\n            // check other databases if this activities in thoese collection remove it\n            await client.db(name_global_databases).collection('activities').deleteOne({\n              _id: data.atv_id\n            }); // school\n\n            await client.db(user.dep).collection('activities').deleteOne({\n              _id: data.atv_id\n            }); // department\n\n            // create index for new table has just created\n            await await client.db(user.dep).collection(data.cls_id + '_activities').createIndex({\n              year: 1\n            }, {\n              name: '_year'\n            });\n            break;\n          case 'khoa':\n            // save activity in activities collection in 'Dep name' database\n            await client.db(user.dep).collection('activities').updateOne({\n              _id: data.atv_id\n            }, {\n              $set: {\n                name: data.name,\n                content: data.content,\n                level: 'Khoa',\n                year: school_year.year,\n                start_time: new Date([data.start_date, data.start_hour]),\n                end: false\n              }\n            }, {\n              upsert: true\n            });\n\n            // check other databases if this activities in thoese collection remove it\n            await client.db(name_global_databases).collection('activities').deleteOne({\n              _id: data.atv_id\n            }); // school\n            await client.db(user.dep).collection(data.cls_id + '_activities').deleteOne({\n              _id: data.atv_id\n            }); // class\n\n            // create index for new table has just created\n            await client.db(user.dep).collection('activities').createIndex({\n              year: 1\n            }, {\n              name: '_year'\n            });\n            break;\n          case 'truong':\n            // save activity in activities collection in global database\n            await client.db(name_global_databases).collection('activities').updateOne({\n              _id: data.atv_id\n            }, {\n              $set: {\n                name: data.name,\n                content: data.content,\n                level: 'Trường',\n                year: school_year.year,\n                start_time: new Date([data.start_date, data.start_hour]),\n                end: false\n              }\n            }, {\n              upsert: true\n            });\n\n            // check other databases if this activities in thoese collection remove it\n            await client.db(user.dep).collection('activities').deleteOne({\n              _id: data.atv_id\n            }); // department\n            await client.db(user.dep).collection(data.cls_id + '_activities').deleteOne({\n              _id: data.atv_id\n            }); // class\n\n            // school database do not need create index because it already have it\n            break;\n        }\n        wss.clients.forEach(ws => {\n          if (ws.actId == data.atv_id) {\n            ws.send('reload');\n          }\n        });\n        return res.status(200).json({\n          message: 'Success'\n        });\n      } else {\n        return res.sendStatus(403);\n      }\n\n      // use later to update student joining inside activities database\n      // student_list: {}, // change later to list of student with value is boolean (true for joining and false for not joining)\n      // bonus_list: [], // list of student's id that have bonus.\n    } catch (err) {\n      console.log('SYSTEM | ADD_EDIT_ACTIVITIES | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api load activities base on years -------------------------------------------------------------------------------------------------------------------------------\n  router.post('/loadYearActivities', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {year: '2022-2023', semester: '1'}\n      const curr_year = 'HK' + data.semester + '_' + data.year;\n      if (user.pow[3]) {\n        // find all activities in this year:\n        // get all activities of school\n        const school_atv = await client.db(name_global_databases).collection('activities').find({\n          year: curr_year\n        }, {\n          projection: {\n            name: 1,\n            content: 1,\n            year: 1\n          }\n        }).toArray();\n\n        // get all activities of dep\n        const dep_atv = await client.db(user.dep).collection('activities').find({\n          year: curr_year\n        }, {\n          projection: {\n            name: 1,\n            content: 1,\n            year: 1\n          }\n        }).toArray();\n\n        // get all activities of class of department\n        const collections = await client.db(user.dep).listCollections().toArray();\n\n        // Filter collections ending with '_activities'\n        const activityCollections = collections.filter(collection => collection.name.endsWith('_activities'));\n\n        // Loop through activity collections and retrieve all documents\n        const cls_atvs = await activityCollections.map(async collection => {\n          if (user.pow[1]) {\n            const dummy = await client.db(user.dep).collection(collection.name).find({\n              year: curr_year,\n              cls: user.cls[0]\n            }, {\n              projection: {\n                name: 1,\n                content: 1,\n                cls: 1,\n                year: 1\n              }\n            }).toArray();\n            return dummy;\n          } else {\n            const dummy = await client.db(user.dep).collection(collection.name).find({\n              year: curr_year\n            }, {\n              projection: {\n                name: 1,\n                content: 1,\n                cls: 1,\n                year: 1\n              }\n            }).toArray();\n            return dummy;\n          }\n        });\n        Promise.all(cls_atvs).then(results => {\n          // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\n          // Bạn có thể làm gì đó với kết quả ở đây.\n          const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\n\n          const final = {\n            school_atv: school_atv,\n            dep_atv: dep_atv,\n            cls_atv: cls_atv\n          };\n          return res.status(200).json(final);\n        }).catch(error => {\n          // Xử lý lỗi nếu có\n          console.log('SYSTEM | LOAD_YEAR_ACTIVITIES | ERROR |', error);\n        });\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | LOAD_YEAR_ACTIVITIES | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api load activities base on class -------------------------------------------------------------------------------------------------------------------------------\n  router.post('/loadClassActivities', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {cls: 'KTPM0121'}\n      if (user.pow[3]) {\n        // get all activities in that class:\n        const cls_act = await client.db(user.dep).collection(data.cls + '_activities').find({}).toArray();\n        return res.status(200).json(cls_act);\n      } else {\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | LOAD_CLASS_ACTIVITIES | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api end activities\n  router.post('/updateActivitiesStatus', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {_id: 18102003 (activities' id), level: 'Truong', status: '1' (1: đang diễn ra, 0: đã kết thúc)}\n      // must be department to use this api\n      if (user.pow[3]) {\n        if (data.level == 'Truong') {\n          // update status of current activity\n          await client.db(name_global_databases).collection('activities').updateOne({\n            _id: data._id\n          }, {\n            $set: {\n              end: data.status == '1'\n            }\n          });\n        } else if (data.level == 'Khoa') {\n          // update status of current activity\n          await client.db(user.dep).collection('activities').updateOne({\n            _id: data._id\n          }, {\n            $set: {\n              end: data.status == '1'\n            }\n          });\n        } else {\n          // update status of current activity\n          await client.db(user.dep).collection(data.level + '_activities').updateOne({\n            _id: data._id\n          }, {\n            $set: {\n              end: data.status == '1'\n            }\n          });\n        }\n        wss.clients.forEach(ws => {\n          if (ws.actId == data._id) {\n            ws.send('reload');\n          }\n        });\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403); // send user to 403 page\n      }\n    } catch (err) {\n      console.log('SYSTEM | DELETE_TEACHER | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api approval students join in activity\n  router.post('/approvalActivityStudent', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {_id: _id, level: level, dataUpdate: list of update students, defaultApproval: old student list}\n      // must be department to use this api\n      const ai = {};\n      Object.keys(data.dataUpdate).forEach(key => {\n        ai[key] = data.dataUpdate[key] === 1 ? true : false;\n      });\n      if (user.pow[3]) {\n        if (data.level == 'Truong') {\n          // update status of current activity\n          await client.db(name_global_databases).collection('activities').updateOne({\n            _id: data._id\n          }, {\n            $set: {\n              student_list: data.dataUpdate,\n              ai: ai\n            }\n          });\n        } else if (data.level == 'Khoa') {\n          // update status of current activity\n          await client.db(user.dep).collection('activities').updateOne({\n            _id: data._id\n          }, {\n            $set: {\n              student_list: data.dataUpdate,\n              ai: ai\n            }\n          });\n        } else {\n          // update status of current activity\n          await client.db(user.dep).collection(data.level + '_activities').updateOne({\n            _id: data._id\n          }, {\n            $set: {\n              student_list: data.dataUpdate,\n              ai: ai\n            }\n          });\n        }\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403); // send user to 403 page\n      }\n    } catch (err) {\n      console.log('SYSTEM | APPROVAL ACTIVITY STUDENTS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api delete student join in activity\n  router.post('/deleteActivityStudent', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {_id: _id, level: level, dataDelete: dataDelete }\n\n      // must be department to use this api\n      if (user.pow[3]) {\n        if (data.level == 'Truong') {\n          // update status of current activity\n          await client.db(name_global_databases).collection('activities').updateOne({\n            _id: data._id\n          }, {\n            $unset: data.dataDelete\n          });\n        } else if (data.level == 'Khoa') {\n          // update status of current activity\n          await client.db(user.dep).collection('activities').updateOne({\n            _id: data._id\n          }, {\n            $unset: data.bonusDelete\n          });\n        } else {\n          // update status of current activity\n          await client.db(user.dep).collection(data.level + '_activities').updateOne({\n            _id: data._id\n          }, {\n            $unset: data.bonusDelete\n          });\n        }\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403); // send user to 403 page\n      }\n    } catch (err) {\n      console.log('SYSTEM | DELETE ACTIVITY STUDENTS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api delete activities checked\n  router.post('/deleteActivities', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {school_rmatv: [\"19112003\" (school_activity_id), ...], dep_rmatv: [\"28091978\" (dep_activity_id), ...], cls_rmatv: [\"18102003\" (cls_activity_id), ...]}\n\n      // must be department to use this api\n      if (user.pow[3] && user.pow[11]) {\n        // remove all checked school activities\n        await client.db(name_global_databases).collection('activities').deleteMany({\n          _id: {\n            $in: data.school_rmatv\n          }\n        });\n\n        // remove all checked dep activities\n        await client.db(user.dep).collection('activities').deleteMany({\n          _id: {\n            $in: data.dep_rmatv\n          }\n        });\n\n        // remove all checked class activities\n        // get all activities of class of department\n        const collections = await client.db(user.dep).listCollections().toArray();\n\n        // Filter collections ending with '_activities'\n        const activityCollections = await collections.filter(collection => collection.name.endsWith('_activities'));\n\n        // Loop through activity collections and retrieve all documents\n        activityCollections.forEach(async activityCollection => {\n          await client.db(user.dep).collection(activityCollection.name).deleteMany({\n            _id: {\n              $in: data.cls_rmatv\n            }\n          });\n        });\n        return res.sendStatus(200);\n      } else {\n        return res.sendStatus(403); // send user to 403 page\n      }\n    } catch (err) {\n      console.log('SYSTEM | DELETE_TEACHER | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // load bang diem cua giao vien------------------------------------------------------------------------------------------------------------------\n  router.get('/teacher/loadScoresList', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      if (user.pow[1]) {\n        const data = req.query;\n        //data = {year: \"HK1_2022-2023\", cls: \"1\"}\n        const school_year = data.year;\n        const year_available = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1,\n            start_day: 1,\n            end_day: 1\n          }\n        });\n        const student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n          class: data.cls,\n          'power.0': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1,\n            total_score: 1\n          }\n        }).toArray());\n\n        // get all student total score from themself:\n        let result = {\n          // staff_name: [],\n          student_list: student_list,\n          // student_scores: [],\n          // staff_scores: [],\n          // department_scores: [],\n          year_available: year_available\n        };\n        return res.status(200).json(result);\n      } else {\n        // user not staff members\n        // redirect to home (return 403, api khong the chuyenh huong ve trang chu duoc)\n        return res.sendStatus(403);\n      }\n    } catch (err) {\n      console.log('SYSTEM | GIAO_VIEN_LOAD_SCORE_LIST | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api add and edit new class\n  router.post('/addOrEditClasses', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {new_id: KTPM0121, old_id: CNTT0221, branch: KTPM, cvht: 18101911}\n\n      // must be department to use this api\n      if (user.pow[9]) {\n        const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1\n          }\n        });\n        const curr_year = school_year.year.split('_')[1];\n\n        // find year of old_id class before remove it\n        const old_class = await client.db(name_global_databases).collection('classes').findOne({\n          _id: data.old_id\n        }, {\n          projection: {\n            _id: 0,\n            years: 1,\n            cvht: 1\n          }\n        });\n        if (old_class) {\n          // remove old_id class\n          await client.db(name_global_databases).collection('classes').deleteOne({\n            _id: data.old_id\n          });\n\n          // add (edit old_id class)\n          await client.db(name_global_databases).collection('classes').insertOne({\n            _id: data.new_id,\n            years: old_class.years,\n            // years of old_id class\n            branch: data.branch,\n            cvht: data.cvht\n          });\n\n          // remove class from old teacher's class\n          await client.db(name_global_databases).collection('user_info').updateOne({\n            _id: old_class.cvht\n          }, {\n            $pull: {\n              class: data.old_id\n            }\n          });\n\n          // add new class to new teacher's class\n          await client.db(name_global_databases).collection('user_info').updateOne({\n            _id: data.cvht\n          }, {\n            $addToSet: {\n              class: data.new_id\n            }\n          });\n        } else {\n          // add new_id class\n          await client.db(name_global_databases).collection('classes').insertOne({\n            _id: data.new_id,\n            years: {\n              [`${curr_year}`]: [1, 2, 3]\n            },\n            branch: data.branch,\n            cvht: data.cvht\n          });\n\n          // add new class to teacher's class\n          await client.db(name_global_databases).collection('user_info').updateOne({\n            _id: data.cvht\n          }, {\n            $addToSet: {\n              class: data.new_id\n            }\n          });\n        }\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | ADD_EDIT_CLASS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api delete classes checked\n  router.post('/deleteClasses', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {rm_cls: [\"KTPM0121\" (class_id), ...], rm_ts: [\"18101911\" (teacher_id), ...]}\n\n      // must be department to use this api\n      if (user.pow[9]) {\n        // remove all checked classes in remove branchs líst in user_info and login_info\n        // remove class from teacher's class\n        await deleteClassApi(data, user);\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n      return res.sendStatus(200);\n    } catch (err) {\n      console.log('SYSTEM | DELETE_CLASS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // api load classes\n  router.post('/loadClasses', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {curr_load_branch: 1 (next index to load), branchs: [KTPM, CNTT, ...] (all branch in department)}\n\n      // must be department to use this api\n      if (user.pow[9]) {\n        // get all classes of not load branchs:\n        let classes = {}; // classes = {KTPM: [KTPM0121, KTPM0108, ...], CNTT: [CNTT0109, CNTT0209, ...], ...}\n        let class_teachers = []; // class_teachers = [18102003, 19112003, ...]\n        let new_curr_load_branch; // next final branch loaded\n\n        for (let i = data.curr_load_branch; i < data.branchs.length; i++) {\n          let dummy = await client.db(name_global_databases).collection('classes').find({\n            branch: data.branchs[i]._id\n          },\n          // find all data\n          {\n            projection: {\n              cvht: 1\n            }\n          }).toArray();\n          classes[data.branchs[i]._id] = dummy.map(cls => cls._id);\n          class_teachers.push(...dummy.map(cls => cls.cvht));\n          new_curr_load_branch = i + 1;\n          // finish load one brach then check does number of classes over 30.\n          if (class_teachers.length >= 30) {\n            break;\n          }\n        }\n\n        // get all teacher's name of classes\n        for (let i = 0; i < class_teachers.length; i++) {\n          // replace current teacher's _id with teacher's name\n          class_teachers[i] = await client.db(name_global_databases).collection('user_info').findOne({\n            _id: class_teachers[i],\n            'power.1': {\n              $exists: true\n            },\n            'power.4': {\n              $exists: true\n            }\n          },\n          // user is teacher\n          {\n            projection: {\n              first_name: 1,\n              last_name: 1\n            }\n          });\n        }\n        return res.status(200).json({\n          classes: classes,\n          class_teachers: class_teachers,\n          new_curr_load_branch: new_curr_load_branch\n        });\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n    } catch (err) {\n      console.log('SYSTEM | DELETE_CLASS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  router.post('/exportaccount', upload.single('file'), checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const Class = req.body.class;\n      const studentList = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n        class: Class,\n        'power.0': {\n          $exists: true\n        }\n      }, {\n        projection: {\n          _id: 1,\n          last_name: 1,\n          first_name: 1\n        }\n      }).toArray());\n      const workbook = await XlsxPopulate.fromFileAsync('./src/excelTemplate/FILE_TAO_ACC.xlsx');\n      const dataRows = [];\n      for (const student of studentList) {\n        const loginInfo = await client.db(name_global_databases).collection('login_info').findOne({\n          _id: student._id\n        }, {\n          projection: {\n            _id: 1,\n            password: 1\n          }\n        });\n        if (loginInfo) {\n          const dataRow = [student._id, loginInfo.password, student.last_name, student.first_name];\n          dataRows.push(dataRow);\n        }\n      }\n      if (dataRows.length > 0) {\n        await workbook.sheet(0).cell('A2').value(dataRows);\n      }\n      const uuid = uuidv4();\n      const outputFile = path.join(`.downloads/${uuid}.xlsx`);\n      await workbook.toFileAsync(outputFile);\n      console.log(path.join('.downloads', uuid + '.xlsx'));\n      scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\n      return res.download(path.join('.downloads', uuid + '.xlsx'));\n    } catch (err) {\n      console.log('SYSTEM | EXPORT ACCOUNT | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  // api get img acti student\n  router.post('/getImgActivities', checkIfUserLoginAPI, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const data = req.body; // data = {curr_load_branch: 1 (next index to load), branchs: [KTPM, CNTT, ...] (all branch in department)}\n\n      // must be department to use this api\n      if (user.pow[3]) {\n        imglist = await client.db(user.dep).collection(data.class + '_std_table').findOne({\n          mssv: data._id,\n          school_year: data.year\n        }, {\n          projection: {\n            img_ids: 1\n          }\n        });\n        if (data.idact in imglist.img_ids) {\n          let imginfo = [];\n          for (const i of imglist.img_ids[data.idact]) {\n            imginfo.push(await server.getDriveFileLinkAndDescription(i));\n          }\n          return res.status(200).json(imginfo);\n        } else return res.status(404).json();\n      } else {\n        return res.sendStatus(403); // back to home\n      }\n    } catch (err) {\n      console.log('SYSTEM | LOAD_IMG_STUDENTS | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n  return router;\n}\nmodule.exports = createAPIRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","XlsxPopulate","v4","uuidv4","path","fs","uploadDirectory","join","multer","server","ObjectId","getNameGlobal","name_global_databases","comparePassword","hashPassword","sortStudentName","scheduleFileDeletion","mark","updateStudentTotalScore","sendEmail","randomPassword","checkIfUserLoginAPI","createId","get_full_id","deleteClassApi","createPdf","existsSync","mkdirSync","storage_file","diskStorage","destination","req","file","cb","filename","originalname","upload","storage","createAPIRouter","client","wss","post","res","data","body","user","session","db","collection","findOne","_id","mssv","user_info_check","class","deleteOne","sendStatus","password","seasionIDs","sessionId","existingDocs","find","$in","toArray","existingIDs","map","doc","idsToDelete","filter","id","includes","length","updateOne","$pull","cls","projection","power","dep","branch","pow","remember","cookie","maxAge","$push","upsert","first","status","json","check","err","console","log","get","destroy","processSessionIDs","redirect","error","result","listSeasionId","splice","indexOf","$ne","deleteMany","clients","forEach","ws","send","$set","displayName","avt","OTP","otp","otpcode","dataUser","email","OTPscode","expireAt","Date","now","old_pass","old_password","new_password","$unset","marker","last_name","first_name","marked","array","files","list_name","list_dep","i","fileName","fileDescription","descripts","push","writeHead","end","JSON","stringify","single","dummyScore","second","third","fourth","fifth","img_ids","total","fileStudents","generateEmail","str","s1","s0","newStr","listSpace","output","charAt","slice","replace","toLowerCase","workbook","fromFileAsync","sheet","values","usedRange","value","expectedValues","isCorrect","endCell","rowCount","rowNumber","columnCount","column","cell","havevalue","row","hasValue","maxWidthEmail","dataRows","pw","toString","dataInsertUser","total_score","dataInsertLogin","dataRow","range","style","border","width","uuid","toFileAsync","workbookacc","outputFile","download","studentIdToCheck","dataStudent","listDelete","dataDelete","info_search","updateMany","$exists","student_list","ai","query","school_year","year","scores","curr_score","curr_departmentt_score","j","stdlist","parse","type","name","std","stf","curr_students_score","curr_staff_score","temp_namefile","year_available","start_day","end_day","statusCode","std_list","std_table","parseInt","reqClass","limit","skip","transformedData","item","role","dang_vien","cham_diem","lap_hoat_dong","schoolYearParam","schoolYear","schoolYearsToSearch","studentTotalScores","Promise","all","studentTotalScore","old_name","insertOne","rm_bs","dummy_class","cvht","cls_rm_data","cvht_rm_data","requestData","rm_cls","rm_ts","createFromHexString","cy","sch_y","split","keyupdate","teacher_pass","old_id","curr_teacher","new_id","new_name","level","message","cls_id","atv_id","content","start_time","start_date","start_hour","createIndex","actId","curr_year","semester","school_atv","dep_atv","collections","listCollections","activityCollections","endsWith","cls_atvs","dummy","then","results","cls_atv","concat","final","catch","cls_act","Object","keys","dataUpdate","key","bonusDelete","school_rmatv","dep_rmatv","activityCollection","cls_rmatv","old_class","years","$addToSet","classes","class_teachers","new_curr_load_branch","curr_load_branch","branchs","Class","studentList","student","loginInfo","imglist","idact","imginfo","getDriveFileLinkAndDescription","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["apiRouters.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst XlsxPopulate = require('xlsx-populate');\r\nconst { v4: uuidv4 } = require('uuid');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst uploadDirectory = path.join('../../upload_temp');\r\nconst multer = require('multer');\r\nconst server = require('../lib/csdl_google_lib');\r\n\r\nconst { ObjectId } = require('mongodb');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nconst {\r\n    comparePassword,\r\n    hashPassword,\r\n    sortStudentName,\r\n    scheduleFileDeletion,\r\n    mark,\r\n    updateStudentTotalScore,\r\n    sendEmail,\r\n    randomPassword,\r\n    checkIfUserLoginAPI,\r\n    createId,\r\n    get_full_id,\r\n    deleteClassApi,\r\n    createPdf,\r\n} = require('../lib/function_lib');\r\n\r\nif (!fs.existsSync(uploadDirectory)) {\r\n    fs.mkdirSync(uploadDirectory);\r\n}\r\nconst storage_file = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, uploadDirectory);\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, file.originalname);\r\n    },\r\n});\r\nconst upload = multer({ storage: storage_file });\r\n\r\n// API SPACE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nfunction createAPIRouter(client, wss) {\r\n    // Log in --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/login', async (req, res) => {\r\n        const data = req.body;\r\n        // 403: sai thong tin dang nhap\r\n        // data = {mssv: bbp, password: 1234567890, remember: true}\r\n        try {\r\n            const user = req.session.user;\r\n            if (!user) {\r\n                //(log in database)\r\n                let user = await client.db(name_global_databases).collection('login_info').findOne({ _id: data.mssv });\r\n                let user_info_check = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne({ _id: data.mssv });\r\n                if (user === null || user_info_check === null || user_info_check.class == []) {\r\n                    // kiểm tra nếu bên login có info mà bên user k có thì xoá bên login (ghost account)\r\n                    if (user) {\r\n                        await client.db(name_global_databases).collection('login_info').deleteOne({ _id: data.mssv });\r\n                    }\r\n                    if (user_info_check) {\r\n                        await client.db(name_global_databases).collection('user_info').deleteOne({ _id: data.mssv });\r\n                    }\r\n                    // Đăng nhập không thành công\r\n                    return res.sendStatus(403);\r\n                } else if (user._id === data.mssv && comparePassword(data.password, user.password)) {\r\n                    let seasionIDs = await client\r\n                        .db(name_global_databases)\r\n                        .collection('sessions_manager')\r\n                        .findOne({ _id: data.mssv });\r\n                    if (seasionIDs) {\r\n                        seasionIDs = seasionIDs.sessionId;\r\n                        const existingDocs = await client\r\n                            .db(name_global_databases)\r\n                            .collection('sessions')\r\n                            .find({ _id: { $in: seasionIDs } })\r\n                            .toArray();\r\n                        const existingIDs = existingDocs.map((doc) => doc._id);\r\n                        const idsToDelete = seasionIDs.filter((id) => !existingIDs.includes(id));\r\n                        if (idsToDelete.length > 0) {\r\n                            await client\r\n                                .db(name_global_databases)\r\n                                .collection('sessions_manager')\r\n                                .updateOne({ _id: data.mssv }, { $pull: { sessionId: { $in: idsToDelete } } });\r\n                        }\r\n                    }\r\n\r\n                    // get user class(cls), power and department(dep)\r\n                    const cls = await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .findOne({ _id: data.mssv }, { projection: { _id: 0, class: 1, power: 1, dep: 1 } });\r\n\r\n                    if (!cls.power[2]) {\r\n                        const branch = await client\r\n                            .db(name_global_databases)\r\n                            .collection('classes')\r\n                            .findOne({ _id: cls.class[0] }, { projection: { _id: 0, branch: 1 } });\r\n                        if (branch) {\r\n                            const dep = await client\r\n                                .db(name_global_databases)\r\n                                .collection('branchs')\r\n                                .findOne({ _id: branch.branch }, { projection: { _id: 0, dep: 1 } });\r\n\r\n                            user.dep = dep.dep;\r\n                        }\r\n                        user.cls = cls.class;\r\n                    } else {\r\n                        user.dep = cls.dep;\r\n                    }\r\n                    user.pow = cls.power;\r\n                    // Đăng nhập thành công, lưu thông tin người dùng vào phiên\r\n                    req.session.user = user;\r\n                    // Kiểm tra xem người dùng có chọn \"Remember me\" không\r\n                    if (data.remember) {\r\n                        // Thiết lập thời gian sống cookie lâu hơn để lưu thông tin đăng nhập trong 30 ngày\r\n                        req.session.cookie.maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days\r\n                    } else {\r\n                        // Thiết lập thời gian sống cookie lại về mặc định (1 giờ)\r\n                        req.session.cookie.maxAge = 3600000; // 1 hour\r\n                    }\r\n                    const sessionId = req.session.id;\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('sessions_manager')\r\n                        .updateOne({ _id: user._id }, { $push: { sessionId: sessionId } }, { upsert: true });\r\n\r\n                    if (user.first == 'new_user') {\r\n                        return res.status(200).json({ check: true });\r\n                    } else {\r\n                        return res.status(200).json({ check: false });\r\n                    }\r\n                } else {\r\n                    // Đăng nhập không thành công\r\n                    return res.sendStatus(403);\r\n                }\r\n            } else {\r\n                return res.sendStatus(404);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | LOG_IN | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Logout ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.get('/logout', checkIfUserLoginAPI, async (req, res) => {\r\n        // Xóa thông tin phiên (session) của người dùng\r\n        const mssv = req.session.user._id;\r\n        req.session.destroy((err) => {\r\n            if (err) {\r\n                console.log('SYSTEM | LOG_OUT | Failed to logout:', err);\r\n                return res.sendStatus(500);\r\n            } else {\r\n                let seasionIDs;\r\n                async function processSessionIDs() {\r\n                    try {\r\n                        seasionIDs = await client\r\n                            .db(name_global_databases)\r\n                            .collection('sessions_manager')\r\n                            .findOne({ _id: mssv });\r\n                        if (seasionIDs) {\r\n                            seasionIDs = seasionIDs.sessionId;\r\n                            const existingDocs = await client\r\n                                .db(name_global_databases)\r\n                                .collection('sessions')\r\n                                .find({ _id: { $in: seasionIDs } })\r\n                                .toArray();\r\n                            const existingIDs = existingDocs.map((doc) => doc._id);\r\n                            const idsToDelete = seasionIDs.filter((id) => !existingIDs.includes(id));\r\n\r\n                            if (idsToDelete.length > 0) {\r\n                                await client\r\n                                    .db(name_global_databases)\r\n                                    .collection('sessions_manager')\r\n                                    .updateOne({ _id: mssv }, { $pull: { sessionId: { $in: idsToDelete } } });\r\n                            }\r\n                        }\r\n\r\n                        return res.redirect('/login'); // Chạy hàm dưới sau khi đã xử lý xong\r\n                    } catch (error) {\r\n                        console.log('SYSTEM | LOG_OUT | Failed to clean up sessions:', error);\r\n                        return res.sendStatus(500);\r\n                    }\r\n                }\r\n\r\n                processSessionIDs();\r\n            }\r\n        });\r\n    });\r\n\r\n    // Đăng xuất tất cả thiết bị\r\n    router.get('/logoutAlldevice', checkIfUserLoginAPI, async (req, res) => {\r\n        // Xóa thông tin phiên (session) của người dùng\r\n        const _id = req.session.user._id;\r\n        const result = await client.db(name_global_databases).collection('sessions_manager').findOne({ _id: _id });\r\n        const listSeasionId = result.sessionId;\r\n        listSeasionId.splice(listSeasionId.indexOf(req.session.id), 1);\r\n        await client\r\n            .db(name_global_databases)\r\n            .collection('sessions_manager')\r\n            .updateOne(\r\n                { _id: _id },\r\n\r\n                { $pull: { sessionId: { $ne: req.session.id } } },\r\n            );\r\n        await client\r\n            .db(name_global_databases)\r\n            .collection('sessions')\r\n            .deleteMany({ _id: { $in: listSeasionId } });\r\n        wss.clients.forEach((ws) => {\r\n            if (listSeasionId.includes(ws.id)) {\r\n                ws.send('reload');\r\n            }\r\n        });\r\n        return res.sendStatus(200);\r\n    });\r\n\r\n    // Đổi thông tin người dùng --------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/updateInfo', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const data = req.body;\r\n            await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .updateOne(\r\n                    { _id: req.session.user._id },\r\n                    {\r\n                        $set: {\r\n                            displayName: data.displayName,\r\n                            avt: data.avt,\r\n                        },\r\n                    },\r\n                );\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | UPDATE_INFO | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Reset pass ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/resetpassword', async (req, res) => {\r\n        try {\r\n            const data = req.body;\r\n            const OTP = await client\r\n                .db(name_global_databases)\r\n                .collection('OTP')\r\n                .findOne({ _id: data.mssv }, { projection: { _id: 0 } });\r\n            if (OTP && comparePassword(data.otp, OTP.otpcode)) {\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('login_info')\r\n                    .updateOne({ _id: data.mssv }, { $set: { first: 'otp' } });\r\n                //(log in database)\r\n                let user = await client.db(name_global_databases).collection('login_info').findOne({ _id: data.mssv });\r\n                await client.db(name_global_databases).collection('OTP').deleteOne({ _id: data.mssv });\r\n                let seasionIDs = await client\r\n                    .db(name_global_databases)\r\n                    .collection('sessions_manager')\r\n                    .findOne({ _id: data.mssv });\r\n                if (seasionIDs) {\r\n                    seasionIDs = seasionIDs.sessionId;\r\n                    const existingDocs = await client\r\n                        .db(name_global_databases)\r\n                        .collection('sessions')\r\n                        .find({ _id: { $in: seasionIDs } })\r\n                        .toArray();\r\n                    const existingIDs = existingDocs.map((doc) => doc._id);\r\n                    const idsToDelete = seasionIDs.filter((id) => !existingIDs.includes(id));\r\n                    if (idsToDelete.length > 0) {\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('sessions_manager')\r\n                            .updateOne({ _id: data.mssv }, { $pull: { sessionId: { $in: idsToDelete } } });\r\n                    }\r\n                }\r\n\r\n                // get user class(cls), power and department(dep)\r\n                const cls = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne({ _id: data.mssv }, { projection: { _id: 0, class: 1, power: 1, dep: 1 } });\r\n\r\n                if (!cls.power[2]) {\r\n                    const branch = await client\r\n                        .db(name_global_databases)\r\n                        .collection('classes')\r\n                        .findOne({ _id: cls.class[0] }, { projection: { _id: 0, branch: 1 } });\r\n                    if (branch) {\r\n                        const dep = await client\r\n                            .db(name_global_databases)\r\n                            .collection('branchs')\r\n                            .findOne({ _id: branch.branch }, { projection: { _id: 0, dep: 1 } });\r\n\r\n                        user.dep = dep.dep;\r\n                    }\r\n                    user.cls = cls.class;\r\n                } else {\r\n                    user.dep = cls.dep;\r\n                }\r\n                user.pow = cls.power;\r\n                // Đăng nhập thành công, lưu thông tin người dùng vào phiên\r\n                req.session.user = user;\r\n                // Kiểm tra xem người dùng có chọn \"Remember me\" không\r\n                if (data.remember) {\r\n                    // Thiết lập thời gian sống cookie lâu hơn để lưu thông tin đăng nhập trong 30 ngày\r\n                    req.session.cookie.maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days\r\n                } else {\r\n                    // Thiết lập thời gian sống cookie lại về mặc định (1 giờ)\r\n                    req.session.cookie.maxAge = 3600000; // 1 hour\r\n                }\r\n                const sessionId = req.session.id;\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('sessions_manager')\r\n                    .updateOne({ _id: user._id }, { $push: { sessionId: sessionId } }, { upsert: true });\r\n                return res.sendStatus(200);\r\n            } else {\r\n                res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | RESET_PASSWORD | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Resent OTP ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/resendotp', async (req, res) => {\r\n        try {\r\n            const mssv = req.body.mssv;\r\n            const dataUser = await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .findOne({ _id: mssv }, { projection: { _id: 0, email: 1 } });\r\n            // Thêm tài liệu mới có thời gian hết hạn sau 1 phút\r\n            const OTPscode = await randomPassword();\r\n            await client\r\n                .db(name_global_databases)\r\n                .collection('OTP')\r\n                .updateOne(\r\n                    { _id: mssv },\r\n                    {\r\n                        $set: {\r\n                            otpcode: hashPassword(OTPscode),\r\n                            expireAt: new Date(Date.now() + 60 * 5 * 1000), // Hết hạn sau 5 phút\r\n                        },\r\n                    },\r\n                    { upsert: true },\r\n                );\r\n            if (dataUser) {\r\n                const email = dataUser.email;\r\n                await sendEmail(OTPscode, email);\r\n            }\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | RESEND_OTP | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Đổi pass ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/change_pass', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const data = req.body;\r\n            const old_pass = await client\r\n                .db(name_global_databases)\r\n                .collection('login_info')\r\n                .findOne({ _id: req.session.user._id }, { projection: { _id: 0, password: 1 } });\r\n            if (comparePassword(data.old_password, old_pass.password)) {\r\n                if (!comparePassword(data.new_password, old_pass.password)) {\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('login_info')\r\n                        .updateOne(\r\n                            { _id: req.session.user._id },\r\n                            { $set: { password: hashPassword(data.new_password) } },\r\n                        );\r\n                    return res.sendStatus(200);\r\n                } else {\r\n                    return res.sendStatus(403);\r\n                }\r\n            } else {\r\n                res.sendStatus(404);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | CHANGE_PASSWORD | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Đổi pass lần đầu đăng nhập -------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/first_login', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const data = req.body;\r\n            const old_pass = await client\r\n                .db(name_global_databases)\r\n                .collection('login_info')\r\n                .findOne({ _id: req.session.user._id }, { projection: { _id: 0, password: 1 } });\r\n\r\n            if (comparePassword(data.new_password, old_pass.password)) {\r\n                return res.sendStatus(403);\r\n            } else {\r\n                delete req.session.user.first;\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('login_info')\r\n                    .updateOne({ _id: req.session.user._id }, { $unset: { first: '' } });\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('login_info')\r\n                    .updateOne({ _id: req.session.user._id }, { $set: { password: hashPassword(data.new_password) } });\r\n                return res.sendStatus(200);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | CHANGE_PASSWORD | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Save table and update old table std------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/std_mark', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[0]) {\r\n                const data = req.body;\r\n                const marker = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        { _id: user._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const marked = await mark('_std_table', user, user._id, data, marker, user.cls[0]);\r\n\r\n                switch (marked) {\r\n                    case 0:\r\n                        return res.sendStatus(200);\r\n                    case 1:\r\n                        return res.sendStatus(203);\r\n                    case 2:\r\n                        return res.sendStatus(205);\r\n                }\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | STD_MARK | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Save table and update old table stf------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/stf_mark', checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user.pow[1]) {\r\n            try {\r\n                const data = req.body;\r\n                const marker = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        { _id: user._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const marked = await mark('_stf_table', user, data.mssv, data, marker, data.class);\r\n\r\n                switch (marked) {\r\n                    case 0:\r\n                        return res.sendStatus(200);\r\n                    case 1:\r\n                        return res.sendStatus(203);\r\n                    case 2:\r\n                        return res.sendStatus(205);\r\n                }\r\n            } catch (err) {\r\n                console.log('SYSTEM | STF_MARK | ERROR | ', err);\r\n                return res.sendStatus(500);\r\n            }\r\n        } else if (user.pow[4]) {\r\n            try {\r\n                const data = req.body;\r\n                const marker = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        { _id: user._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const marked = await mark('_stf_table', user, data.mssv, data, marker, user.cls[0]);\r\n\r\n                switch (marked) {\r\n                    case 0:\r\n                        return res.sendStatus(200);\r\n                    case 1:\r\n                        return res.sendStatus(203);\r\n                    case 2:\r\n                        return res.sendStatus(205);\r\n                }\r\n            } catch (err) {\r\n                console.log('SYSTEM | STF_MARK | ERROR | ', err);\r\n                return res.sendStatus(500);\r\n            }\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    // Save table and update old table dep------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/dep_mark', checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user.pow[2]) {\r\n            try {\r\n                const data = req.body;\r\n                const marker = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        { _id: user._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const marked = await mark('_dep_table', user, data.mssv, data, marker, data.class);\r\n\r\n                switch (marked) {\r\n                    case 0:\r\n                        return res.sendStatus(200);\r\n                    case 1:\r\n                        return res.sendStatus(203);\r\n                }\r\n\r\n                return res.sendStatus(200);\r\n            } catch (err) {\r\n                console.log('SYSTEM | STF_MARK | ERROR | ', err);\r\n                return res.sendStatus(500);\r\n            }\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    // Upload file -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/uploadFile', upload.array('files[]'), checkIfUserLoginAPI, async function (req, res) {\r\n        if (!req.files) {\r\n            return res.status(400).send('No file uploaded.');\r\n        }\r\n        let list_name = [];\r\n        let list_dep = [];\r\n        // Kiểm tra kiểu dữ liệu của các tệp\r\n        for (let i = 0; i < req.files.length; i++) {\r\n            const fileName = req.files[i].originalname;\r\n            const fileDescription = req.body.descripts[i]; // Trích xuất mô tả tương ứng từ danh sách descripts[]\r\n            list_dep.push(fileDescription);\r\n            list_name.push(fileName);\r\n        }\r\n\r\n        // Xử lý các tệp đã tải lên ở đây\r\n        res.writeHead(200, { 'Content-Type': 'applicaiton/json' });\r\n        return res.end(JSON.stringify(await get_full_id(uploadDirectory, list_name, list_dep)));\r\n    });\r\n\r\n    // Create new account -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/createAccount', upload.single('file'), checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        const dummyScore = {\r\n            first: [0, 0, 0, 0, 0],\r\n            second: [0, 0],\r\n            third: [0, 0, 0],\r\n            fourth: [0, 0, 0],\r\n            fifth: [0, 0, 0, 0],\r\n            img_ids: [],\r\n            total: 0,\r\n        };\r\n\r\n        if (user.pow[4] || user.pow[7]) {\r\n            const fileStudents = req.file;\r\n            async function generateEmail(str) {\r\n                let s1 =\r\n                    'ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠạẢảẤấẦầẨẩẪẫẬậẮắẰằẲẳẴẵẶặẸẹẺẻẼẽẾếỀềỂểỄễỆệỈỉỊịỌọỎỏỐốỒồỔổỖỗỘộỚớỜờỞởỠỡỢợỤụỦủỨứỪừỬửỮữỰựỲỳỴỵỶỷỸỹ';\r\n                let s0 =\r\n                    'AAAAEEEIIOOOOUUYaaaaeeeiioooouuyAaDdIiUuOoUuAaAaAaAaAaAaAaAaAaAaAaAaEeEeEeEeEeEeEeEeEeIiIiOoOoOoOoOoOoOoOoOoOoOoUuUuUuUuUuUuUuYyYyYyYy';\r\n                let newStr = '';\r\n                let listSpace = [];\r\n                for (let i = 0; i < str.length; i++) {\r\n                    if (s1.indexOf(str[i]) != -1) {\r\n                        newStr += s0[s1.indexOf(str[i])];\r\n                    } else {\r\n                        newStr += str[i];\r\n                    }\r\n                    if (str[i] == ' ') {\r\n                        listSpace.push(i);\r\n                    }\r\n                }\r\n                let output = newStr[0];\r\n                for (let i = 0; i < listSpace.length - 2; i++) {\r\n                    output += newStr.charAt(listSpace[i] + 1);\r\n                }\r\n                output += newStr.slice(listSpace[listSpace.length - 2] + 1).replace(/\\s/g, '');\r\n                return output.toLowerCase() + '@student.ctuet.edu.vn';\r\n            }\r\n\r\n            if (fileStudents) {\r\n                const workbook = await XlsxPopulate.fromFileAsync(fileStudents.path);\r\n                const sheet = workbook.sheet(0);\r\n                // const sheetCount = workbook.sheetCount();\r\n                const values = sheet.usedRange().value();\r\n                const usedRange = sheet.usedRange();\r\n\r\n                const expectedValues = ['MSSV', 'HỌ', 'TÊN'];\r\n                // const columnCount = expectedValues.length;\r\n                let isCorrect = true;\r\n                const endCell = usedRange.endCell();\r\n                const rowCount = endCell.rowNumber();\r\n                const columnCount = 3;\r\n\r\n                for (let column = 1; column <= columnCount; column++) {\r\n                    const cell = sheet.cell(1, column); // Ô đầu tiên trên hàng 1 và cột column\r\n                    const value = cell.value();\r\n\r\n                    if (value !== expectedValues[column - 1]) {\r\n                        isCorrect = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (isCorrect) {\r\n                    let havevalue = true;\r\n\r\n                    for (let row = 2; row <= 5; row++) {\r\n                        let hasValue = false;\r\n                        for (let column = 1; column <= columnCount; column++) {\r\n                            const cell = sheet.cell(row, column);\r\n                            const value = cell.value();\r\n\r\n                            if (value) {\r\n                                hasValue = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (hasValue) {\r\n                            break;\r\n                        } else {\r\n                            havevalue = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (havevalue) {\r\n                        if (req.body.status == 'true') {\r\n                            try {\r\n                                // read excel file:\r\n                                // create all account\r\n\r\n                                let maxWidthEmail = 0;\r\n                                //[['MSSV', 'Họ', 'Tên' ]]\r\n                                sheet.cell('D1').value('Email');\r\n                                sheet.cell('E1').value('Password');\r\n                                const dataRows = [];\r\n                                for (let i = 1; i < values.length; i++) {\r\n                                    let pw = await randomPassword();\r\n                                    let email = await generateEmail(\r\n                                        `${values[i][1].toString()} ${values[i][2].toString()} ${values[\r\n                                            i\r\n                                        ][0].toString()}`,\r\n                                    );\r\n                                    let dataInsertUser = {\r\n                                        _id: values[i][0].toString(),\r\n                                        first_name: values[i][2].toString(),\r\n                                        last_name: values[i][1].toString(),\r\n                                        avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\r\n                                        power: { 0: true },\r\n                                        class: [req.body.cls],\r\n                                        displayName: `${values[i][1].toString()} ${values[i][2].toString()}`,\r\n                                        email: email,\r\n                                        total_score: {},\r\n                                    };\r\n                                    let dataInsertLogin = {\r\n                                        _id: values[i][0].toString(),\r\n                                        password: hashPassword(pw),\r\n                                        first: 'new_user',\r\n                                    };\r\n\r\n                                    const dataRow = [\r\n                                        dataInsertUser._id,\r\n                                        pw,\r\n                                        dataInsertUser.last_name,\r\n                                        dataInsertUser.first_name,\r\n                                    ];\r\n                                    dataRows.push(dataRow);\r\n\r\n                                    client.db('global').collection('user_info').updateOne(\r\n                                        {\r\n                                            _id: dataInsertUser._id,\r\n                                        },\r\n                                        {\r\n                                            $set: dataInsertUser,\r\n                                        },\r\n                                        {\r\n                                            upsert: true,\r\n                                        },\r\n                                    );\r\n                                    client.db('global').collection('login_info').updateOne(\r\n                                        {\r\n                                            _id: dataInsertLogin._id,\r\n                                        },\r\n                                        {\r\n                                            $set: dataInsertLogin,\r\n                                        },\r\n                                        {\r\n                                            upsert: true,\r\n                                        },\r\n                                    );\r\n                                    await mark(\r\n                                        '_std_table',\r\n                                        user,\r\n                                        dataInsertUser._id,\r\n                                        dummyScore,\r\n                                        {\r\n                                            first_name: dataInsertUser.first_name,\r\n                                            last_name: dataInsertUser.last_name,\r\n                                        },\r\n                                        dataInsertUser.class[0],\r\n                                    );\r\n                                    await sheet.cell(`D${i + 1}`).value(email);\r\n                                    await sheet.cell(`E${i + 1}`).value(pw);\r\n                                    const range = sheet.range(`D${i + 1}:E${i + 1}`);\r\n                                    range.style({ border: true });\r\n                                    if (email.length > maxWidthEmail) {\r\n                                        maxWidthEmail = email.length;\r\n                                    }\r\n                                }\r\n                                // Write to file.\r\n                                sheet.column('D').width(maxWidthEmail);\r\n                                const uuid = uuidv4();\r\n                                await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\r\n                                // xoa file sau khi xu ly\r\n                                scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\r\n                                const workbookacc = await XlsxPopulate.fromFileAsync(\r\n                                    './src/excelTemplate/FILE_TAO_ACC.xlsx',\r\n                                );\r\n\r\n                                if (dataRows.length > 0) {\r\n                                    await workbookacc.sheet(0).cell('A2').value(dataRows);\r\n                                }\r\n                                const outputFile = path.join(`.downloads/${uuid}.xlsx`);\r\n\r\n                                await workbookacc.toFileAsync(outputFile);\r\n                                scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\r\n                                return res.download(path.join('.downloads', uuid + '.xlsx'));\r\n                            } catch (err) {\r\n                                console.log('SYSTEM | CREATE_ACCOUNT | ERROR | ', err);\r\n                                return res.sendStatus(500);\r\n                            }\r\n                        } else {\r\n                            try {\r\n                                // read excel file:\r\n                                // create all account\r\n                                const workbook = await XlsxPopulate.fromFileAsync(fileStudents.path);\r\n                                const sheet = workbook.sheet(0);\r\n\r\n                                const values = sheet.usedRange().value();\r\n                                let maxWidthEmail = 0;\r\n                                //[['MSSV', 'Họ', 'Tên' ]]\r\n                                sheet.cell('D1').value('Email');\r\n                                sheet.cell('E1').value('Password');\r\n                                for (let i = 1; i < values.length; i++) {\r\n                                    let studentIdToCheck = values[i][0].toString(); // Mã số sinh viên cần kiểm tra\r\n\r\n                                    const marker = await client\r\n                                        .db(name_global_databases)\r\n                                        .collection('user_info')\r\n                                        .findOne(\r\n                                            { _id: studentIdToCheck },\r\n                                            {\r\n                                                projection: {\r\n                                                    _id: 0,\r\n                                                    last_name: 1,\r\n                                                    first_name: 1,\r\n                                                },\r\n                                            },\r\n                                        );\r\n                                    if (!marker) {\r\n                                        let pw = await randomPassword();\r\n                                        let email = await generateEmail(\r\n                                            `${values[i][1]} ${values[i][2]} ${values[i][0].toString()}`,\r\n                                        );\r\n                                        let dataInsertUser = {\r\n                                            _id: values[i][0].toString(),\r\n                                            first_name: values[i][2].toString(),\r\n                                            last_name: values[i][1].toString(),\r\n                                            avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\r\n                                            power: { 0: true },\r\n                                            class: [req.body.cls],\r\n                                            displayName: `${values[i][1].toString()} ${values[i][2].toString()}`,\r\n                                            email: email,\r\n                                            total_score: {},\r\n                                        };\r\n                                        let dataInsertLogin = {\r\n                                            _id: values[i][0].toString(),\r\n                                            password: hashPassword(pw),\r\n                                            first: 'new_user',\r\n                                        };\r\n                                        client.db('global').collection('user_info').updateOne(\r\n                                            {\r\n                                                _id: dataInsertUser._id,\r\n                                            },\r\n                                            {\r\n                                                $set: dataInsertUser,\r\n                                            },\r\n                                            {\r\n                                                upsert: true,\r\n                                            },\r\n                                        );\r\n                                        client.db('global').collection('login_info').updateOne(\r\n                                            {\r\n                                                _id: dataInsertLogin._id,\r\n                                            },\r\n                                            {\r\n                                                $set: dataInsertLogin,\r\n                                            },\r\n                                            {\r\n                                                upsert: true,\r\n                                            },\r\n                                        );\r\n                                        await mark(\r\n                                            '_std_table',\r\n                                            user,\r\n                                            dataInsertUser._id,\r\n                                            dummyScore,\r\n                                            {\r\n                                                first_name: dataInsertUser.first_name,\r\n                                                last_name: dataInsertUser.last_name,\r\n                                            },\r\n                                            dataInsertUser.class[0],\r\n                                        );\r\n                                        await sheet.cell(`D${i + 1}`).value(email);\r\n                                        await sheet.cell(`E${i + 1}`).value(pw);\r\n                                        const range = sheet.range(`D${i + 1}:E${i + 1}`);\r\n                                        range.style({ border: true });\r\n                                        if (email.length > maxWidthEmail) {\r\n                                            maxWidthEmail = email.length;\r\n                                        }\r\n\r\n                                        // Write to file.\r\n                                        sheet.column('D').width(maxWidthEmail);\r\n                                        const uuid = uuidv4();\r\n                                        await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\r\n                                        res.download(path.join('.downloads', uuid + '.xlsx'));\r\n                                        // xoa file sau khi xu ly\r\n                                        scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                console.log('SYSTEM | CREATE_ACCOUNT | ERROR | ', err);\r\n                                return res.sendStatus(500);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        return res.sendStatus(404);\r\n                    }\r\n                } else {\r\n                    return res.sendStatus(405);\r\n                }\r\n            } else {\r\n                const dataStudent = req.body;\r\n                let pw = await randomPassword();\r\n                let email = await generateEmail(\r\n                    `${dataStudent['ho']} ${dataStudent['ten']} ${dataStudent['mssv'].toString()}`,\r\n                );\r\n                let power;\r\n\r\n                power = {\r\n                    0: true,\r\n                    1: dataStudent['chamdiem'],\r\n                    3: dataStudent['lbhd'],\r\n                    10: dataStudent['dangvien'],\r\n                };\r\n\r\n                let dataInsertUser = {\r\n                    _id: dataStudent['mssv'].toString(),\r\n                    first_name: dataStudent['ten'],\r\n                    last_name: dataStudent['ho'],\r\n                    avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\r\n                    power: power,\r\n                    class: [dataStudent['cls']],\r\n                    displayName: `${dataStudent['ho']} ${dataStudent['ten']}`,\r\n                    email: email,\r\n                    total_score: {},\r\n                };\r\n                let dataInsertLogin = {\r\n                    _id: dataStudent['mssv'].toString(),\r\n                    password: hashPassword(pw),\r\n                    first: 'new_user',\r\n                };\r\n                client.db('global').collection('user_info').updateOne(\r\n                    {\r\n                        _id: dataInsertUser._id,\r\n                    },\r\n                    {\r\n                        $set: dataInsertUser,\r\n                    },\r\n                    {\r\n                        upsert: true,\r\n                    },\r\n                );\r\n                client.db('global').collection('login_info').updateOne(\r\n                    {\r\n                        _id: dataInsertLogin._id,\r\n                    },\r\n                    {\r\n                        $set: dataInsertLogin,\r\n                    },\r\n                    {\r\n                        upsert: true,\r\n                    },\r\n                );\r\n                await mark(\r\n                    '_std_table',\r\n                    user,\r\n                    dataInsertUser._id,\r\n                    dummyScore,\r\n                    { first_name: dataInsertUser.first_name, last_name: dataInsertUser.last_name },\r\n                    dataInsertUser.class[0],\r\n                );\r\n                // xu ly sau khi them sinh vien\r\n                const uuid = uuidv4();\r\n                const workbook = await XlsxPopulate.fromFileAsync('./src/excelTemplate/Tao_danh_sach_lop_moi.xlsx');\r\n                const sheet = workbook.sheet(0);\r\n                await sheet.cell(`A2`).value(dataStudent['mssv'].toString());\r\n                await sheet.cell(`B2`).value(dataStudent['ho']);\r\n                await sheet.cell(`C2`).value(dataStudent['ten']);\r\n                await sheet.cell(`D1`).value('Email');\r\n                await sheet.cell(`E1`).value('Password');\r\n                await sheet.cell(`D2`).value(email);\r\n                await sheet.cell(`E2`).value(pw);\r\n                let range = sheet.range(`D2:E2`);\r\n                range.style({ border: true });\r\n                sheet.column('D').width(email.length);\r\n                await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\r\n                res.download(path.join('.downloads', uuid + '.xlsx'));\r\n                // xoa file sau khi xu ly\r\n                scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\r\n\r\n                // return res.sendStatus(200);\r\n            }\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    // Update student\r\n    router.post('/updateAccount', checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user.pow[4] || user.pow[7]) {\r\n            const dataStudent = req.body;\r\n            let power = {\r\n                0: true,\r\n                1: dataStudent['chamdiem'],\r\n                3: dataStudent['lbhd'],\r\n                10: dataStudent['dangvien'],\r\n            };\r\n\r\n            let dataInsertUser = {\r\n                _id: dataStudent['mssv'].toString(),\r\n                first_name: dataStudent['ten'],\r\n                last_name: dataStudent['ho'],\r\n                power: power,\r\n                displayName: `${dataStudent['ho']} ${dataStudent['ten']}`,\r\n            };\r\n\r\n            client.db('global').collection('user_info').updateOne(\r\n                {\r\n                    _id: dataInsertUser._id,\r\n                },\r\n                {\r\n                    $set: dataInsertUser,\r\n                },\r\n                {\r\n                    upsert: true,\r\n                },\r\n            );\r\n\r\n            return res.sendStatus(200);\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    router.get('/getTemplateAddStudent', upload.single('file'), checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user.pow[4] || user.pow[7]) {\r\n            return res.download('./src/excelTemplate/Tao_danh_sach_lop_moi.xlsx');\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    router.post('/deleteAccount', checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        if (user.pow[4] || user.pow[7]) {\r\n            try {\r\n                const cls = req.body.cls;\r\n                const listDelete = req.body.dataDelete;\r\n                for (let i = 0; i < listDelete.length; i++) {\r\n                    await client.db('global').collection('user_info').deleteOne({ _id: listDelete[i] });\r\n                    let info_search = `student_list.${listDelete[i]}`;\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection(`${cls}_activities`)\r\n                        .updateMany(\r\n                            {\r\n                                [info_search]: { $exists: true },\r\n                            },\r\n                            {\r\n                                $pull: { student_list: user._id, ai: user._id },\r\n                            },\r\n                        );\r\n\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection('activities')\r\n                        .updateMany(\r\n                            {\r\n                                [info_search]: { $exists: true },\r\n                            },\r\n                            {\r\n                                $pull: { student_list: user._id, ai: user._id },\r\n                            },\r\n                        );\r\n\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('activities')\r\n                        .updateMany(\r\n                            {\r\n                                [info_search]: { $exists: true },\r\n                            },\r\n                            {\r\n                                $pull: { student_list: user._id, ai: user._id },\r\n                            },\r\n                        );\r\n                }\r\n                return res.sendStatus(200);\r\n            } catch (err) {\r\n                console.log('SYSTEM | DELETE_ACCOUNT | ERROR | ', err);\r\n                return res.sendStatus(500);\r\n            }\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n    // Export class score report --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.get('/exportClassScore', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[1] || user.pow[2]) {\r\n                const data = req.query;\r\n                //data = {year: \"HK1_2022-2023\", cls: '1'}\r\n                const school_year = data.year;\r\n                let cls = data.cls;\r\n                // create uuid for download file\r\n                const uuid = uuidv4();\r\n\r\n                // check for post data.cls if class define this mean they choose class so that must\r\n\r\n                let student_list = [];\r\n                if (user.pow[1]) {\r\n                    student_list = sortStudentName(\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('user_info')\r\n                            .find(\r\n                                { class: user.cls[0], 'power.0': { $exists: true } },\r\n                                { projection: { first_name: 1, last_name: 1 } },\r\n                            )\r\n                            .toArray(),\r\n                    );\r\n                } else {\r\n                    student_list = sortStudentName(\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('user_info')\r\n                            .find(\r\n                                { class: cls, 'power.0': { $exists: true } },\r\n                                { projection: { first_name: 1, last_name: 1 } },\r\n                            )\r\n                            .toArray(),\r\n                    );\r\n                }\r\n\r\n                // get all student total score from themself:\r\n                let scores = [];\r\n\r\n                if (student_list.length !== 0) {\r\n                    for (let i = 0; i < student_list.length; i++) {\r\n                        // [stt, mssv. ho, ten, lop,\r\n                        // 1.0, 1.1, 1.2, 1.3, 1.4,\r\n                        // 2.0, 2.1,\r\n                        // 3.0, 3.1, 3.2,\r\n                        // 4.0, 4.1, 4.2,\r\n                        // 5.0, 5.1, 5.2, 5.3,\r\n                        // \"\", total, conduct, \"\"]\r\n                        let curr_score = [\r\n                            i + 1,\r\n                            student_list[i]._id,\r\n                            student_list[i].last_name,\r\n                            student_list[i].first_name,\r\n                            cls,\r\n                        ];\r\n\r\n                        const curr_departmentt_score = await client\r\n                            .db(user.dep)\r\n                            .collection(cls + '_dep_table')\r\n                            .findOne(\r\n                                {\r\n                                    mssv: student_list[i]._id,\r\n                                    school_year: school_year,\r\n                                },\r\n                                {\r\n                                    projection: {\r\n                                        first: 1,\r\n                                        second: 1,\r\n                                        third: 1,\r\n                                        fourth: 1,\r\n                                        fifth: 1,\r\n                                        total: 1,\r\n                                    },\r\n                                },\r\n                            );\r\n\r\n                        if (curr_departmentt_score) {\r\n                            curr_score.push(...curr_departmentt_score.first);\r\n                            curr_score.push(...curr_departmentt_score.second);\r\n                            curr_score.push(...curr_departmentt_score.third);\r\n                            curr_score.push(...curr_departmentt_score.fourth);\r\n                            curr_score.push(...curr_departmentt_score.fifth);\r\n                        } else {\r\n                            for (let j = 0; j < 17; j++) {\r\n                                curr_score.push(null);\r\n                            }\r\n                        }\r\n\r\n                        curr_score.push(null);\r\n\r\n                        if (curr_departmentt_score) {\r\n                            curr_score.push(curr_departmentt_score.total);\r\n                            // set kind of conduct:\r\n                            if (curr_departmentt_score.total >= 90) {\r\n                                curr_score.push('xuất sắc');\r\n                            } else if (curr_departmentt_score.total >= 80) {\r\n                                curr_score.push('tốt');\r\n                            } else if (curr_departmentt_score.total >= 65) {\r\n                                curr_score.push('khá');\r\n                            } else if (curr_departmentt_score.total >= 50) {\r\n                                curr_score.push('trung bình');\r\n                            } else if (curr_departmentt_score.total >= 35) {\r\n                                curr_score.push('yếu');\r\n                            } else {\r\n                                curr_score.push('kém');\r\n                            }\r\n                        } else {\r\n                            curr_score.push(null);\r\n                            curr_score.push(null);\r\n                        }\r\n\r\n                        // add curr_score to scores\r\n                        scores.push(curr_score);\r\n                    }\r\n                } else {\r\n                }\r\n\r\n                // Load an existing workbook\r\n                const workbook = await XlsxPopulate.fromFileAsync(\r\n                    './src/excelTemplate/Bang_diem_ca_lop_xuat_tu_he_thong.xlsx',\r\n                );\r\n\r\n                if (scores.length != 0) {\r\n                    await workbook.sheet(0).cell('A7').value(scores);\r\n                }\r\n                // Write to file.\r\n\r\n                await workbook.toFileAsync(path.join('.downloads', uuid + '.xlsx'));\r\n\r\n                // tải file xlsx về máy người dùng\r\n                // res.download(path.join('.downloads', uuid + \".xlsx\"));\r\n\r\n                res.download(path.join('.downloads', uuid + '.xlsx'));\r\n\r\n                // delete file after 12 hours\r\n                scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | EXPORT_CLASS_SCORE | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n    // Export students score report --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.get('/exportStudentsScore', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.query;\r\n            let cls = data.cls;\r\n            let stdlist = [];\r\n            if (data.stdlist) {\r\n                stdlist = JSON.parse(data.stdlist);\r\n            }\r\n            const school_year = data.year;\r\n\r\n            if (user.pow[0] || user.pow[1] || user.pow[2]) {\r\n                if ((data.type === 'singe') & user.pow[0]) {\r\n                    cls = user.cls[0];\r\n                    stdlist = [user._id];\r\n                }\r\n                //data = {year: \"HK1_2022-2023\", cls: '1', stdlist: []}\r\n                // create uuid for download file\r\n                const uuid = uuidv4();\r\n                // check for post data.cls if class define this mean they choose class so that must\r\n                let student_list = [];\r\n\r\n                student_list = sortStudentName(\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .find(\r\n                            {\r\n                                class: cls,\r\n                                'power.0': { $exists: true },\r\n                                _id: { $in: stdlist },\r\n                            },\r\n                            { projection: { first_name: 1, last_name: 1 } },\r\n                        )\r\n                        .toArray(),\r\n                );\r\n                // get all student total score from themself:\r\n                let scores = [];\r\n\r\n                if (student_list.length !== 0) {\r\n                    for (let i = 0; i < student_list.length; i++) {\r\n                        // [stt, mssv. ho, ten, lop,\r\n                        // 1.0, 1.1, 1.2, 1.3, 1.4,\r\n                        // 2.0, 2.1,\r\n                        // 3.0, 3.1, 3.2,\r\n                        // 4.0, 4.1, 4.2,\r\n                        // 5.0, 5.1, 5.2, 5.3,\r\n                        // \"\", total, conduct, \"\"]\r\n                        let curr_score = {\r\n                            year: school_year,\r\n                            mssv: student_list[i]._id,\r\n                            name: student_list[i].last_name + ' ' + student_list[i].first_name,\r\n                            class: cls,\r\n                            std: [],\r\n                            stf: [],\r\n                            dep: [],\r\n                        };\r\n\r\n                        const curr_students_score = await client\r\n                            .db(user.dep)\r\n                            .collection(cls + '_std_table')\r\n                            .findOne(\r\n                                {\r\n                                    mssv: student_list[i]._id,\r\n                                    school_year: school_year,\r\n                                },\r\n                                {\r\n                                    projection: {\r\n                                        first: 1,\r\n                                        second: 1,\r\n                                        third: 1,\r\n                                        fourth: 1,\r\n                                        fifth: 1,\r\n                                        total: 1,\r\n                                    },\r\n                                },\r\n                            );\r\n\r\n                        const curr_staff_score = await client\r\n                            .db(user.dep)\r\n                            .collection(cls + '_stf_table')\r\n                            .findOne(\r\n                                {\r\n                                    mssv: student_list[i]._id,\r\n                                    school_year: school_year,\r\n                                },\r\n                                {\r\n                                    projection: {\r\n                                        first: 1,\r\n                                        second: 1,\r\n                                        third: 1,\r\n                                        fourth: 1,\r\n                                        fifth: 1,\r\n                                        total: 1,\r\n                                    },\r\n                                },\r\n                            );\r\n\r\n                        const curr_departmentt_score = await client\r\n                            .db(user.dep)\r\n                            .collection(cls + '_dep_table')\r\n                            .findOne(\r\n                                {\r\n                                    mssv: student_list[i]._id,\r\n                                    school_year: school_year,\r\n                                },\r\n                                {\r\n                                    projection: {\r\n                                        first: 1,\r\n                                        second: 1,\r\n                                        third: 1,\r\n                                        fourth: 1,\r\n                                        fifth: 1,\r\n                                        total: 1,\r\n                                    },\r\n                                },\r\n                            );\r\n\r\n                        if (curr_students_score) {\r\n                            curr_score.std.push(...curr_students_score.first);\r\n                            curr_score.std.push(...curr_students_score.second);\r\n                            curr_score.std.push(...curr_students_score.third);\r\n                            curr_score.std.push(...curr_students_score.fourth);\r\n                            curr_score.std.push(...curr_students_score.fifth);\r\n                            curr_score.std.push(curr_students_score.total);\r\n                        } else {\r\n                            for (let j = 0; j < 18; j++) {\r\n                                curr_score.std.push('N/A');\r\n                            }\r\n                        }\r\n                        if (curr_staff_score) {\r\n                            curr_score.stf.push(...curr_staff_score.first);\r\n                            curr_score.stf.push(...curr_staff_score.second);\r\n                            curr_score.stf.push(...curr_staff_score.third);\r\n                            curr_score.stf.push(...curr_staff_score.fourth);\r\n                            curr_score.stf.push(...curr_staff_score.fifth);\r\n                            curr_score.stf.push(curr_staff_score.total);\r\n                        } else {\r\n                            for (let j = 0; j < 18; j++) {\r\n                                curr_score.stf.push('N/A');\r\n                            }\r\n                        }\r\n\r\n                        if (curr_departmentt_score) {\r\n                            curr_score.dep.push(...curr_departmentt_score.first);\r\n                            curr_score.dep.push(...curr_departmentt_score.second);\r\n                            curr_score.dep.push(...curr_departmentt_score.third);\r\n                            curr_score.dep.push(...curr_departmentt_score.fourth);\r\n                            curr_score.dep.push(...curr_departmentt_score.fifth);\r\n                            curr_score.dep.push(curr_departmentt_score.total);\r\n                        } else {\r\n                            for (let j = 0; j < 18; j++) {\r\n                                curr_score.dep.push('N/A');\r\n                            }\r\n                        }\r\n\r\n                        scores.push(curr_score);\r\n                    }\r\n                } else {\r\n                    return res.sendStatus(402);\r\n                }\r\n\r\n                const temp_namefile = await createPdf('.downloads', scores);\r\n                // tải file xlsx về máy người dùng\r\n                res.download(path.join('.downloads', temp_namefile));\r\n\r\n                // delete file after 12 hours\r\n\r\n                scheduleFileDeletion(path.join('.downloads', temp_namefile));\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | EXPORT_STUDENTS_SCORE | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n    // Load score list of student in specific class at specific time ---------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    router.get('/loadScoresList', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[1]) {\r\n                const data = req.query;\r\n                //data = {year: \"HK1_2022-2023\", cls: \"1\"}\r\n                const school_year = data.year;\r\n                const year_available = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne(\r\n                        {},\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                year: 1,\r\n                                start_day: 1,\r\n                                end_day: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const student_list = sortStudentName(\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .find(\r\n                            { class: user.cls[0], 'power.0': { $exists: true } },\r\n                            {\r\n                                projection: {\r\n                                    first_name: 1,\r\n                                    last_name: 1,\r\n                                    total_score: 1,\r\n                                },\r\n                            },\r\n                        )\r\n                        .toArray(),\r\n                );\r\n\r\n                // get all student total score from themself:\r\n                let result = {\r\n                    // staff_name: [],\r\n                    student_list: student_list,\r\n                    // student_scores: [],\r\n                    // staff_scores: [],\r\n                    // department_scores: [],\r\n                    year_available: year_available,\r\n                };\r\n\r\n                return res.status(200).json(result);\r\n            } else {\r\n                // user not staff members\r\n                // redirect to home (return 403, api khong the chuyenh huong ve trang chu duoc)\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | LOAD_SCORE_LIST | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n    // doan khoa load scores\r\n    router.get('/doan_khoa/loadScoresList', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[2]) {\r\n                const data = req.query;\r\n                //data = {year: \"HK1_2022-2023\", cls: \"1\"}\r\n                const school_year = data.year;\r\n                let cls = data.class;\r\n                // const bo_mon = data.bo_mon;\r\n                // check for post data.cls if class define this mean they choose class so that must\r\n                if (!cls) {\r\n                    cls = 0;\r\n                }\r\n\r\n                const year_available = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne(\r\n                        {},\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                year: 1,\r\n                                start_day: 1,\r\n                                end_day: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const student_list = sortStudentName(\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .find(\r\n                            { class: cls, 'power.0': { $exists: true } },\r\n                            {\r\n                                projection: {\r\n                                    first_name: 1,\r\n                                    last_name: 1,\r\n                                    total_score: 1,\r\n                                },\r\n                            },\r\n                        )\r\n                        .toArray(),\r\n                );\r\n\r\n                // get all student total score from themself:\r\n                let result = {\r\n                    // staff_name: [],\r\n                    student_list: student_list,\r\n                    // student_scores: [],\r\n                    // staff_scores: [],\r\n                    // department_scores: [],\r\n                    year_available: year_available,\r\n                };\r\n\r\n                return res.status(200).json(result);\r\n            } else {\r\n                // user not staff members\r\n                // redirect to home\r\n                return res.statusCode(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DOAN_KHOA_LOAD_SCORE_LIST | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n    // Auto mark (copy student mark to staff mark)\r\n    router.post('/autoMark', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[1]) {\r\n                const data = req.body;\r\n                let cls = data.cls;\r\n                //data = {year: \"HK1_2022-2023\", cls: \"1\", std_list = []}\r\n\r\n                // get staff member info :\r\n                const marker = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        { _id: user._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n                // check for post data.cls if class define this mean they choose class so that must\r\n                if (!cls) {\r\n                    cls = 0;\r\n                }\r\n\r\n                // check if table is exist or not\r\n                // update or add new table copy from std_table to staff_table\r\n                for (let i = 0; i < data.std_list.length; i++) {\r\n                    const std_table = await client\r\n                        .db(user.dep)\r\n                        .collection(user.cls[parseInt(cls)] + '_std_table')\r\n                        .findOne({\r\n                            mssv: data.std_list[i],\r\n                            school_year: data.year,\r\n                        });\r\n\r\n                    // update old table if exist else insert new one\r\n                    // copy from student table and add marker name\r\n                    if (std_table) {\r\n                        std_table.marker = marker.last_name + ' ' + marker.first_name;\r\n                        delete std_table._id;\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(user.cls[parseInt(cls)] + '_stf_table')\r\n                            .updateOne(\r\n                                {\r\n                                    mssv: data.std_list[i],\r\n                                    school_year: data.year,\r\n                                },\r\n                                {\r\n                                    $set: std_table,\r\n                                },\r\n                                { upsert: true },\r\n                            );\r\n                    }\r\n\r\n                    await updateStudentTotalScore(\r\n                        '_stf_table',\r\n                        std_table.school_year,\r\n                        std_table.mssv,\r\n                        std_table.total,\r\n                        std_table.marker,\r\n                    );\r\n                }\r\n\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | AUTO_MARK | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    router.post('/doan_khoa/autoMark', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[2]) {\r\n                const data = req.body;\r\n                let cls = data.cls;\r\n                //data = {year: \"HK1_2022-2023\", cls: \"1\", std_list = []}\r\n\r\n                // get staff member info :\r\n                const marker = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        { _id: user._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                // check if table is exist or not\r\n                // update or add new table copy from std_table to staff_table\r\n                for (let i = 0; i < data.std_list.length; i++) {\r\n                    const std_table = await client\r\n                        .db(user.dep)\r\n                        .collection(cls + '_stf_table')\r\n                        .findOne({\r\n                            mssv: data.std_list[i],\r\n                            school_year: data.year,\r\n                        });\r\n\r\n                    // update old table if exist else insert new one\r\n                    // copy from student table and add marker name\r\n                    if (std_table) {\r\n                        std_table.marker = marker.last_name + ' ' + marker.first_name;\r\n                        delete std_table._id;\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(cls + '_dep_table')\r\n                            .updateOne(\r\n                                {\r\n                                    mssv: data.std_list[i],\r\n                                    school_year: data.year,\r\n                                },\r\n                                {\r\n                                    $set: std_table,\r\n                                },\r\n                                { upsert: true },\r\n                            );\r\n                    }\r\n\r\n                    await updateStudentTotalScore(\r\n                        '_dep_table',\r\n                        std_table.school_year,\r\n                        std_table.mssv,\r\n                        std_table.total,\r\n                        std_table.marker,\r\n                    );\r\n                }\r\n\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | AUTO_MARK | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api danh sach sinh vien\r\n    router.post('/getStudentList', checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        const data = req.body; // data = {class: KTPM0121 (class id), skip: 1 // time load befour}\r\n        let reqClass = data.class;\r\n        // if (!reqClass) {\r\n        //   reqClass = user.cls[0];\r\n        // }\r\n        if (reqClass) {\r\n            if (user.pow[1] || user.pow[2]) {\r\n                const student_list = sortStudentName(\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .find(\r\n                            { class: reqClass, 'power.0': { $exists: true } },\r\n                            { projection: { first_name: 1, last_name: 1, power: 1 } },\r\n                        )\r\n                        .limit(30)\r\n                        .skip(30 * data.skip)\r\n                        .toArray(),\r\n                );\r\n                const transformedData = student_list.map((item) => {\r\n                    let role = 'UnKnow'; // Giả định giá trị mặc định là 'unknow'\r\n                    let dang_vien = false;\r\n                    let cham_diem = false;\r\n                    let lap_hoat_dong = false;\r\n                    dang_vien = item.power['10'] ? true : false;\r\n                    cham_diem = item.power['1'] ? true : false;\r\n                    lap_hoat_dong = item.power['3'] ? true : false;\r\n                    if (item.power['1'] || item.power['3']) {\r\n                        role = 'Ban cán sự';\r\n                    } else if (item.power['0']) {\r\n                        role = 'Sinh viên';\r\n                    }\r\n\r\n                    return {\r\n                        _id: item._id,\r\n                        first_name: item.first_name,\r\n                        last_name: item.last_name,\r\n                        role,\r\n                        dang_vien,\r\n                        cham_diem,\r\n                        lap_hoat_dong,\r\n                    };\r\n                });\r\n                return res.status(200).json(transformedData);\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } else {\r\n            return res.sendStatus(404);\r\n        }\r\n    });\r\n\r\n    router.get('/getStudentInfoMark', checkIfUserLoginAPI, async (req, res) => {\r\n        const user = req.session.user;\r\n        let result = {\r\n            dang_vien: user.pow[10] ? true : false,\r\n            cham_diem: user.pow[1] ? true : false,\r\n            lap_hoat_dong: user.pow[3] ? true : false,\r\n        };\r\n        return res.status(200).json(result);\r\n    });\r\n\r\n    router.get('/getuserscore', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[0]) {\r\n                const schoolYearParam = req.query.schoolYear;\r\n\r\n                const schoolYearsToSearch = ['HK1_' + schoolYearParam, 'HK2_' + schoolYearParam];\r\n                const studentTotalScores = await Promise.all(\r\n                    schoolYearsToSearch.map(async (year) => {\r\n                        const studentTotalScore = await client\r\n                            .db(user.dep)\r\n                            .collection(user.cls[0] + '_std_table')\r\n                            .findOne(\r\n                                {\r\n                                    mssv: user._id,\r\n                                    school_year: year,\r\n                                },\r\n                                {\r\n                                    projection: { _id: 0, total: 1 },\r\n                                },\r\n                            );\r\n                        return {\r\n                            year: year.slice(0, 3),\r\n                            total: studentTotalScore ? studentTotalScore.total : 'Chưa có điểm',\r\n                        };\r\n                    }),\r\n                );\r\n                return res.status(200).json(studentTotalScores);\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | GET_USER_SCORE | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api add or edit branch of department base on it exist or not\r\n    router.post('/addOrEditBranchs', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {old_name: \"Hệ thống thông tin\", name: \"Kỹ Thuật Phần Mềm\"}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[5]) {\r\n                // remove old branch\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('branchs')\r\n                    .deleteOne({\r\n                        _id: createId(data.old_name),\r\n                    });\r\n                // add new branch\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('branchs')\r\n                    .insertOne({\r\n                        _id: createId(data.name),\r\n                        name: data.name,\r\n                        dep: user.dep,\r\n                    });\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | ADD_OR_EDIT_BRANCHS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api delete cheked branchs\r\n    router.post('/deleteBranchs', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {rm_bs: [\"Kỹ Thuật Phần Mềm\", ...]}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[5]) {\r\n                // remove all cheked branch in remove branchs líst\r\n                for (let i = 0; i < data.rm_bs.length; i++) {\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('branchs')\r\n                        .deleteOne({\r\n                            _id: createId(data.rm_bs[i]),\r\n                        });\r\n                    const dummy_class = await client\r\n                        .db(name_global_databases)\r\n                        .collection('classes')\r\n                        .find({ branch: createId(data.rm_bs[i]) }, { projection: { cvht: 1 } })\r\n                        .toArray();\r\n                    const cls_rm_data = dummy_class.map((cls) => cls._id);\r\n                    const cvht_rm_data = dummy_class.map((cls) => cls.cvht);\r\n                    const requestData = { rm_cls: cls_rm_data, rm_ts: cvht_rm_data };\r\n\r\n                    // // Gọi API bằng axios với phương thức POST\r\n                    await deleteClassApi(requestData, user);\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .updateMany(\r\n                            {\r\n                                _id: { $in: cvht_rm_data },\r\n                            },\r\n                            {\r\n                                $set: {\r\n                                    branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\r\n                                },\r\n                            },\r\n                        );\r\n                }\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE_BRANCHS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // change mark deadline\r\n    router.post('/changeDeadLine', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            // must be department to use this api\r\n            if (user.pow[6]) {\r\n                const data = req.body; // data = {sch_y: \"HK1_2022-2023\", start_day: '18/10/2023', end_day: '19/11/999999999999999999']}\r\n                const cy = data.sch_y.split('_');\r\n\r\n                console.log(data);\r\n                // set end day to special date if it is ''\r\n                if (!data.end_day) {\r\n                    data.end_day = '2003-10-18'; // special date\r\n                }\r\n\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .updateOne(\r\n                        {},\r\n                        {\r\n                            $set: {\r\n                                year: data.sch_y,\r\n                                start_day: new Date(data.start_day), // change string to Date\r\n                                end_day: new Date(data.end_day),\r\n                            },\r\n                        },\r\n                    );\r\n                const keyupdate = `years.${cy[1]}`;\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .updateMany(\r\n                        {},\r\n                        {\r\n                            $set: {\r\n                                [keyupdate]: [1, 2, 3],\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | CHANGE_DEADLINE | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api add or edit teacher of department base on it exist or not\r\n    router.post('/addOrEditTeachers', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {old_id: \"19112003\", new_id: \"18102003\", new_name: \"Nguyễn Văn A\", branch: \"KTPM\"}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[8]) {\r\n                // find to get old pass of teacher before remove it\r\n                const teacher_pass = await client\r\n                    .db(name_global_databases)\r\n                    .collection('login_info')\r\n                    .findOne(\r\n                        {\r\n                            _id: data.old_id,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                password: 1,\r\n                            },\r\n                        },\r\n                    );\r\n                // find to get curr classes\r\n                const curr_teacher = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .findOne(\r\n                        {\r\n                            _id: data.old_id,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                class: 1,\r\n                                avt: 1,\r\n                                email: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                if (curr_teacher) {\r\n                    // remove old teachers\r\n                    await client.db(name_global_databases).collection('user_info').deleteOne({\r\n                        _id: data.old_id,\r\n                    });\r\n\r\n                    // edit old one\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .insertOne({\r\n                            _id: data.new_id,\r\n                            first_name: data.new_name.split(' ').slice(-1).join(' '),\r\n                            last_name: data.new_name.split(' ').slice(0, -1).join(' '),\r\n                            avt: curr_teacher.avt,\r\n                            power: {\r\n                                1: true,\r\n                                3: true,\r\n                                4: true,\r\n                            },\r\n                            class: curr_teacher.class,\r\n                            displayName: data.new_name, // here before pop\r\n                            branch: data.branch,\r\n                            email: curr_teacher.email,\r\n                        });\r\n                } else {\r\n                    // add new one\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .insertOne({\r\n                            _id: data.new_id,\r\n                            first_name: data.new_name.split(' ').slice(-1).join(' '),\r\n                            last_name: data.new_name.split(' ').slice(0, -1).join(' '),\r\n                            avt: 'https://i.pinimg.com/236x/89/08/3b/89083bba40545a72fa15321af5fab760--chibi-girl-zero.jpg',\r\n                            power: {\r\n                                1: true,\r\n                                3: true,\r\n                                4: true,\r\n                            },\r\n                            class: [],\r\n                            displayName: data.new_name, // here before pop\r\n                            branch: data.branch,\r\n                            email: '',\r\n                        });\r\n                }\r\n\r\n                if (teacher_pass) {\r\n                    await client.db(name_global_databases).collection('login_info').deleteOne({\r\n                        _id: data.old_id,\r\n                    });\r\n                    // edit old one\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('login_info')\r\n                        .insertOne({\r\n                            _id: data.new_id,\r\n                            password: hashPassword(teacher_pass.password),\r\n                        });\r\n                } else {\r\n                    // add new one\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('login_info')\r\n                        .insertOne({\r\n                            _id: data.new_id,\r\n                            password: hashPassword(data.new_id),\r\n                        });\r\n                }\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | ADD_OR_EDIT_BRANCHS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api delete teachers checked\r\n    router.post('/deleteTeachers', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {rm_ts: [\"19112003\" (teacher_id), ...]}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[8]) {\r\n                // remove all cheked teacher in remove teachers líst in user_info and login_info\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .deleteMany({\r\n                        _id: { $in: data.rm_ts },\r\n                    });\r\n\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('login_info')\r\n                    .deleteMany({\r\n                        _id: { $in: data.rm_ts },\r\n                    });\r\n\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .updateMany(\r\n                        { cvht: { $in: data.rm_ts } }, // Điều kiện để xác định tài liệu cần cập nhật\r\n                        {\r\n                            $set: {\r\n                                cvht: ObjectId.createFromHexString('650985a345e2e896b37efd4f'),\r\n                            },\r\n                        }, // Sử dụng $pull để xoá các giá trị trong mảng cvht\r\n                    );\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE_TEACHER | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api checkin students to activity\r\n    router.post('/CheckinActivities', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {id: '19181011' (activity's id), level: (Lớp/Khoa/Trường);\r\n            if (user.pow[0]) {\r\n                switch (data.level) {\r\n                    case 'Lớp':\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(`${user.cls[0]}_activities`)\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        [`student_list.${user._id}`]: 0,\r\n                                    },\r\n                                    // $push: {\r\n                                    //   bonus_list: user._id,\r\n                                    // },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n                        return res.status(200).json({ id: user._id, cls: user.cls });\r\n                    case 'Khoa':\r\n                        // save activity in activities collection in 'Dep name' database\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection('activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        [`student_list.${user._id}`]: 0,\r\n                                    },\r\n                                    // $push: {\r\n                                    //   bonus_list: user._id,\r\n                                    // },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n                        return res.status(200).json({ id: user._id, cls: user.cls });\r\n                    case 'Trường':\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        [`student_list.${user._id}`]: 0,\r\n                                    },\r\n                                    // $push: {\r\n                                    //   bonus_list: user._id,\r\n                                    // },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n                        return res.status(200).json({ id: user._id, cls: user.cls });\r\n                }\r\n                return res.status(404).json({ message: 'Thông tin xác thực sai!' });\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n\r\n            // use later to update student joining inside activities database\r\n            // student_list: {}, // change later to list of student with value is boolean (true for joining and false for not joining)\r\n            // bonus_list: [], // list of student's id that have bonus.\r\n        } catch (err) {\r\n            console.log('SYSTEM | CHECK_IN_ACTIVITIES | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api 出席 gakusei to activity\r\n    router.post('/muster', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {id: '19181011' (activity's id), level: (Lớp/Khoa/Trường);\r\n            if (user.pow[0]) {\r\n                switch (data.level) {\r\n                    case 'Lớp':\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(`${user.cls[0]}_activities`)\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        [`ai.${user._id}`]: true,\r\n                                    },\r\n                                    // $push: {\r\n                                    //   bonus_list: user._id,\r\n                                    // },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n                        break;\r\n                    case 'Khoa':\r\n                        // save activity in activities collection in 'Dep name' database\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection('activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        [`ai.${user._id}`]: true,\r\n                                    },\r\n                                    // $push: {\r\n                                    //   bonus_list: user._id,\r\n                                    // },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n                        break;\r\n                    case 'Trường':\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        [`ai.${user._id}`]: true,\r\n                                    },\r\n                                    // $push: {\r\n                                    //   bonus_list: user._id,\r\n                                    // },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n                        break;\r\n                }\r\n\r\n                await client\r\n                    .db(user.dep)\r\n                    .collection(user.cls[0] + '_std_table')\r\n                    .updateOne(\r\n                        {\r\n                            mssv: user._id,\r\n                            school_year: data.year,\r\n                        },\r\n                        {\r\n                            $set: { [`img_ids.${data.id}`]: data.img_ids },\r\n                        },\r\n                        { upsert: true },\r\n                    );\r\n\r\n                return res.status(200).json({ id: user._id, cls: user.cls });\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n\r\n            // use later to update student joining inside activities database\r\n            // student_list: {}, // change later to list of student with value is boolean (true for joining and false for not joining)\r\n            // bonus_list: [], // list of student's id that have bonus.\r\n        } catch (err) {\r\n            console.log('SYSTEM | CHECK_IN_ACTIVITIES | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api add and edit activities -------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/addOrEditActivities', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {atv_id: '19181011' (activity's id);\r\n            // name: 'Hoat dong hay nha';\r\n            // content: 'Di du thu noi';\r\n            // 'level': 'khoa';\r\n            // cls_id:'KTPM';\r\n            // start_date: '2020-05-18';\r\n            // start_hour: '14:10:30'}\r\n\r\n            if (user.pow[3] && user.pow[11]) {\r\n                // get curr school year\r\n                const school_year = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne({}, { projection: { _id: 0, year: 1 } });\r\n                // if it is a new one Send fake id and sure that not exist in database\r\n                switch (data.level) {\r\n                    case 'lop':\r\n                        // save activity in 'Class name' + _activities collection in 'Department name' database\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(data.cls_id + '_activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.atv_id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        name: data.name,\r\n                                        content: data.content,\r\n                                        level: 'Lớp',\r\n                                        cls: data.cls_id,\r\n                                        year: school_year.year,\r\n                                        start_time: new Date([data.start_date, data.start_hour]),\r\n                                        end: false,\r\n                                    },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n\r\n                        // check other databases if this activities in thoese collection remove it\r\n                        await client.db(name_global_databases).collection('activities').deleteOne({ _id: data.atv_id }); // school\r\n\r\n                        await client.db(user.dep).collection('activities').deleteOne({ _id: data.atv_id }); // department\r\n\r\n                        // create index for new table has just created\r\n                        await await client\r\n                            .db(user.dep)\r\n                            .collection(data.cls_id + '_activities')\r\n                            .createIndex(\r\n                                {\r\n                                    year: 1,\r\n                                },\r\n                                {\r\n                                    name: '_year',\r\n                                },\r\n                            );\r\n\r\n                        break;\r\n                    case 'khoa':\r\n                        // save activity in activities collection in 'Dep name' database\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection('activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.atv_id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        name: data.name,\r\n                                        content: data.content,\r\n                                        level: 'Khoa',\r\n                                        year: school_year.year,\r\n                                        start_time: new Date([data.start_date, data.start_hour]),\r\n                                        end: false,\r\n                                    },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n\r\n                        // check other databases if this activities in thoese collection remove it\r\n                        await client.db(name_global_databases).collection('activities').deleteOne({ _id: data.atv_id }); // school\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(data.cls_id + '_activities')\r\n                            .deleteOne({ _id: data.atv_id }); // class\r\n\r\n                        // create index for new table has just created\r\n                        await client.db(user.dep).collection('activities').createIndex(\r\n                            {\r\n                                year: 1,\r\n                            },\r\n                            {\r\n                                name: '_year',\r\n                            },\r\n                        );\r\n\r\n                        break;\r\n                    case 'truong':\r\n                        // save activity in activities collection in global database\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('activities')\r\n                            .updateOne(\r\n                                {\r\n                                    _id: data.atv_id,\r\n                                },\r\n                                {\r\n                                    $set: {\r\n                                        name: data.name,\r\n                                        content: data.content,\r\n                                        level: 'Trường',\r\n                                        year: school_year.year,\r\n                                        start_time: new Date([data.start_date, data.start_hour]),\r\n                                        end: false,\r\n                                    },\r\n                                },\r\n                                {\r\n                                    upsert: true,\r\n                                },\r\n                            );\r\n\r\n                        // check other databases if this activities in thoese collection remove it\r\n                        await client.db(user.dep).collection('activities').deleteOne({ _id: data.atv_id }); // department\r\n                        await client\r\n                            .db(user.dep)\r\n                            .collection(data.cls_id + '_activities')\r\n                            .deleteOne({ _id: data.atv_id }); // class\r\n\r\n                        // school database do not need create index because it already have it\r\n                        break;\r\n                }\r\n                wss.clients.forEach((ws) => {\r\n                    if (ws.actId == data.atv_id) {\r\n                        ws.send('reload');\r\n                    }\r\n                });\r\n                return res.status(200).json({ message: 'Success' });\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n\r\n            // use later to update student joining inside activities database\r\n            // student_list: {}, // change later to list of student with value is boolean (true for joining and false for not joining)\r\n            // bonus_list: [], // list of student's id that have bonus.\r\n        } catch (err) {\r\n            console.log('SYSTEM | ADD_EDIT_ACTIVITIES | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api load activities base on years -------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/loadYearActivities', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {year: '2022-2023', semester: '1'}\r\n            const curr_year = 'HK' + data.semester + '_' + data.year;\r\n            if (user.pow[3]) {\r\n                // find all activities in this year:\r\n                // get all activities of school\r\n                const school_atv = await client\r\n                    .db(name_global_databases)\r\n                    .collection('activities')\r\n                    .find(\r\n                        {\r\n                            year: curr_year,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                name: 1,\r\n                                content: 1,\r\n                                year: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .toArray();\r\n\r\n                // get all activities of dep\r\n                const dep_atv = await client\r\n                    .db(user.dep)\r\n                    .collection('activities')\r\n                    .find(\r\n                        {\r\n                            year: curr_year,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                name: 1,\r\n                                content: 1,\r\n                                year: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .toArray();\r\n\r\n                // get all activities of class of department\r\n                const collections = await client.db(user.dep).listCollections().toArray();\r\n\r\n                // Filter collections ending with '_activities'\r\n                const activityCollections = collections.filter((collection) => collection.name.endsWith('_activities'));\r\n\r\n                // Loop through activity collections and retrieve all documents\r\n                const cls_atvs = await activityCollections.map(async (collection) => {\r\n                    if (user.pow[1]) {\r\n                        const dummy = await client\r\n                            .db(user.dep)\r\n                            .collection(collection.name)\r\n                            .find(\r\n                                {\r\n                                    year: curr_year,\r\n                                    cls: user.cls[0],\r\n                                },\r\n                                {\r\n                                    projection: {\r\n                                        name: 1,\r\n                                        content: 1,\r\n                                        cls: 1,\r\n                                        year: 1,\r\n                                    },\r\n                                },\r\n                            )\r\n                            .toArray();\r\n                        return dummy;\r\n                    } else {\r\n                        const dummy = await client\r\n                            .db(user.dep)\r\n                            .collection(collection.name)\r\n                            .find(\r\n                                {\r\n                                    year: curr_year,\r\n                                },\r\n                                {\r\n                                    projection: {\r\n                                        name: 1,\r\n                                        content: 1,\r\n                                        cls: 1,\r\n                                        year: 1,\r\n                                    },\r\n                                },\r\n                            )\r\n                            .toArray();\r\n                        return dummy;\r\n                    }\r\n                });\r\n                Promise.all(cls_atvs)\r\n                    .then((results) => {\r\n                        // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\r\n                        // Bạn có thể làm gì đó với kết quả ở đây.\r\n                        const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\r\n\r\n                        const final = {\r\n                            school_atv: school_atv,\r\n                            dep_atv: dep_atv,\r\n                            cls_atv: cls_atv,\r\n                        };\r\n                        return res.status(200).json(final);\r\n                    })\r\n                    .catch((error) => {\r\n                        // Xử lý lỗi nếu có\r\n                        console.log('SYSTEM | LOAD_YEAR_ACTIVITIES | ERROR |', error);\r\n                    });\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | LOAD_YEAR_ACTIVITIES | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api load activities base on class -------------------------------------------------------------------------------------------------------------------------------\r\n    router.post('/loadClassActivities', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {cls: 'KTPM0121'}\r\n            if (user.pow[3]) {\r\n                // get all activities in that class:\r\n                const cls_act = await client\r\n                    .db(user.dep)\r\n                    .collection(data.cls + '_activities')\r\n                    .find({})\r\n                    .toArray();\r\n\r\n                return res.status(200).json(cls_act);\r\n            } else {\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | LOAD_CLASS_ACTIVITIES | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api end activities\r\n    router.post('/updateActivitiesStatus', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {_id: 18102003 (activities' id), level: 'Truong', status: '1' (1: đang diễn ra, 0: đã kết thúc)}\r\n            // must be department to use this api\r\n            if (user.pow[3]) {\r\n                if (data.level == 'Truong') {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $set: { end: data.status == '1' },\r\n                            },\r\n                        );\r\n                } else if (data.level == 'Khoa') {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection('activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $set: { end: data.status == '1' },\r\n                            },\r\n                        );\r\n                } else {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection(data.level + '_activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $set: { end: data.status == '1' },\r\n                            },\r\n                        );\r\n                }\r\n                wss.clients.forEach((ws) => {\r\n                    if (ws.actId == data._id) {\r\n                        ws.send('reload');\r\n                    }\r\n                });\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403); // send user to 403 page\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE_TEACHER | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api approval students join in activity\r\n    router.post('/approvalActivityStudent', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {_id: _id, level: level, dataUpdate: list of update students, defaultApproval: old student list}\r\n            // must be department to use this api\r\n            const ai = {};\r\n            Object.keys(data.dataUpdate).forEach((key) => {\r\n                ai[key] = data.dataUpdate[key] === 1 ? true : false;\r\n            });\r\n            if (user.pow[3]) {\r\n                if (data.level == 'Truong') {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $set: { student_list: data.dataUpdate, ai: ai },\r\n                            },\r\n                        );\r\n                } else if (data.level == 'Khoa') {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection('activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $set: { student_list: data.dataUpdate, ai: ai },\r\n                            },\r\n                        );\r\n                } else {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection(data.level + '_activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $set: { student_list: data.dataUpdate, ai: ai },\r\n                            },\r\n                        );\r\n                }\r\n\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403); // send user to 403 page\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | APPROVAL ACTIVITY STUDENTS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api delete student join in activity\r\n    router.post('/deleteActivityStudent', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {_id: _id, level: level, dataDelete: dataDelete }\r\n\r\n            // must be department to use this api\r\n            if (user.pow[3]) {\r\n                if (data.level == 'Truong') {\r\n                    // update status of current activity\r\n                    await client.db(name_global_databases).collection('activities').updateOne(\r\n                        {\r\n                            _id: data._id,\r\n                        },\r\n                        {\r\n                            $unset: data.dataDelete,\r\n                        },\r\n                    );\r\n                } else if (data.level == 'Khoa') {\r\n                    // update status of current activity\r\n                    await client.db(user.dep).collection('activities').updateOne(\r\n                        {\r\n                            _id: data._id,\r\n                        },\r\n                        {\r\n                            $unset: data.bonusDelete,\r\n                        },\r\n                    );\r\n                } else {\r\n                    // update status of current activity\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection(data.level + '_activities')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data._id,\r\n                            },\r\n                            {\r\n                                $unset: data.bonusDelete,\r\n                            },\r\n                        );\r\n                }\r\n\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403); // send user to 403 page\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE ACTIVITY STUDENTS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api delete activities checked\r\n    router.post('/deleteActivities', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {school_rmatv: [\"19112003\" (school_activity_id), ...], dep_rmatv: [\"28091978\" (dep_activity_id), ...], cls_rmatv: [\"18102003\" (cls_activity_id), ...]}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[3] && user.pow[11]) {\r\n                // remove all checked school activities\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('activities')\r\n                    .deleteMany({\r\n                        _id: { $in: data.school_rmatv },\r\n                    });\r\n\r\n                // remove all checked dep activities\r\n                await client\r\n                    .db(user.dep)\r\n                    .collection('activities')\r\n                    .deleteMany({\r\n                        _id: { $in: data.dep_rmatv },\r\n                    });\r\n\r\n                // remove all checked class activities\r\n                // get all activities of class of department\r\n                const collections = await client.db(user.dep).listCollections().toArray();\r\n\r\n                // Filter collections ending with '_activities'\r\n                const activityCollections = await collections.filter((collection) =>\r\n                    collection.name.endsWith('_activities'),\r\n                );\r\n\r\n                // Loop through activity collections and retrieve all documents\r\n                activityCollections.forEach(async (activityCollection) => {\r\n                    await client\r\n                        .db(user.dep)\r\n                        .collection(activityCollection.name)\r\n                        .deleteMany({\r\n                            _id: { $in: data.cls_rmatv },\r\n                        });\r\n                });\r\n\r\n                return res.sendStatus(200);\r\n            } else {\r\n                return res.sendStatus(403); // send user to 403 page\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE_TEACHER | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // load bang diem cua giao vien------------------------------------------------------------------------------------------------------------------\r\n    router.get('/teacher/loadScoresList', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            if (user.pow[1]) {\r\n                const data = req.query;\r\n                //data = {year: \"HK1_2022-2023\", cls: \"1\"}\r\n                const school_year = data.year;\r\n                const year_available = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne(\r\n                        {},\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                year: 1,\r\n                                start_day: 1,\r\n                                end_day: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const student_list = sortStudentName(\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .find(\r\n                            { class: data.cls, 'power.0': { $exists: true } },\r\n                            {\r\n                                projection: {\r\n                                    first_name: 1,\r\n                                    last_name: 1,\r\n                                    total_score: 1,\r\n                                },\r\n                            },\r\n                        )\r\n                        .toArray(),\r\n                );\r\n\r\n                // get all student total score from themself:\r\n                let result = {\r\n                    // staff_name: [],\r\n                    student_list: student_list,\r\n                    // student_scores: [],\r\n                    // staff_scores: [],\r\n                    // department_scores: [],\r\n                    year_available: year_available,\r\n                };\r\n\r\n                return res.status(200).json(result);\r\n            } else {\r\n                // user not staff members\r\n                // redirect to home (return 403, api khong the chuyenh huong ve trang chu duoc)\r\n                return res.sendStatus(403);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | GIAO_VIEN_LOAD_SCORE_LIST | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api add and edit new class\r\n    router.post('/addOrEditClasses', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {new_id: KTPM0121, old_id: CNTT0221, branch: KTPM, cvht: 18101911}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[9]) {\r\n                const school_year = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne(\r\n                        {},\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                year: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                const curr_year = school_year.year.split('_')[1];\r\n\r\n                // find year of old_id class before remove it\r\n                const old_class = await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .findOne(\r\n                        {\r\n                            _id: data.old_id,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                years: 1,\r\n                                cvht: 1,\r\n                            },\r\n                        },\r\n                    );\r\n\r\n                if (old_class) {\r\n                    // remove old_id class\r\n                    await client.db(name_global_databases).collection('classes').deleteOne({ _id: data.old_id });\r\n\r\n                    // add (edit old_id class)\r\n                    await client.db(name_global_databases).collection('classes').insertOne({\r\n                        _id: data.new_id,\r\n                        years: old_class.years, // years of old_id class\r\n                        branch: data.branch,\r\n                        cvht: data.cvht,\r\n                    });\r\n\r\n                    // remove class from old teacher's class\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .updateOne(\r\n                            {\r\n                                _id: old_class.cvht,\r\n                            },\r\n                            {\r\n                                $pull: { class: data.old_id },\r\n                            },\r\n                        );\r\n\r\n                    // add new class to new teacher's class\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data.cvht,\r\n                            },\r\n                            {\r\n                                $addToSet: { class: data.new_id },\r\n                            },\r\n                        );\r\n                } else {\r\n                    // add new_id class\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('classes')\r\n                        .insertOne({\r\n                            _id: data.new_id,\r\n                            years: {\r\n                                [`${curr_year}`]: [1, 2, 3],\r\n                            },\r\n                            branch: data.branch,\r\n                            cvht: data.cvht,\r\n                        });\r\n\r\n                    // add new class to teacher's class\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .updateOne(\r\n                            {\r\n                                _id: data.cvht,\r\n                            },\r\n                            {\r\n                                $addToSet: { class: data.new_id },\r\n                            },\r\n                        );\r\n                }\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | ADD_EDIT_CLASS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api delete classes checked\r\n    router.post('/deleteClasses', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {rm_cls: [\"KTPM0121\" (class_id), ...], rm_ts: [\"18101911\" (teacher_id), ...]}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[9]) {\r\n                // remove all checked classes in remove branchs líst in user_info and login_info\r\n                // remove class from teacher's class\r\n                await deleteClassApi(data, user);\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n            return res.sendStatus(200);\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE_CLASS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // api load classes\r\n    router.post('/loadClasses', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {curr_load_branch: 1 (next index to load), branchs: [KTPM, CNTT, ...] (all branch in department)}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[9]) {\r\n                // get all classes of not load branchs:\r\n                let classes = {}; // classes = {KTPM: [KTPM0121, KTPM0108, ...], CNTT: [CNTT0109, CNTT0209, ...], ...}\r\n                let class_teachers = []; // class_teachers = [18102003, 19112003, ...]\r\n                let new_curr_load_branch; // next final branch loaded\r\n\r\n                for (let i = data.curr_load_branch; i < data.branchs.length; i++) {\r\n                    let dummy = await client\r\n                        .db(name_global_databases)\r\n                        .collection('classes')\r\n                        .find(\r\n                            {\r\n                                branch: data.branchs[i]._id,\r\n                            }, // find all data\r\n                            {\r\n                                projection: {\r\n                                    cvht: 1,\r\n                                },\r\n                            },\r\n                        )\r\n                        .toArray();\r\n\r\n                    classes[data.branchs[i]._id] = dummy.map((cls) => cls._id);\r\n                    class_teachers.push(...dummy.map((cls) => cls.cvht));\r\n\r\n                    new_curr_load_branch = i + 1;\r\n                    // finish load one brach then check does number of classes over 30.\r\n                    if (class_teachers.length >= 30) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // get all teacher's name of classes\r\n                for (let i = 0; i < class_teachers.length; i++) {\r\n                    // replace current teacher's _id with teacher's name\r\n                    class_teachers[i] = await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .findOne(\r\n                            {\r\n                                _id: class_teachers[i],\r\n                                'power.1': { $exists: true },\r\n                                'power.4': { $exists: true },\r\n                            }, // user is teacher\r\n                            {\r\n                                projection: {\r\n                                    first_name: 1,\r\n                                    last_name: 1,\r\n                                },\r\n                            },\r\n                        );\r\n                }\r\n\r\n                return res.status(200).json({\r\n                    classes: classes,\r\n                    class_teachers: class_teachers,\r\n                    new_curr_load_branch: new_curr_load_branch,\r\n                });\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DELETE_CLASS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n    router.post('/exportaccount', upload.single('file'), checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const Class = req.body.class;\r\n            const studentList = sortStudentName(\r\n                await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .find(\r\n                        { class: Class, 'power.0': { $exists: true } },\r\n                        {\r\n                            projection: {\r\n                                _id: 1,\r\n                                last_name: 1,\r\n                                first_name: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .toArray(),\r\n            );\r\n\r\n            const workbook = await XlsxPopulate.fromFileAsync('./src/excelTemplate/FILE_TAO_ACC.xlsx');\r\n\r\n            const dataRows = [];\r\n\r\n            for (const student of studentList) {\r\n                const loginInfo = await client\r\n                    .db(name_global_databases)\r\n                    .collection('login_info')\r\n                    .findOne(\r\n                        { _id: student._id },\r\n                        {\r\n                            projection: {\r\n                                _id: 1,\r\n                                password: 1,\r\n                            },\r\n                        },\r\n                    );\r\n                if (loginInfo) {\r\n                    const dataRow = [student._id, loginInfo.password, student.last_name, student.first_name];\r\n\r\n                    dataRows.push(dataRow);\r\n                }\r\n            }\r\n\r\n            if (dataRows.length > 0) {\r\n                await workbook.sheet(0).cell('A2').value(dataRows);\r\n            }\r\n\r\n            const uuid = uuidv4();\r\n            const outputFile = path.join(`.downloads/${uuid}.xlsx`);\r\n\r\n            await workbook.toFileAsync(outputFile);\r\n            console.log(path.join('.downloads', uuid + '.xlsx'));\r\n            scheduleFileDeletion(path.join('.downloads', uuid + '.xlsx'));\r\n            return res.download(path.join('.downloads', uuid + '.xlsx'));\r\n        } catch (err) {\r\n            console.log('SYSTEM | EXPORT ACCOUNT | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n    // api get img acti student\r\n    router.post('/getImgActivities', checkIfUserLoginAPI, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const data = req.body; // data = {curr_load_branch: 1 (next index to load), branchs: [KTPM, CNTT, ...] (all branch in department)}\r\n\r\n            // must be department to use this api\r\n            if (user.pow[3]) {\r\n                imglist = await client\r\n                    .db(user.dep)\r\n                    .collection(data.class + '_std_table')\r\n                    .findOne(\r\n                        {\r\n                            mssv: data._id,\r\n                            school_year: data.year,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                img_ids: 1,\r\n                            },\r\n                        },\r\n                    );\r\n                if (data.idact in imglist.img_ids) {\r\n                    let imginfo = [];\r\n                    for (const i of imglist.img_ids[data.idact]) {\r\n                        imginfo.push(await server.getDriveFileLinkAndDescription(i));\r\n                    }\r\n\r\n                    return res.status(200).json(imginfo);\r\n                } else return res.status(404).json();\r\n            } else {\r\n                return res.sendStatus(403); // back to home\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | LOAD_IMG_STUDENTS | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    return router;\r\n}\r\n\r\nmodule.exports = createAPIRouter;\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1719560456458},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\depRouters.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst server = require('../lib/csdl_google_lib');\nconst {\n  checkIfUserLoginRoute,\n  sortStudentName\n} = require('../lib/function_lib');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst {\n  ObjectId\n} = require('mongodb');\nconst name_global_databases = getNameGlobal();\n// doan khoa route\nfunction createDepRouter(client) {\n  // quan li bo mon - doan khoa route\n  router.get('/quanlibomon', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n\n    // get all branch of department:\n    const branchs = await client.db(name_global_databases).collection('branchs').find({\n      dep: user.dep\n    },\n    // find all data\n    {\n      projection: {\n        _id: 0,\n        name: 1\n      }\n    }).toArray();\n\n    // get department name:\n    const dep_name = await client.db(name_global_databases).collection('deps').findOne({\n      _id: user.dep\n    },\n    // find all data\n    {\n      projection: {\n        _id: 0,\n        name: 1\n      }\n    });\n    return res.render('doankhoa-manage-departments', {\n      header: 'global-header',\n      footer: 'global-footer',\n      menu: 'doankhoa-menu',\n      thongbao: 'global-notifications',\n      dep: dep_name.name,\n      // every branch have same department\n      branchs: branchs\n    });\n  });\n\n  // quan li lop - doan khoa route\n  router.get('/quanlilop', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n\n    // get all branch of department:\n    const branchs = await client.db(name_global_databases).collection('branchs').find({\n      dep: user.dep\n    },\n    // find all data\n    {\n      projection: {\n        name: 1\n      }\n    }).toArray();\n    let curr_load_branch;\n    // get all classes of branchs:\n    let classes = {}; // classes = {KTPM: [KTPM0121, KTPM0108, ...], CNTT: [CNTT0109, CNTT0209, ...], ...}\n    let class_teachers = []; // class_teachers = [18102003, 19112003, ...]\n    for (let i = 0; i < branchs.length; i++) {\n      let dummy = await client.db(name_global_databases).collection('classes').find({\n        branch: branchs[i]._id\n      },\n      // find all data\n      {\n        projection: {\n          cvht: 1\n        }\n      }).toArray();\n      classes[branchs[i]._id] = dummy.map(cls => cls._id);\n      class_teachers.push(...dummy.map(cls => cls.cvht));\n\n      // set current load branch to i\n      curr_load_branch = i + 1;\n      // finish load one brach then check does number of classes over 30.\n      if (class_teachers.length >= 30) {\n        break;\n      }\n    }\n    // get all teacher's name in current department\n    const teachers = await client.db(name_global_databases).collection('user_info').find({\n      'power.1': {\n        $exists: true\n      },\n      'power.4': {\n        $exists: true\n      },\n      $or: [{\n        branch: {\n          $in: branchs.map(branch => branch._id)\n        }\n      }, {\n        branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n      }]\n    },\n    // user is teacher\n    {\n      projection: {\n        first_name: 1,\n        last_name: 1\n      }\n    }).toArray();\n\n    // get all teacher's name of classes\n    for (let i = 0; i < class_teachers.length; i++) {\n      // replace current teacher's _id with teacher's name\n      class_teachers[i] = await client.db(name_global_databases).collection('user_info').findOne({\n        _id: class_teachers[i],\n        'power.1': {\n          $exists: true\n        },\n        'power.4': {\n          $exists: true\n        }\n      },\n      // user is teacher\n      {\n        projection: {\n          first_name: 1,\n          last_name: 1\n        }\n      });\n    }\n    return res.render('doankhoa-manage-classes', {\n      header: 'global-header',\n      footer: 'global-footer',\n      menu: 'doankhoa-menu',\n      thongbao: 'global-notifications',\n      dep_name: user.dep,\n      branchs: branchs,\n      classes: classes,\n      teachers: teachers.map(teacher => teacher.last_name + ' ' + teacher.first_name),\n      teachers_id: teachers.map(teacher => teacher._id),\n      class_teachers: class_teachers,\n      curr_load_branch: curr_load_branch\n    });\n  });\n\n  // danh sach bang diem khoa route\n  router.get('/danhsachbangdiem', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n        projection: {\n          _id: 0,\n          year: 1\n        }\n      });\n      // check user login:\n      if (user.pow[2]) {\n        // get all branch of department:\n        let branch_list = await client.db(name_global_databases).collection('branchs').find({\n          dep: user.dep\n        }, {\n          projection: {\n            _id: 1,\n            name: 1\n          }\n        }).toArray();\n        const classlist = await client.db(name_global_databases).collection('classes').find({\n          branch: {\n            $in: branch_list.map(branch => branch._id)\n          }\n        }, {\n          projection: {\n            _id: 1,\n            branch: 1\n          }\n        }).toArray();\n        const years = await client.db(name_global_databases).collection('classes').findOne({\n          _id: classlist[0]._id\n        }, {\n          projection: {\n            _id: 0,\n            years: 1\n          }\n        });\n        console.log(years);\n        // get all student in staff member class:\n        let student_list = await client.db(name_global_databases).collection('user_info').find({\n          class: classlist[0]._id,\n          'power.0': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1,\n            total_score: 1\n          }\n        }).toArray();\n        student_list = sortStudentName(student_list);\n        console.log('curr', classlist[0]._id);\n        // get all student total score from themself:\n        let render = {\n          header: 'global-header',\n          footer: 'global-footer',\n          thongbao: 'global-notifications',\n          menu: 'doankhoa-menu',\n          staff_name: [],\n          student_list: student_list,\n          cls: classlist,\n          years: years.years,\n          curr_year: school_year.year,\n          curr_clss: classlist[0]._id,\n          branch: branch_list\n        };\n        return res.render('doankhoa-grade-list', render);\n      } else {\n        // user not staff members\n        // redirect to home\n        return res.redirect('/');\n      }\n    } catch (e) {\n      console.log('SYSTEM | DOAN_KHOA_DANH_SACH_BANG_DIEM | ERROR | ', e);\n    }\n  });\n\n  //quan li co van - doan khoa route\n  router.get('/quanlicv', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n\n      // get all branch of department\n      const all_branchs = await client.db(name_global_databases).collection('branchs').find({\n        dep: user.dep\n      }, {\n        projection: {\n          name: 1\n        }\n      }).toArray();\n      // get user name and class in dep\n      const teachers = await client.db(name_global_databases).collection('user_info').find({\n        'power.1': {\n          $exists: true\n        },\n        'power.4': {\n          $exists: true\n        },\n        'power.999': {\n          $exists: false\n        },\n        $or: [{\n          branch: {\n            $in: all_branchs.map(branch => branch._id)\n          }\n        }, {\n          branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f')\n        }]\n      },\n      // user is teacher\n      {\n        projection: {\n          first_name: 1,\n          last_name: 1,\n          class: 1,\n          branch: 1\n        }\n      }).toArray();\n      let branch_list = [];\n      for (let i = 0; i < teachers.length; i++) {\n        const branch = await client.db(name_global_databases).collection('branchs').findOne({\n          _id: teachers[i].branch\n        }, {\n          projection: {\n            _id: 0,\n            name: 1\n          }\n        });\n        branch_list.push(branch.name);\n      }\n      return res.render('doankhoa-manage-teacher', {\n        header: 'global-header',\n        footer: 'global-footer',\n        thongbao: 'global-notifications',\n        menu: 'doankhoa-menu',\n        teachers: teachers,\n        branchs: branch_list,\n        all_branchs: all_branchs\n      });\n    } catch (err) {\n      console.log('SYSTEM | DOAN_KHOA_QUAN_LY_CO_VAN_ROUTE | ERROR | ', err);\n      return res.sendStatus(500);\n    }\n  });\n\n  // Quan li hoat dong khoa route\n  router.get('/quanlihoatdongkhoa', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n      projection: {\n        _id: 0,\n        year: 1\n      }\n    });\n    // check user login:\n    if (user.pow[3] && user.pow[11]) {\n      let branch_list = await client.db(name_global_databases).collection('branchs').find({\n        dep: user.dep\n      }, {\n        projection: {\n          _id: 1,\n          name: 1\n        }\n      }).toArray();\n      const classlist = await client.db(name_global_databases).collection('classes').find({\n        branch: {\n          $in: branch_list.map(branch => branch._id)\n        }\n      }, {\n        projection: {\n          _id: 1,\n          branch: 1\n        }\n      }).toArray();\n      const years = await client.db(name_global_databases).collection('classes').findOne({\n        _id: classlist[0]._id\n      }, {\n        projection: {\n          _id: 0,\n          years: 1\n        }\n      });\n\n      // get all activities of school\n      const school_atv = await client.db(name_global_databases).collection('activities').find({\n        year: school_year.year\n      }, {\n        projection: {\n          name: 1,\n          content: 1,\n          year: 1,\n          start_time: 1\n        }\n      }).limit(10).toArray();\n\n      // get all activities of dep\n      const dep_atv = await client.db(user.dep).collection('activities').find({\n        year: school_year.year\n      }, {\n        projection: {\n          name: 1,\n          content: 1,\n          year: 1,\n          start_time: 1\n        }\n      }).limit(10).toArray();\n\n      // get all activities of class of department\n      const collections = await client.db(user.dep).listCollections().toArray();\n\n      // Filter collections ending with '_activities'\n      const activityCollections = collections.filter(collection => collection.name.endsWith('_activities'));\n\n      // Loop through activity collections and retrieve all documents\n      const cls_atvs = await activityCollections.map(async collection => {\n        const dummy = await client.db(user.dep).collection(collection.name).find({\n          year: school_year.year\n        }, {\n          projection: {\n            name: 1,\n            content: 1,\n            cls: 1,\n            year: 1,\n            start_time: 1\n          }\n        }).limit(10).toArray();\n        return dummy;\n      });\n      Promise.all(cls_atvs).then(results => {\n        // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\n        // Bạn có thể làm gì đó với kết quả ở đây.\n        const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\n        return res.render('doankhoa-manage-activities', {\n          header: 'global-header',\n          footer: 'global-footer',\n          thongbao: 'global-notifications',\n          menu: 'doankhoa-menu',\n          cls: classlist,\n          years: years.years,\n          curr_year: school_year.year,\n          branch: branch_list,\n          school_atv: school_atv,\n          dep_atv: dep_atv,\n          cls_atv: cls_atv\n        });\n      }).catch(error => {\n        // Xử lý lỗi nếu có\n        console.log(error);\n      });\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n\n  // danh sach sinh vien route\n  router.get('/danhsachsinhvien', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    if (user.pow[4] || user.pow[7]) {\n      // get all branch of department:\n      const branchs = await client.db(name_global_databases).collection('branchs').find({\n        dep: user.dep\n      },\n      // find all data\n      {\n        projection: {\n          _id: 1\n        }\n      }).toArray();\n\n      // get all classes of department\n      let classes = []; // class_teachers = [18102003, 19112003, (class_ids) ...]\n      for (let i = 0; i < branchs.length; i++) {\n        let dummy = await client.db(name_global_databases).collection('classes').find({\n          branch: branchs[i]._id\n        },\n        // find all data\n        {\n          projection: {\n            _id: 1\n          }\n        }).toArray();\n        classes.push(...dummy.map(cls => cls._id));\n      }\n      return res.render('doankhoa-student-list', {\n        header: 'global-header',\n        footer: 'global-footer',\n        thongbao: 'global-notifications',\n        menu: 'doankhoa-menu',\n        classes: classes\n      });\n    } else {\n      return res.redirect('/');\n    }\n  });\n\n  // doan khoa nhap diem route\n  router.get('/nhapdiemdanhgia', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const mssv = req.query.studentId;\n      const cls = req.query.class;\n      const schoolYearParam = req.query.schoolYear;\n      const studentTotalScore = await client.db(user.dep).collection(cls + '_std_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          img_ids: 1\n        }\n      });\n      let stfTotalScore = await client.db(user.dep).collection(cls + '_stf_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1\n        }\n      });\n      let depTotalScore = await client.db(user.dep).collection(cls + '_dep_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1\n        }\n      });\n      nulltable = {\n        fifth: [0, 0, 0, 0],\n        first: [0, 0, 0, 0, 0],\n        fourth: [0, 0, 0],\n        second: [0, 0],\n        third: [0, 0, 0],\n        total: 0\n      };\n      if (!stfTotalScore) {\n        stfTotalScore = nulltable;\n      }\n      if (!depTotalScore) {\n        depTotalScore = nulltable;\n      }\n      let link_img = [];\n      if (studentTotalScore && studentTotalScore.img_ids) {\n        for (const [key, value] of Object.entries(studentTotalScore.img_ids)) {\n          if (key == 'global') {\n            for (const i of value) {\n              link_img.push(await server.getDriveFileLinkAndDescription(i));\n            }\n          } else {\n            let activitie_info;\n            activitie_info = await client.db(user.dep).collection(`${cls}_activities`).findOne({\n              _id: key\n            }, {\n              projection: {\n                name: 1\n              }\n            });\n            if (!activitie_info) {\n              activitie_info = await client.db(user.dep).collection('activities').findOne({\n                _id: key\n              }, {\n                projection: {\n                  name: 1\n                }\n              });\n              if (!activitie_info) {\n                activitie_info = await client.db(name_global_databases).collection('activities').findOne({\n                  _id: key\n                }, {\n                  projection: {\n                    name: 1\n                  }\n                });\n              }\n            }\n            for (const i of value) {\n              let imginfo = await server.getDriveFileLinkAndDescription(i);\n              if (imginfo) {\n                imginfo.fileDescription = activitie_info.name + '-' + imginfo.fileDescription;\n                link_img.push(imginfo);\n              }\n            }\n          }\n        }\n        return res.render('doankhoa-manage-grades', {\n          header: 'global-header',\n          thongbao: 'global-notifications',\n          footer: 'global-footer',\n          menu: 'doankhoa-menu',\n          img: link_img,\n          Scorestd: studentTotalScore,\n          Score: stfTotalScore,\n          Scorek: depTotalScore\n        });\n      } else {\n        return res.sendStatus(404);\n      }\n    } catch (err) {\n      console.log('SYSTEM | DOAN_KHOA_NHAP_DIEM_ROUTE | ERROR | ', err);\n      return res.status(500).json({\n        error: 'Lỗi hệ thống'\n      });\n    }\n  });\n\n  // doan khoa thoi han cham diem route\n  router.get('/thoihan', checkIfUserLoginRoute, async (req, res) => {\n    const curr_date = new Date();\n    const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n      projection: {\n        year: 1,\n        start_day: 1,\n        end_day: 1\n      }\n    });\n\n    // set cbx text\n    let cbx = 'Đang diễn ra';\n    if (school_year.start_day <= curr_date && (curr_date <= school_year.end_day || school_year.end_day.toISOString() == '2003-10-18T00:00:00.000Z')) {\n      cbx = 'Đang diễn ra';\n    } else if (school_year.start_day > curr_date) {\n      cbx = 'Sắp diễn ra';\n    } else if (curr_date > school_year.end_day) {\n      cbx = 'Đã kết thúc';\n    }\n\n    // check if end day is forever or not\n    if (school_year.end_day.toISOString() == '2003-10-18T00:00:00.000Z') {\n      school_year.end_day = undefined;\n    }\n    return res.render('doankhoa-time', {\n      header: 'global-header',\n      footer: 'global-footer',\n      thongbao: 'global-notifications',\n      menu: 'doankhoa-menu',\n      school_year: school_year,\n      cbx: cbx\n    });\n  });\n\n  // chi tiet hoat dong ------------------------------------------------------------------------------------------\n  // school\n  router.get('/quanlihoatdong/:level/:id', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    try {\n      if (user.pow[3]) {\n        // get id by req.params.id\n        // identify current activity of school activities\n        let curr_act;\n        switch (req.params.level) {\n          case 'Truong':\n            curr_act = await client.db(name_global_databases).collection('activities').findOne({\n              _id: req.params.id\n            });\n            break;\n          case 'Khoa':\n            curr_act = await client.db(user.dep).collection('activities').findOne({\n              _id: req.params.id\n            });\n            break;\n          default:\n            curr_act = await client.db(user.dep).collection(req.params.level + '_activities').findOne({\n              _id: req.params.id\n            });\n            break;\n        }\n        // get all students information joined current activity\n        let students_data = [];\n        let bonus_true;\n        let all_true = true; // check does all student is yes or not\n        if (curr_act.student_list) {\n          for (const [key, value] of Object.entries(curr_act.student_list)) {\n            const data = await client.db(name_global_databases).collection('user_info').findOne({\n              _id: key\n            }, {\n              projection: {\n                displayName: 1,\n                class: 1\n              }\n            });\n            if (data) {\n              students_data.push(data);\n            } else {\n              students_data.push({\n                _id: 'none',\n                displayName: 'none',\n                class: ['none']\n              });\n            }\n            if (value == 1) {\n              // have one student not have bonus\n              bonus_true = false;\n            }\n            if (value == 0) {\n              // have one student not aproval yet\n              all_true = false;\n              bonus_true = false;\n            }\n          }\n        }\n        return res.render('doankhoa-activity-assessment', {\n          header: 'global-header',\n          thongbao: 'global-notifications',\n          footer: 'global-footer',\n          menu: 'doankhoa-menu',\n          curr_act: curr_act,\n          students_data: students_data,\n          all_true: all_true,\n          bonus_true: bonus_true,\n          idact: req.params.id\n        });\n      } else {\n        return res.redirect('/');\n      }\n    } catch (err) {\n      console.log('SYSTEM | REVIEWS_ACTIVITY | ERROR | ', err);\n      res.sendStatus(500);\n    }\n  });\n  // -------------------------------------------------------------------------------------------\n\n  return router;\n}\nmodule.exports = createDepRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","server","checkIfUserLoginRoute","sortStudentName","getNameGlobal","ObjectId","name_global_databases","createDepRouter","client","get","req","res","user","session","branchs","db","collection","find","dep","projection","_id","name","toArray","dep_name","findOne","render","header","footer","menu","thongbao","curr_load_branch","classes","class_teachers","i","length","dummy","branch","cvht","map","cls","push","teachers","$exists","$or","$in","createFromHexString","first_name","last_name","teacher","teachers_id","school_year","year","pow","branch_list","classlist","years","console","log","student_list","class","total_score","staff_name","curr_year","curr_clss","redirect","e","all_branchs","err","sendStatus","school_atv","content","start_time","limit","dep_atv","collections","listCollections","activityCollections","filter","endsWith","cls_atvs","Promise","all","then","results","cls_atv","concat","catch","error","mssv","query","studentId","schoolYearParam","schoolYear","studentTotalScore","first","second","third","fourth","fifth","total","img_ids","stfTotalScore","depTotalScore","nulltable","link_img","key","value","Object","entries","getDriveFileLinkAndDescription","activitie_info","imginfo","fileDescription","img","Scorestd","Score","Scorek","status","json","curr_date","Date","start_day","end_day","cbx","toISOString","undefined","curr_act","params","level","id","students_data","bonus_true","all_true","data","displayName","idact","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["depRouters.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst server = require('../lib/csdl_google_lib');\r\nconst { checkIfUserLoginRoute, sortStudentName } = require('../lib/function_lib');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst { ObjectId } = require('mongodb');\r\n\r\nconst name_global_databases = getNameGlobal();\r\n// doan khoa route\r\nfunction createDepRouter(client) {\r\n    // quan li bo mon - doan khoa route\r\n    router.get('/quanlibomon', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        // get all branch of department:\r\n        const branchs = await client\r\n            .db(name_global_databases)\r\n            .collection('branchs')\r\n            .find(\r\n                {\r\n                    dep: user.dep,\r\n                }, // find all data\r\n                {\r\n                    projection: {\r\n                        _id: 0,\r\n                        name: 1,\r\n                    },\r\n                },\r\n            )\r\n            .toArray();\r\n\r\n        // get department name:\r\n        const dep_name = await client\r\n            .db(name_global_databases)\r\n            .collection('deps')\r\n            .findOne(\r\n                {\r\n                    _id: user.dep,\r\n                }, // find all data\r\n                {\r\n                    projection: {\r\n                        _id: 0,\r\n                        name: 1,\r\n                    },\r\n                },\r\n            );\r\n\r\n        return res.render('doankhoa-manage-departments', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n            menu: 'doankhoa-menu',\r\n            thongbao: 'global-notifications',\r\n            dep: dep_name.name, // every branch have same department\r\n            branchs: branchs,\r\n        });\r\n    });\r\n\r\n    // quan li lop - doan khoa route\r\n    router.get('/quanlilop', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        // get all branch of department:\r\n        const branchs = await client\r\n            .db(name_global_databases)\r\n            .collection('branchs')\r\n            .find(\r\n                {\r\n                    dep: user.dep,\r\n                }, // find all data\r\n                {\r\n                    projection: {\r\n                        name: 1,\r\n                    },\r\n                },\r\n            )\r\n            .toArray();\r\n\r\n        let curr_load_branch;\r\n        // get all classes of branchs:\r\n        let classes = {}; // classes = {KTPM: [KTPM0121, KTPM0108, ...], CNTT: [CNTT0109, CNTT0209, ...], ...}\r\n        let class_teachers = []; // class_teachers = [18102003, 19112003, ...]\r\n        for (let i = 0; i < branchs.length; i++) {\r\n            let dummy = await client\r\n                .db(name_global_databases)\r\n                .collection('classes')\r\n                .find(\r\n                    {\r\n                        branch: branchs[i]._id,\r\n                    }, // find all data\r\n                    {\r\n                        projection: {\r\n                            cvht: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .toArray();\r\n\r\n            classes[branchs[i]._id] = dummy.map((cls) => cls._id);\r\n            class_teachers.push(...dummy.map((cls) => cls.cvht));\r\n\r\n            // set current load branch to i\r\n            curr_load_branch = i + 1;\r\n            // finish load one brach then check does number of classes over 30.\r\n            if (class_teachers.length >= 30) {\r\n                break;\r\n            }\r\n        }\r\n        // get all teacher's name in current department\r\n        const teachers = await client\r\n            .db(name_global_databases)\r\n            .collection('user_info')\r\n            .find(\r\n                {\r\n                    'power.1': { $exists: true },\r\n                    'power.4': { $exists: true },\r\n                    $or: [\r\n                        { branch: { $in: branchs.map((branch) => branch._id) } },\r\n                        { branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f') },\r\n                    ],\r\n                }, // user is teacher\r\n                {\r\n                    projection: {\r\n                        first_name: 1,\r\n                        last_name: 1,\r\n                    },\r\n                },\r\n            )\r\n            .toArray();\r\n\r\n        // get all teacher's name of classes\r\n        for (let i = 0; i < class_teachers.length; i++) {\r\n            // replace current teacher's _id with teacher's name\r\n            class_teachers[i] = await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .findOne(\r\n                    {\r\n                        _id: class_teachers[i],\r\n                        'power.1': { $exists: true },\r\n                        'power.4': { $exists: true },\r\n                    }, // user is teacher\r\n                    {\r\n                        projection: {\r\n                            first_name: 1,\r\n                            last_name: 1,\r\n                        },\r\n                    },\r\n                );\r\n        }\r\n\r\n        return res.render('doankhoa-manage-classes', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n            menu: 'doankhoa-menu',\r\n            thongbao: 'global-notifications',\r\n            dep_name: user.dep,\r\n            branchs: branchs,\r\n            classes: classes,\r\n            teachers: teachers.map((teacher) => teacher.last_name + ' ' + teacher.first_name),\r\n            teachers_id: teachers.map((teacher) => teacher._id),\r\n            class_teachers: class_teachers,\r\n            curr_load_branch: curr_load_branch,\r\n        });\r\n    });\r\n\r\n    // danh sach bang diem khoa route\r\n    router.get('/danhsachbangdiem', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n\r\n            const school_year = await client\r\n                .db(name_global_databases)\r\n                .collection('school_year')\r\n                .findOne({}, { projection: { _id: 0, year: 1 } });\r\n            // check user login:\r\n            if (user.pow[2]) {\r\n                // get all branch of department:\r\n                let branch_list = await client\r\n                    .db(name_global_databases)\r\n                    .collection('branchs')\r\n                    .find({ dep: user.dep }, { projection: { _id: 1, name: 1 } })\r\n                    .toArray();\r\n\r\n                const classlist = await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .find(\r\n                        { branch: { $in: branch_list.map((branch) => branch._id) } },\r\n                        { projection: { _id: 1, branch: 1 } },\r\n                    )\r\n                    .toArray();\r\n\r\n                const years = await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .findOne({ _id: classlist[0]._id }, { projection: { _id: 0, years: 1 } });\r\n                console.log(years);\r\n                // get all student in staff member class:\r\n                let student_list = await client\r\n                    .db(name_global_databases)\r\n                    .collection('user_info')\r\n                    .find(\r\n                        { class: classlist[0]._id, 'power.0': { $exists: true } },\r\n                        {\r\n                            projection: {\r\n                                first_name: 1,\r\n                                last_name: 1,\r\n                                total_score: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .toArray();\r\n\r\n                student_list = sortStudentName(student_list);\r\n                console.log('curr', classlist[0]._id);\r\n                // get all student total score from themself:\r\n                let render = {\r\n                    header: 'global-header',\r\n                    footer: 'global-footer',\r\n                    thongbao: 'global-notifications',\r\n                    menu: 'doankhoa-menu',\r\n                    staff_name: [],\r\n                    student_list: student_list,\r\n                    cls: classlist,\r\n                    years: years.years,\r\n                    curr_year: school_year.year,\r\n                    curr_clss: classlist[0]._id,\r\n                    branch: branch_list,\r\n                };\r\n\r\n                return res.render('doankhoa-grade-list', render);\r\n            } else {\r\n                // user not staff members\r\n                // redirect to home\r\n                return res.redirect('/');\r\n            }\r\n        } catch (e) {\r\n            console.log('SYSTEM | DOAN_KHOA_DANH_SACH_BANG_DIEM | ERROR | ', e);\r\n        }\r\n    });\r\n\r\n    //quan li co van - doan khoa route\r\n    router.get('/quanlicv', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n\r\n            // get all branch of department\r\n            const all_branchs = await client\r\n                .db(name_global_databases)\r\n                .collection('branchs')\r\n                .find(\r\n                    {\r\n                        dep: user.dep,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            name: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .toArray();\r\n            // get user name and class in dep\r\n            const teachers = await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .find(\r\n                    {\r\n                        'power.1': { $exists: true },\r\n                        'power.4': { $exists: true },\r\n                        'power.999': { $exists: false },\r\n\r\n                        $or: [\r\n                            { branch: { $in: all_branchs.map((branch) => branch._id) } },\r\n                            { branch: ObjectId.createFromHexString('650985a345e2e896b37efd4f') },\r\n                        ],\r\n                    }, // user is teacher\r\n                    {\r\n                        projection: {\r\n                            first_name: 1,\r\n                            last_name: 1,\r\n                            class: 1,\r\n                            branch: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .toArray();\r\n            let branch_list = [];\r\n            for (let i = 0; i < teachers.length; i++) {\r\n                const branch = await client\r\n                    .db(name_global_databases)\r\n                    .collection('branchs')\r\n                    .findOne(\r\n                        { _id: teachers[i].branch },\r\n                        {\r\n                            projection: {\r\n                                _id: 0,\r\n                                name: 1,\r\n                            },\r\n                        },\r\n                    );\r\n                branch_list.push(branch.name);\r\n            }\r\n            return res.render('doankhoa-manage-teacher', {\r\n                header: 'global-header',\r\n                footer: 'global-footer',\r\n                thongbao: 'global-notifications',\r\n                menu: 'doankhoa-menu',\r\n                teachers: teachers,\r\n                branchs: branch_list,\r\n                all_branchs: all_branchs,\r\n            });\r\n        } catch (err) {\r\n            console.log('SYSTEM | DOAN_KHOA_QUAN_LY_CO_VAN_ROUTE | ERROR | ', err);\r\n            return res.sendStatus(500);\r\n        }\r\n    });\r\n\r\n    // Quan li hoat dong khoa route\r\n    router.get('/quanlihoatdongkhoa', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        const school_year = await client\r\n            .db(name_global_databases)\r\n            .collection('school_year')\r\n            .findOne({}, { projection: { _id: 0, year: 1 } });\r\n        // check user login:\r\n        if (user.pow[3] && user.pow[11]) {\r\n            let branch_list = await client\r\n                .db(name_global_databases)\r\n                .collection('branchs')\r\n                .find({ dep: user.dep }, { projection: { _id: 1, name: 1 } })\r\n                .toArray();\r\n\r\n            const classlist = await client\r\n                .db(name_global_databases)\r\n                .collection('classes')\r\n                .find(\r\n                    { branch: { $in: branch_list.map((branch) => branch._id) } },\r\n                    { projection: { _id: 1, branch: 1 } },\r\n                )\r\n                .toArray();\r\n\r\n            const years = await client\r\n                .db(name_global_databases)\r\n                .collection('classes')\r\n                .findOne({ _id: classlist[0]._id }, { projection: { _id: 0, years: 1 } });\r\n\r\n            // get all activities of school\r\n            const school_atv = await client\r\n                .db(name_global_databases)\r\n                .collection('activities')\r\n                .find(\r\n                    {\r\n                        year: school_year.year,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            name: 1,\r\n                            content: 1,\r\n                            year: 1,\r\n                            start_time: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .limit(10)\r\n                .toArray();\r\n\r\n            // get all activities of dep\r\n            const dep_atv = await client\r\n                .db(user.dep)\r\n                .collection('activities')\r\n                .find(\r\n                    {\r\n                        year: school_year.year,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            name: 1,\r\n                            content: 1,\r\n                            year: 1,\r\n                            start_time: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .limit(10)\r\n                .toArray();\r\n\r\n            // get all activities of class of department\r\n            const collections = await client.db(user.dep).listCollections().toArray();\r\n\r\n            // Filter collections ending with '_activities'\r\n            const activityCollections = collections.filter((collection) => collection.name.endsWith('_activities'));\r\n\r\n            // Loop through activity collections and retrieve all documents\r\n            const cls_atvs = await activityCollections.map(async (collection) => {\r\n                const dummy = await client\r\n                    .db(user.dep)\r\n                    .collection(collection.name)\r\n                    .find(\r\n                        {\r\n                            year: school_year.year,\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                name: 1,\r\n                                content: 1,\r\n                                cls: 1,\r\n                                year: 1,\r\n                                start_time: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .limit(10)\r\n                    .toArray();\r\n                return dummy;\r\n            });\r\n            Promise.all(cls_atvs)\r\n                .then((results) => {\r\n                    // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\r\n                    // Bạn có thể làm gì đó với kết quả ở đây.\r\n                    const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\r\n                    return res.render('doankhoa-manage-activities', {\r\n                        header: 'global-header',\r\n                        footer: 'global-footer',\r\n                        thongbao: 'global-notifications',\r\n                        menu: 'doankhoa-menu',\r\n                        cls: classlist,\r\n                        years: years.years,\r\n                        curr_year: school_year.year,\r\n                        branch: branch_list,\r\n                        school_atv: school_atv,\r\n                        dep_atv: dep_atv,\r\n                        cls_atv: cls_atv,\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    // Xử lý lỗi nếu có\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    // danh sach sinh vien route\r\n    router.get('/danhsachsinhvien', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        if (user.pow[4] || user.pow[7]) {\r\n            // get all branch of department:\r\n            const branchs = await client\r\n                .db(name_global_databases)\r\n                .collection('branchs')\r\n                .find(\r\n                    {\r\n                        dep: user.dep,\r\n                    }, // find all data\r\n                    {\r\n                        projection: {\r\n                            _id: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .toArray();\r\n\r\n            // get all classes of department\r\n            let classes = []; // class_teachers = [18102003, 19112003, (class_ids) ...]\r\n            for (let i = 0; i < branchs.length; i++) {\r\n                let dummy = await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .find(\r\n                        {\r\n                            branch: branchs[i]._id,\r\n                        }, // find all data\r\n                        {\r\n                            projection: {\r\n                                _id: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .toArray();\r\n\r\n                classes.push(...dummy.map((cls) => cls._id));\r\n            }\r\n\r\n            return res.render('doankhoa-student-list', {\r\n                header: 'global-header',\r\n                footer: 'global-footer',\r\n                thongbao: 'global-notifications',\r\n                menu: 'doankhoa-menu',\r\n                classes: classes,\r\n            });\r\n        } else {\r\n            return res.redirect('/');\r\n        }\r\n    });\r\n\r\n    // doan khoa nhap diem route\r\n    router.get('/nhapdiemdanhgia', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const mssv = req.query.studentId;\r\n            const cls = req.query.class;\r\n            const schoolYearParam = req.query.schoolYear;\r\n            const studentTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(cls + '_std_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            img_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n\r\n            let stfTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(cls + '_stf_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                        },\r\n                    },\r\n                );\r\n\r\n            let depTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(cls + '_dep_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                        },\r\n                    },\r\n                );\r\n            nulltable = {\r\n                fifth: [0, 0, 0, 0],\r\n                first: [0, 0, 0, 0, 0],\r\n                fourth: [0, 0, 0],\r\n                second: [0, 0],\r\n                third: [0, 0, 0],\r\n                total: 0,\r\n            };\r\n            if (!stfTotalScore) {\r\n                stfTotalScore = nulltable;\r\n            }\r\n            if (!depTotalScore) {\r\n                depTotalScore = nulltable;\r\n            }\r\n            let link_img = [];\r\n\r\n            if (studentTotalScore && studentTotalScore.img_ids) {\r\n                for (const [key, value] of Object.entries(studentTotalScore.img_ids)) {\r\n                    if (key == 'global') {\r\n                        for (const i of value) {\r\n                            link_img.push(await server.getDriveFileLinkAndDescription(i));\r\n                        }\r\n                    } else {\r\n                        let activitie_info;\r\n                        activitie_info = await client\r\n                            .db(user.dep)\r\n                            .collection(`${cls}_activities`)\r\n                            .findOne(\r\n                                {\r\n                                    _id: key,\r\n                                },\r\n                                { projection: { name: 1 } },\r\n                            );\r\n                        if (!activitie_info) {\r\n                            activitie_info = await client\r\n                                .db(user.dep)\r\n                                .collection('activities')\r\n                                .findOne(\r\n                                    {\r\n                                        _id: key,\r\n                                    },\r\n                                    { projection: { name: 1 } },\r\n                                );\r\n                            if (!activitie_info) {\r\n                                activitie_info = await client\r\n                                    .db(name_global_databases)\r\n                                    .collection('activities')\r\n                                    .findOne(\r\n                                        {\r\n                                            _id: key,\r\n                                        },\r\n                                        { projection: { name: 1 } },\r\n                                    );\r\n                            }\r\n                        }\r\n                        for (const i of value) {\r\n                            let imginfo = await server.getDriveFileLinkAndDescription(i);\r\n                            if (imginfo) {\r\n                                imginfo.fileDescription = activitie_info.name + '-' + imginfo.fileDescription;\r\n                                link_img.push(imginfo);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return res.render('doankhoa-manage-grades', {\r\n                    header: 'global-header',\r\n                    thongbao: 'global-notifications',\r\n                    footer: 'global-footer',\r\n                    menu: 'doankhoa-menu',\r\n                    img: link_img,\r\n\r\n                    Scorestd: studentTotalScore,\r\n                    Score: stfTotalScore,\r\n                    Scorek: depTotalScore,\r\n                });\r\n            } else {\r\n                return res.sendStatus(404);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | DOAN_KHOA_NHAP_DIEM_ROUTE | ERROR | ', err);\r\n            return res.status(500).json({ error: 'Lỗi hệ thống' });\r\n        }\r\n    });\r\n\r\n    // doan khoa thoi han cham diem route\r\n    router.get('/thoihan', checkIfUserLoginRoute, async (req, res) => {\r\n        const curr_date = new Date();\r\n        const school_year = await client\r\n            .db(name_global_databases)\r\n            .collection('school_year')\r\n            .findOne(\r\n                {},\r\n                {\r\n                    projection: { year: 1, start_day: 1, end_day: 1 },\r\n                },\r\n            );\r\n\r\n        // set cbx text\r\n        let cbx = 'Đang diễn ra';\r\n        if (\r\n            school_year.start_day <= curr_date &&\r\n            (curr_date <= school_year.end_day || school_year.end_day.toISOString() == '2003-10-18T00:00:00.000Z')\r\n        ) {\r\n            cbx = 'Đang diễn ra';\r\n        } else if (school_year.start_day > curr_date) {\r\n            cbx = 'Sắp diễn ra';\r\n        } else if (curr_date > school_year.end_day) {\r\n            cbx = 'Đã kết thúc';\r\n        }\r\n\r\n        // check if end day is forever or not\r\n        if (school_year.end_day.toISOString() == '2003-10-18T00:00:00.000Z') {\r\n            school_year.end_day = undefined;\r\n        }\r\n\r\n        return res.render('doankhoa-time', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n            thongbao: 'global-notifications',\r\n            menu: 'doankhoa-menu',\r\n\r\n            school_year: school_year,\r\n            cbx: cbx,\r\n        });\r\n    });\r\n\r\n    // chi tiet hoat dong ------------------------------------------------------------------------------------------\r\n    // school\r\n    router.get('/quanlihoatdong/:level/:id', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n        try {\r\n            if (user.pow[3]) {\r\n                // get id by req.params.id\r\n                // identify current activity of school activities\r\n                let curr_act;\r\n                switch (req.params.level) {\r\n                    case 'Truong':\r\n                        curr_act = await client.db(name_global_databases).collection('activities').findOne({\r\n                            _id: req.params.id,\r\n                        });\r\n                        break;\r\n                    case 'Khoa':\r\n                        curr_act = await client.db(user.dep).collection('activities').findOne({\r\n                            _id: req.params.id,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        curr_act = await client\r\n                            .db(user.dep)\r\n                            .collection(req.params.level + '_activities')\r\n                            .findOne({\r\n                                _id: req.params.id,\r\n                            });\r\n                        break;\r\n                }\r\n                // get all students information joined current activity\r\n                let students_data = [];\r\n                let bonus_true;\r\n                let all_true = true; // check does all student is yes or not\r\n                if (curr_act.student_list) {\r\n                    for (const [key, value] of Object.entries(curr_act.student_list)) {\r\n                        const data = await client\r\n                            .db(name_global_databases)\r\n                            .collection('user_info')\r\n                            .findOne(\r\n                                { _id: key },\r\n                                {\r\n                                    projection: {\r\n                                        displayName: 1,\r\n                                        class: 1,\r\n                                    },\r\n                                },\r\n                            );\r\n                        if (data) {\r\n                            students_data.push(data);\r\n                        } else {\r\n                            students_data.push({ _id: 'none', displayName: 'none', class: ['none'] });\r\n                        }\r\n\r\n                        if (value == 1) {\r\n                            // have one student not have bonus\r\n                            bonus_true = false;\r\n                        }\r\n\r\n                        if (value == 0) {\r\n                            // have one student not aproval yet\r\n                            all_true = false;\r\n                            bonus_true = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return res.render('doankhoa-activity-assessment', {\r\n                    header: 'global-header',\r\n                    thongbao: 'global-notifications',\r\n                    footer: 'global-footer',\r\n                    menu: 'doankhoa-menu',\r\n                    curr_act: curr_act,\r\n                    students_data: students_data,\r\n                    all_true: all_true,\r\n                    bonus_true: bonus_true,\r\n                    idact: req.params.id,\r\n                });\r\n            } else {\r\n                return res.redirect('/');\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | REVIEWS_ACTIVITY | ERROR | ', err);\r\n            res.sendStatus(500);\r\n        }\r\n    });\r\n    // -------------------------------------------------------------------------------------------\r\n\r\n    return router;\r\n}\r\nmodule.exports = createDepRouter;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAChD,MAAM;EAAEI,qBAAqB;EAAEC;AAAgB,CAAC,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AACjF,MAAM;EAAEM;AAAc,CAAC,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAM;EAAEO;AAAS,CAAC,GAAGP,OAAO,CAAC,SAAS,CAAC;AAEvC,MAAMQ,qBAAqB,GAAGF,aAAa,CAAC,CAAC;AAC7C;AACA,SAASG,eAAeA,CAACC,MAAM,EAAE;EAC7B;EACAT,MAAM,CAACU,GAAG,CAAC,cAAc,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IAClE,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;;IAE7B;IACA,MAAME,OAAO,GAAG,MAAMN,MAAM,CACvBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;MACIC,GAAG,EAAEN,IAAI,CAACM;IACd,CAAC;IAAE;IACH;MACIC,UAAU,EAAE;QACRC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE;MACV;IACJ,CACJ,CAAC,CACAC,OAAO,CAAC,CAAC;;IAEd;IACA,MAAMC,QAAQ,GAAG,MAAMf,MAAM,CACxBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,MAAM,CAAC,CAClBQ,OAAO,CACJ;MACIJ,GAAG,EAAER,IAAI,CAACM;IACd,CAAC;IAAE;IACH;MACIC,UAAU,EAAE;QACRC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE;MACV;IACJ,CACJ,CAAC;IAEL,OAAOV,GAAG,CAACc,MAAM,CAAC,6BAA6B,EAAE;MAC7CC,MAAM,EAAE,eAAe;MACvBC,MAAM,EAAE,eAAe;MACvBC,IAAI,EAAE,eAAe;MACrBC,QAAQ,EAAE,sBAAsB;MAChCX,GAAG,EAAEK,QAAQ,CAACF,IAAI;MAAE;MACpBP,OAAO,EAAEA;IACb,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACAf,MAAM,CAACU,GAAG,CAAC,YAAY,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IAChE,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;;IAE7B;IACA,MAAME,OAAO,GAAG,MAAMN,MAAM,CACvBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;MACIC,GAAG,EAAEN,IAAI,CAACM;IACd,CAAC;IAAE;IACH;MACIC,UAAU,EAAE;QACRE,IAAI,EAAE;MACV;IACJ,CACJ,CAAC,CACAC,OAAO,CAAC,CAAC;IAEd,IAAIQ,gBAAgB;IACpB;IACA,IAAIC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB,IAAIC,cAAc,GAAG,EAAE,CAAC,CAAC;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,OAAO,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAIE,KAAK,GAAG,MAAM3B,MAAM,CACnBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;QACImB,MAAM,EAAEtB,OAAO,CAACmB,CAAC,CAAC,CAACb;MACvB,CAAC;MAAE;MACH;QACID,UAAU,EAAE;UACRkB,IAAI,EAAE;QACV;MACJ,CACJ,CAAC,CACAf,OAAO,CAAC,CAAC;MAEdS,OAAO,CAACjB,OAAO,CAACmB,CAAC,CAAC,CAACb,GAAG,CAAC,GAAGe,KAAK,CAACG,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACnB,GAAG,CAAC;MACrDY,cAAc,CAACQ,IAAI,CAAC,GAAGL,KAAK,CAACG,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACF,IAAI,CAAC,CAAC;;MAEpD;MACAP,gBAAgB,GAAGG,CAAC,GAAG,CAAC;MACxB;MACA,IAAID,cAAc,CAACE,MAAM,IAAI,EAAE,EAAE;QAC7B;MACJ;IACJ;IACA;IACA,MAAMO,QAAQ,GAAG,MAAMjC,MAAM,CACxBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,WAAW,CAAC,CACvBC,IAAI,CACD;MACI,SAAS,EAAE;QAAEyB,OAAO,EAAE;MAAK,CAAC;MAC5B,SAAS,EAAE;QAAEA,OAAO,EAAE;MAAK,CAAC;MAC5BC,GAAG,EAAE,CACD;QAAEP,MAAM,EAAE;UAAEQ,GAAG,EAAE9B,OAAO,CAACwB,GAAG,CAAEF,MAAM,IAAKA,MAAM,CAAChB,GAAG;QAAE;MAAE,CAAC,EACxD;QAAEgB,MAAM,EAAE/B,QAAQ,CAACwC,mBAAmB,CAAC,0BAA0B;MAAE,CAAC;IAE5E,CAAC;IAAE;IACH;MACI1B,UAAU,EAAE;QACR2B,UAAU,EAAE,CAAC;QACbC,SAAS,EAAE;MACf;IACJ,CACJ,CAAC,CACAzB,OAAO,CAAC,CAAC;;IAEd;IACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,cAAc,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C;MACAD,cAAc,CAACC,CAAC,CAAC,GAAG,MAAMzB,MAAM,CAC3BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,WAAW,CAAC,CACvBQ,OAAO,CACJ;QACIJ,GAAG,EAAEY,cAAc,CAACC,CAAC,CAAC;QACtB,SAAS,EAAE;UAAES,OAAO,EAAE;QAAK,CAAC;QAC5B,SAAS,EAAE;UAAEA,OAAO,EAAE;QAAK;MAC/B,CAAC;MAAE;MACH;QACIvB,UAAU,EAAE;UACR2B,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE;QACf;MACJ,CACJ,CAAC;IACT;IAEA,OAAOpC,GAAG,CAACc,MAAM,CAAC,yBAAyB,EAAE;MACzCC,MAAM,EAAE,eAAe;MACvBC,MAAM,EAAE,eAAe;MACvBC,IAAI,EAAE,eAAe;MACrBC,QAAQ,EAAE,sBAAsB;MAChCN,QAAQ,EAAEX,IAAI,CAACM,GAAG;MAClBJ,OAAO,EAAEA,OAAO;MAChBiB,OAAO,EAAEA,OAAO;MAChBU,QAAQ,EAAEA,QAAQ,CAACH,GAAG,CAAEU,OAAO,IAAKA,OAAO,CAACD,SAAS,GAAG,GAAG,GAAGC,OAAO,CAACF,UAAU,CAAC;MACjFG,WAAW,EAAER,QAAQ,CAACH,GAAG,CAAEU,OAAO,IAAKA,OAAO,CAAC5B,GAAG,CAAC;MACnDY,cAAc,EAAEA,cAAc;MAC9BF,gBAAgB,EAAEA;IACtB,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACA/B,MAAM,CAACU,GAAG,CAAC,mBAAmB,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IACvE,IAAI;MACA,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;MAE7B,MAAMsC,WAAW,GAAG,MAAM1C,MAAM,CAC3BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,aAAa,CAAC,CACzBQ,OAAO,CAAC,CAAC,CAAC,EAAE;QAAEL,UAAU,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAE+B,IAAI,EAAE;QAAE;MAAE,CAAC,CAAC;MACrD;MACA,IAAIvC,IAAI,CAACwC,GAAG,CAAC,CAAC,CAAC,EAAE;QACb;QACA,IAAIC,WAAW,GAAG,MAAM7C,MAAM,CACzBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CAAC;UAAEC,GAAG,EAAEN,IAAI,CAACM;QAAI,CAAC,EAAE;UAAEC,UAAU,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEC,IAAI,EAAE;UAAE;QAAE,CAAC,CAAC,CAC5DC,OAAO,CAAC,CAAC;QAEd,MAAMgC,SAAS,GAAG,MAAM9C,MAAM,CACzBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;UAAEmB,MAAM,EAAE;YAAEQ,GAAG,EAAES,WAAW,CAACf,GAAG,CAAEF,MAAM,IAAKA,MAAM,CAAChB,GAAG;UAAE;QAAE,CAAC,EAC5D;UAAED,UAAU,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEgB,MAAM,EAAE;UAAE;QAAE,CACxC,CAAC,CACAd,OAAO,CAAC,CAAC;QAEd,MAAMiC,KAAK,GAAG,MAAM/C,MAAM,CACrBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBQ,OAAO,CAAC;UAAEJ,GAAG,EAAEkC,SAAS,CAAC,CAAC,CAAC,CAAClC;QAAI,CAAC,EAAE;UAAED,UAAU,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEmC,KAAK,EAAE;UAAE;QAAE,CAAC,CAAC;QAC7EC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB;QACA,IAAIG,YAAY,GAAG,MAAMlD,MAAM,CAC1BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,WAAW,CAAC,CACvBC,IAAI,CACD;UAAE0C,KAAK,EAAEL,SAAS,CAAC,CAAC,CAAC,CAAClC,GAAG;UAAE,SAAS,EAAE;YAAEsB,OAAO,EAAE;UAAK;QAAE,CAAC,EACzD;UACIvB,UAAU,EAAE;YACR2B,UAAU,EAAE,CAAC;YACbC,SAAS,EAAE,CAAC;YACZa,WAAW,EAAE;UACjB;QACJ,CACJ,CAAC,CACAtC,OAAO,CAAC,CAAC;QAEdoC,YAAY,GAAGvD,eAAe,CAACuD,YAAY,CAAC;QAC5CF,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,SAAS,CAAC,CAAC,CAAC,CAAClC,GAAG,CAAC;QACrC;QACA,IAAIK,MAAM,GAAG;UACTC,MAAM,EAAE,eAAe;UACvBC,MAAM,EAAE,eAAe;UACvBE,QAAQ,EAAE,sBAAsB;UAChCD,IAAI,EAAE,eAAe;UACrBiC,UAAU,EAAE,EAAE;UACdH,YAAY,EAAEA,YAAY;UAC1BnB,GAAG,EAAEe,SAAS;UACdC,KAAK,EAAEA,KAAK,CAACA,KAAK;UAClBO,SAAS,EAAEZ,WAAW,CAACC,IAAI;UAC3BY,SAAS,EAAET,SAAS,CAAC,CAAC,CAAC,CAAClC,GAAG;UAC3BgB,MAAM,EAAEiB;QACZ,CAAC;QAED,OAAO1C,GAAG,CAACc,MAAM,CAAC,qBAAqB,EAAEA,MAAM,CAAC;MACpD,CAAC,MAAM;QACH;QACA;QACA,OAAOd,GAAG,CAACqD,QAAQ,CAAC,GAAG,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRT,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEQ,CAAC,CAAC;IACvE;EACJ,CAAC,CAAC;;EAEF;EACAlE,MAAM,CAACU,GAAG,CAAC,WAAW,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IAC/D,IAAI;MACA,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;;MAE7B;MACA,MAAMsD,WAAW,GAAG,MAAM1D,MAAM,CAC3BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;QACIC,GAAG,EAAEN,IAAI,CAACM;MACd,CAAC,EACD;QACIC,UAAU,EAAE;UACRE,IAAI,EAAE;QACV;MACJ,CACJ,CAAC,CACAC,OAAO,CAAC,CAAC;MACd;MACA,MAAMmB,QAAQ,GAAG,MAAMjC,MAAM,CACxBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,WAAW,CAAC,CACvBC,IAAI,CACD;QACI,SAAS,EAAE;UAAEyB,OAAO,EAAE;QAAK,CAAC;QAC5B,SAAS,EAAE;UAAEA,OAAO,EAAE;QAAK,CAAC;QAC5B,WAAW,EAAE;UAAEA,OAAO,EAAE;QAAM,CAAC;QAE/BC,GAAG,EAAE,CACD;UAAEP,MAAM,EAAE;YAAEQ,GAAG,EAAEsB,WAAW,CAAC5B,GAAG,CAAEF,MAAM,IAAKA,MAAM,CAAChB,GAAG;UAAE;QAAE,CAAC,EAC5D;UAAEgB,MAAM,EAAE/B,QAAQ,CAACwC,mBAAmB,CAAC,0BAA0B;QAAE,CAAC;MAE5E,CAAC;MAAE;MACH;QACI1B,UAAU,EAAE;UACR2B,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE,CAAC;UACZY,KAAK,EAAE,CAAC;UACRvB,MAAM,EAAE;QACZ;MACJ,CACJ,CAAC,CACAd,OAAO,CAAC,CAAC;MACd,IAAI+B,WAAW,GAAG,EAAE;MACpB,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,QAAQ,CAACP,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,MAAMG,MAAM,GAAG,MAAM5B,MAAM,CACtBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBQ,OAAO,CACJ;UAAEJ,GAAG,EAAEqB,QAAQ,CAACR,CAAC,CAAC,CAACG;QAAO,CAAC,EAC3B;UACIjB,UAAU,EAAE;YACRC,GAAG,EAAE,CAAC;YACNC,IAAI,EAAE;UACV;QACJ,CACJ,CAAC;QACLgC,WAAW,CAACb,IAAI,CAACJ,MAAM,CAACf,IAAI,CAAC;MACjC;MACA,OAAOV,GAAG,CAACc,MAAM,CAAC,yBAAyB,EAAE;QACzCC,MAAM,EAAE,eAAe;QACvBC,MAAM,EAAE,eAAe;QACvBE,QAAQ,EAAE,sBAAsB;QAChCD,IAAI,EAAE,eAAe;QACrBa,QAAQ,EAAEA,QAAQ;QAClB3B,OAAO,EAAEuC,WAAW;QACpBa,WAAW,EAAEA;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVX,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAEU,GAAG,CAAC;MACtE,OAAOxD,GAAG,CAACyD,UAAU,CAAC,GAAG,CAAC;IAC9B;EACJ,CAAC,CAAC;;EAEF;EACArE,MAAM,CAACU,GAAG,CAAC,qBAAqB,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IACzE,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAE7B,MAAMsC,WAAW,GAAG,MAAM1C,MAAM,CAC3BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,aAAa,CAAC,CACzBQ,OAAO,CAAC,CAAC,CAAC,EAAE;MAAEL,UAAU,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAE+B,IAAI,EAAE;MAAE;IAAE,CAAC,CAAC;IACrD;IACA,IAAIvC,IAAI,CAACwC,GAAG,CAAC,CAAC,CAAC,IAAIxC,IAAI,CAACwC,GAAG,CAAC,EAAE,CAAC,EAAE;MAC7B,IAAIC,WAAW,GAAG,MAAM7C,MAAM,CACzBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CAAC;QAAEC,GAAG,EAAEN,IAAI,CAACM;MAAI,CAAC,EAAE;QAAEC,UAAU,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAE;MAAE,CAAC,CAAC,CAC5DC,OAAO,CAAC,CAAC;MAEd,MAAMgC,SAAS,GAAG,MAAM9C,MAAM,CACzBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;QAAEmB,MAAM,EAAE;UAAEQ,GAAG,EAAES,WAAW,CAACf,GAAG,CAAEF,MAAM,IAAKA,MAAM,CAAChB,GAAG;QAAE;MAAE,CAAC,EAC5D;QAAED,UAAU,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEgB,MAAM,EAAE;QAAE;MAAE,CACxC,CAAC,CACAd,OAAO,CAAC,CAAC;MAEd,MAAMiC,KAAK,GAAG,MAAM/C,MAAM,CACrBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBQ,OAAO,CAAC;QAAEJ,GAAG,EAAEkC,SAAS,CAAC,CAAC,CAAC,CAAClC;MAAI,CAAC,EAAE;QAAED,UAAU,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEmC,KAAK,EAAE;QAAE;MAAE,CAAC,CAAC;;MAE7E;MACA,MAAMc,UAAU,GAAG,MAAM7D,MAAM,CAC1BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,YAAY,CAAC,CACxBC,IAAI,CACD;QACIkC,IAAI,EAAED,WAAW,CAACC;MACtB,CAAC,EACD;QACIhC,UAAU,EAAE;UACRE,IAAI,EAAE,CAAC;UACPiD,OAAO,EAAE,CAAC;UACVnB,IAAI,EAAE,CAAC;UACPoB,UAAU,EAAE;QAChB;MACJ,CACJ,CAAC,CACAC,KAAK,CAAC,EAAE,CAAC,CACTlD,OAAO,CAAC,CAAC;;MAEd;MACA,MAAMmD,OAAO,GAAG,MAAMjE,MAAM,CACvBO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAAC,YAAY,CAAC,CACxBC,IAAI,CACD;QACIkC,IAAI,EAAED,WAAW,CAACC;MACtB,CAAC,EACD;QACIhC,UAAU,EAAE;UACRE,IAAI,EAAE,CAAC;UACPiD,OAAO,EAAE,CAAC;UACVnB,IAAI,EAAE,CAAC;UACPoB,UAAU,EAAE;QAChB;MACJ,CACJ,CAAC,CACAC,KAAK,CAAC,EAAE,CAAC,CACTlD,OAAO,CAAC,CAAC;;MAEd;MACA,MAAMoD,WAAW,GAAG,MAAMlE,MAAM,CAACO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CAACyD,eAAe,CAAC,CAAC,CAACrD,OAAO,CAAC,CAAC;;MAEzE;MACA,MAAMsD,mBAAmB,GAAGF,WAAW,CAACG,MAAM,CAAE7D,UAAU,IAAKA,UAAU,CAACK,IAAI,CAACyD,QAAQ,CAAC,aAAa,CAAC,CAAC;;MAEvG;MACA,MAAMC,QAAQ,GAAG,MAAMH,mBAAmB,CAACtC,GAAG,CAAC,MAAOtB,UAAU,IAAK;QACjE,MAAMmB,KAAK,GAAG,MAAM3B,MAAM,CACrBO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAACA,UAAU,CAACK,IAAI,CAAC,CAC3BJ,IAAI,CACD;UACIkC,IAAI,EAAED,WAAW,CAACC;QACtB,CAAC,EACD;UACIhC,UAAU,EAAE;YACRE,IAAI,EAAE,CAAC;YACPiD,OAAO,EAAE,CAAC;YACV/B,GAAG,EAAE,CAAC;YACNY,IAAI,EAAE,CAAC;YACPoB,UAAU,EAAE;UAChB;QACJ,CACJ,CAAC,CACAC,KAAK,CAAC,EAAE,CAAC,CACTlD,OAAO,CAAC,CAAC;QACd,OAAOa,KAAK;MAChB,CAAC,CAAC;MACF6C,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAChBG,IAAI,CAAEC,OAAO,IAAK;QACf;QACA;QACA,MAAMC,OAAO,GAAG,EAAE,CAACC,MAAM,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC;QACvC,OAAOxE,GAAG,CAACc,MAAM,CAAC,4BAA4B,EAAE;UAC5CC,MAAM,EAAE,eAAe;UACvBC,MAAM,EAAE,eAAe;UACvBE,QAAQ,EAAE,sBAAsB;UAChCD,IAAI,EAAE,eAAe;UACrBW,GAAG,EAAEe,SAAS;UACdC,KAAK,EAAEA,KAAK,CAACA,KAAK;UAClBO,SAAS,EAAEZ,WAAW,CAACC,IAAI;UAC3Bf,MAAM,EAAEiB,WAAW;UACnBgB,UAAU,EAAEA,UAAU;UACtBI,OAAO,EAAEA,OAAO;UAChBW,OAAO,EAAEA;QACb,CAAC,CAAC;MACN,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QACd;QACA/B,OAAO,CAACC,GAAG,CAAC8B,KAAK,CAAC;MACtB,CAAC,CAAC;IACV,CAAC,MAAM;MACH,OAAO5E,GAAG,CAACyD,UAAU,CAAC,GAAG,CAAC;IAC9B;EACJ,CAAC,CAAC;;EAEF;EACArE,MAAM,CAACU,GAAG,CAAC,mBAAmB,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IACvE,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAE7B,IAAIA,IAAI,CAACwC,GAAG,CAAC,CAAC,CAAC,IAAIxC,IAAI,CAACwC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC5B;MACA,MAAMtC,OAAO,GAAG,MAAMN,MAAM,CACvBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;QACIC,GAAG,EAAEN,IAAI,CAACM;MACd,CAAC;MAAE;MACH;QACIC,UAAU,EAAE;UACRC,GAAG,EAAE;QACT;MACJ,CACJ,CAAC,CACAE,OAAO,CAAC,CAAC;;MAEd;MACA,IAAIS,OAAO,GAAG,EAAE,CAAC,CAAC;MAClB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,OAAO,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,IAAIE,KAAK,GAAG,MAAM3B,MAAM,CACnBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,SAAS,CAAC,CACrBC,IAAI,CACD;UACImB,MAAM,EAAEtB,OAAO,CAACmB,CAAC,CAAC,CAACb;QACvB,CAAC;QAAE;QACH;UACID,UAAU,EAAE;YACRC,GAAG,EAAE;UACT;QACJ,CACJ,CAAC,CACAE,OAAO,CAAC,CAAC;QAEdS,OAAO,CAACS,IAAI,CAAC,GAAGL,KAAK,CAACG,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACnB,GAAG,CAAC,CAAC;MAChD;MAEA,OAAOT,GAAG,CAACc,MAAM,CAAC,uBAAuB,EAAE;QACvCC,MAAM,EAAE,eAAe;QACvBC,MAAM,EAAE,eAAe;QACvBE,QAAQ,EAAE,sBAAsB;QAChCD,IAAI,EAAE,eAAe;QACrBG,OAAO,EAAEA;MACb,CAAC,CAAC;IACN,CAAC,MAAM;MACH,OAAOpB,GAAG,CAACqD,QAAQ,CAAC,GAAG,CAAC;IAC5B;EACJ,CAAC,CAAC;;EAEF;EACAjE,MAAM,CAACU,GAAG,CAAC,kBAAkB,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IACtE,IAAI;MACA,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;MAC7B,MAAM4E,IAAI,GAAG9E,GAAG,CAAC+E,KAAK,CAACC,SAAS;MAChC,MAAMnD,GAAG,GAAG7B,GAAG,CAAC+E,KAAK,CAAC9B,KAAK;MAC3B,MAAMgC,eAAe,GAAGjF,GAAG,CAAC+E,KAAK,CAACG,UAAU;MAC5C,MAAMC,iBAAiB,GAAG,MAAMrF,MAAM,CACjCO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAACuB,GAAG,GAAG,YAAY,CAAC,CAC9Bf,OAAO,CACJ;QACIgE,IAAI,EAAEA,IAAI;QACVtC,WAAW,EAAEyC;MACjB,CAAC,EACD;QACIxE,UAAU,EAAE;UACRC,GAAG,EAAE,CAAC;UACN0E,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE;QACb;MACJ,CACJ,CAAC;MAEL,IAAIC,aAAa,GAAG,MAAM7F,MAAM,CAC3BO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAACuB,GAAG,GAAG,YAAY,CAAC,CAC9Bf,OAAO,CACJ;QACIgE,IAAI,EAAEA,IAAI;QACVtC,WAAW,EAAEyC;MACjB,CAAC,EACD;QACIxE,UAAU,EAAE;UACRC,GAAG,EAAE,CAAC;UACN0E,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE;QACX;MACJ,CACJ,CAAC;MAEL,IAAIG,aAAa,GAAG,MAAM9F,MAAM,CAC3BO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAACuB,GAAG,GAAG,YAAY,CAAC,CAC9Bf,OAAO,CACJ;QACIgE,IAAI,EAAEA,IAAI;QACVtC,WAAW,EAAEyC;MACjB,CAAC,EACD;QACIxE,UAAU,EAAE;UACRC,GAAG,EAAE,CAAC;UACN0E,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE;QACX;MACJ,CACJ,CAAC;MACLI,SAAS,GAAG;QACRL,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnBJ,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtBG,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjBF,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAChBG,KAAK,EAAE;MACX,CAAC;MACD,IAAI,CAACE,aAAa,EAAE;QAChBA,aAAa,GAAGE,SAAS;MAC7B;MACA,IAAI,CAACD,aAAa,EAAE;QAChBA,aAAa,GAAGC,SAAS;MAC7B;MACA,IAAIC,QAAQ,GAAG,EAAE;MAEjB,IAAIX,iBAAiB,IAAIA,iBAAiB,CAACO,OAAO,EAAE;QAChD,KAAK,MAAM,CAACK,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACf,iBAAiB,CAACO,OAAO,CAAC,EAAE;UAClE,IAAIK,GAAG,IAAI,QAAQ,EAAE;YACjB,KAAK,MAAMxE,CAAC,IAAIyE,KAAK,EAAE;cACnBF,QAAQ,CAAChE,IAAI,CAAC,MAAMvC,MAAM,CAAC4G,8BAA8B,CAAC5E,CAAC,CAAC,CAAC;YACjE;UACJ,CAAC,MAAM;YACH,IAAI6E,cAAc;YAClBA,cAAc,GAAG,MAAMtG,MAAM,CACxBO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAAE,GAAEuB,GAAI,aAAY,CAAC,CAC/Bf,OAAO,CACJ;cACIJ,GAAG,EAAEqF;YACT,CAAC,EACD;cAAEtF,UAAU,EAAE;gBAAEE,IAAI,EAAE;cAAE;YAAE,CAC9B,CAAC;YACL,IAAI,CAACyF,cAAc,EAAE;cACjBA,cAAc,GAAG,MAAMtG,MAAM,CACxBO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAAC,YAAY,CAAC,CACxBQ,OAAO,CACJ;gBACIJ,GAAG,EAAEqF;cACT,CAAC,EACD;gBAAEtF,UAAU,EAAE;kBAAEE,IAAI,EAAE;gBAAE;cAAE,CAC9B,CAAC;cACL,IAAI,CAACyF,cAAc,EAAE;gBACjBA,cAAc,GAAG,MAAMtG,MAAM,CACxBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,YAAY,CAAC,CACxBQ,OAAO,CACJ;kBACIJ,GAAG,EAAEqF;gBACT,CAAC,EACD;kBAAEtF,UAAU,EAAE;oBAAEE,IAAI,EAAE;kBAAE;gBAAE,CAC9B,CAAC;cACT;YACJ;YACA,KAAK,MAAMY,CAAC,IAAIyE,KAAK,EAAE;cACnB,IAAIK,OAAO,GAAG,MAAM9G,MAAM,CAAC4G,8BAA8B,CAAC5E,CAAC,CAAC;cAC5D,IAAI8E,OAAO,EAAE;gBACTA,OAAO,CAACC,eAAe,GAAGF,cAAc,CAACzF,IAAI,GAAG,GAAG,GAAG0F,OAAO,CAACC,eAAe;gBAC7ER,QAAQ,CAAChE,IAAI,CAACuE,OAAO,CAAC;cAC1B;YACJ;UACJ;QACJ;QACA,OAAOpG,GAAG,CAACc,MAAM,CAAC,wBAAwB,EAAE;UACxCC,MAAM,EAAE,eAAe;UACvBG,QAAQ,EAAE,sBAAsB;UAChCF,MAAM,EAAE,eAAe;UACvBC,IAAI,EAAE,eAAe;UACrBqF,GAAG,EAAET,QAAQ;UAEbU,QAAQ,EAAErB,iBAAiB;UAC3BsB,KAAK,EAAEd,aAAa;UACpBe,MAAM,EAAEd;QACZ,CAAC,CAAC;MACN,CAAC,MAAM;QACH,OAAO3F,GAAG,CAACyD,UAAU,CAAC,GAAG,CAAC;MAC9B;IACJ,CAAC,CAAC,OAAOD,GAAG,EAAE;MACVX,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEU,GAAG,CAAC;MACjE,OAAOxD,GAAG,CAAC0G,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAE/B,KAAK,EAAE;MAAe,CAAC,CAAC;IAC1D;EACJ,CAAC,CAAC;;EAEF;EACAxF,MAAM,CAACU,GAAG,CAAC,UAAU,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IAC9D,MAAM4G,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5B,MAAMtE,WAAW,GAAG,MAAM1C,MAAM,CAC3BO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,aAAa,CAAC,CACzBQ,OAAO,CACJ,CAAC,CAAC,EACF;MACIL,UAAU,EAAE;QAAEgC,IAAI,EAAE,CAAC;QAAEsE,SAAS,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAE;IACpD,CACJ,CAAC;;IAEL;IACA,IAAIC,GAAG,GAAG,cAAc;IACxB,IACIzE,WAAW,CAACuE,SAAS,IAAIF,SAAS,KACjCA,SAAS,IAAIrE,WAAW,CAACwE,OAAO,IAAIxE,WAAW,CAACwE,OAAO,CAACE,WAAW,CAAC,CAAC,IAAI,0BAA0B,CAAC,EACvG;MACED,GAAG,GAAG,cAAc;IACxB,CAAC,MAAM,IAAIzE,WAAW,CAACuE,SAAS,GAAGF,SAAS,EAAE;MAC1CI,GAAG,GAAG,aAAa;IACvB,CAAC,MAAM,IAAIJ,SAAS,GAAGrE,WAAW,CAACwE,OAAO,EAAE;MACxCC,GAAG,GAAG,aAAa;IACvB;;IAEA;IACA,IAAIzE,WAAW,CAACwE,OAAO,CAACE,WAAW,CAAC,CAAC,IAAI,0BAA0B,EAAE;MACjE1E,WAAW,CAACwE,OAAO,GAAGG,SAAS;IACnC;IAEA,OAAOlH,GAAG,CAACc,MAAM,CAAC,eAAe,EAAE;MAC/BC,MAAM,EAAE,eAAe;MACvBC,MAAM,EAAE,eAAe;MACvBE,QAAQ,EAAE,sBAAsB;MAChCD,IAAI,EAAE,eAAe;MAErBsB,WAAW,EAAEA,WAAW;MACxByE,GAAG,EAAEA;IACT,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACA;EACA5H,MAAM,CAACU,GAAG,CAAC,4BAA4B,EAAEP,qBAAqB,EAAE,OAAOQ,GAAG,EAAEC,GAAG,KAAK;IAChF,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;IAC7B,IAAI;MACA,IAAIA,IAAI,CAACwC,GAAG,CAAC,CAAC,CAAC,EAAE;QACb;QACA;QACA,IAAI0E,QAAQ;QACZ,QAAQpH,GAAG,CAACqH,MAAM,CAACC,KAAK;UACpB,KAAK,QAAQ;YACTF,QAAQ,GAAG,MAAMtH,MAAM,CAACO,EAAE,CAACT,qBAAqB,CAAC,CAACU,UAAU,CAAC,YAAY,CAAC,CAACQ,OAAO,CAAC;cAC/EJ,GAAG,EAAEV,GAAG,CAACqH,MAAM,CAACE;YACpB,CAAC,CAAC;YACF;UACJ,KAAK,MAAM;YACPH,QAAQ,GAAG,MAAMtH,MAAM,CAACO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CAACF,UAAU,CAAC,YAAY,CAAC,CAACQ,OAAO,CAAC;cAClEJ,GAAG,EAAEV,GAAG,CAACqH,MAAM,CAACE;YACpB,CAAC,CAAC;YACF;UACJ;YACIH,QAAQ,GAAG,MAAMtH,MAAM,CAClBO,EAAE,CAACH,IAAI,CAACM,GAAG,CAAC,CACZF,UAAU,CAACN,GAAG,CAACqH,MAAM,CAACC,KAAK,GAAG,aAAa,CAAC,CAC5CxG,OAAO,CAAC;cACLJ,GAAG,EAAEV,GAAG,CAACqH,MAAM,CAACE;YACpB,CAAC,CAAC;YACN;QACR;QACA;QACA,IAAIC,aAAa,GAAG,EAAE;QACtB,IAAIC,UAAU;QACd,IAAIC,QAAQ,GAAG,IAAI,CAAC,CAAC;QACrB,IAAIN,QAAQ,CAACpE,YAAY,EAAE;UACvB,KAAK,MAAM,CAAC+C,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACkB,QAAQ,CAACpE,YAAY,CAAC,EAAE;YAC9D,MAAM2E,IAAI,GAAG,MAAM7H,MAAM,CACpBO,EAAE,CAACT,qBAAqB,CAAC,CACzBU,UAAU,CAAC,WAAW,CAAC,CACvBQ,OAAO,CACJ;cAAEJ,GAAG,EAAEqF;YAAI,CAAC,EACZ;cACItF,UAAU,EAAE;gBACRmH,WAAW,EAAE,CAAC;gBACd3E,KAAK,EAAE;cACX;YACJ,CACJ,CAAC;YACL,IAAI0E,IAAI,EAAE;cACNH,aAAa,CAAC1F,IAAI,CAAC6F,IAAI,CAAC;YAC5B,CAAC,MAAM;cACHH,aAAa,CAAC1F,IAAI,CAAC;gBAAEpB,GAAG,EAAE,MAAM;gBAAEkH,WAAW,EAAE,MAAM;gBAAE3E,KAAK,EAAE,CAAC,MAAM;cAAE,CAAC,CAAC;YAC7E;YAEA,IAAI+C,KAAK,IAAI,CAAC,EAAE;cACZ;cACAyB,UAAU,GAAG,KAAK;YACtB;YAEA,IAAIzB,KAAK,IAAI,CAAC,EAAE;cACZ;cACA0B,QAAQ,GAAG,KAAK;cAChBD,UAAU,GAAG,KAAK;YACtB;UACJ;QACJ;QAEA,OAAOxH,GAAG,CAACc,MAAM,CAAC,8BAA8B,EAAE;UAC9CC,MAAM,EAAE,eAAe;UACvBG,QAAQ,EAAE,sBAAsB;UAChCF,MAAM,EAAE,eAAe;UACvBC,IAAI,EAAE,eAAe;UACrBkG,QAAQ,EAAEA,QAAQ;UAClBI,aAAa,EAAEA,aAAa;UAC5BE,QAAQ,EAAEA,QAAQ;UAClBD,UAAU,EAAEA,UAAU;UACtBI,KAAK,EAAE7H,GAAG,CAACqH,MAAM,CAACE;QACtB,CAAC,CAAC;MACN,CAAC,MAAM;QACH,OAAOtH,GAAG,CAACqD,QAAQ,CAAC,GAAG,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVX,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEU,GAAG,CAAC;MACxDxD,GAAG,CAACyD,UAAU,CAAC,GAAG,CAAC;IACvB;EACJ,CAAC,CAAC;EACF;;EAEA,OAAOrE,MAAM;AACjB;AACAyI,MAAM,CAACC,OAAO,GAAGlI,eAAe","ignoreList":[]}},"mtime":1719476170726},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\staffRouters.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst server = require('../lib/csdl_google_lib');\nconst {\n  checkIfUserLoginRoute,\n  sortStudentName\n} = require('../lib/function_lib');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nfunction createStaffRouter(client) {\n  // ban can su nhap diem route\n  router.get('/nhapdiemdanhgia', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const mssv = req.query.studentId;\n      const schoolYearParam = req.query.schoolYear;\n      let studentTotalScore = await client.db(user.dep).collection(user.cls[0] + '_std_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          img_ids: 1\n        }\n      });\n      let stfTotalScore = await client.db(user.dep).collection(user.cls[0] + '_stf_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          img_ids: 1\n        }\n      });\n      let depTotalScore = await client.db(user.dep).collection(user.cls[0] + '_dep_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          limg_ids: 1\n        }\n      });\n      nulltable = {\n        fifth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        first: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        fourth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        second: ['Chưa chấm', 'Chưa chấm'],\n        third: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        total: 'Chưa chấm'\n      };\n      if (!stfTotalScore) {\n        stfTotalScore = nulltable;\n      }\n      if (!depTotalScore) {\n        depTotalScore = nulltable;\n      }\n      let link_img = [];\n      let std_act_img = {};\n      let stf_act_img = {};\n      let dep_act_img = {};\n      if (studentTotalScore) {\n        for (const [key, value] of Object.entries(studentTotalScore.img_ids)) {\n          if (key == 'global') {\n            for (const i of value) {\n              link_img.push(await server.getDriveFileLinkAndDescription(i));\n            }\n          } else {\n            let activitie_info;\n            activitie_info = await client.db(user.dep).collection(`${user.cls[0]}_activities`).findOne({\n              _id: key\n            }, {\n              projection: {\n                name: 1\n              }\n            });\n            if (activitie_info) {\n              for (const i of value) {\n                let imginfo = await server.getDriveFileLinkAndDescription(i);\n                if (std_act_img[activitie_info.name] && imginfo) {\n                  std_act_img[activitie_info.name].push(imginfo);\n                } else if (imginfo) {\n                  std_act_img[activitie_info.name] = [imginfo];\n                }\n              }\n            } else {\n              activitie_info = await client.db(user.dep).collection('activities').findOne({\n                _id: key\n              }, {\n                projection: {\n                  name: 1\n                }\n              });\n              if (activitie_info) {\n                for (const i of value) {\n                  let imginfo = await server.getDriveFileLinkAndDescription(i);\n                  if (stf_act_img[activitie_info.name] && imginfo) {\n                    stf_act_img[activitie_info.name].push(imginfo);\n                  } else if (imginfo) {\n                    stf_act_img[activitie_info.name] = [imginfo];\n                  }\n                }\n              } else {\n                activitie_info = await client.db(name_global_databases).collection('activities').findOne({\n                  _id: key\n                }, {\n                  projection: {\n                    name: 1\n                  }\n                });\n                if (activitie_info) {\n                  for (const i of value) {\n                    let imginfo = await server.getDriveFileLinkAndDescription(i);\n                    if (dep_act_img[activitie_info.name] && imginfo) {\n                      dep_act_img[activitie_info.name].push(imginfo);\n                    } else if (imginfo) {\n                      dep_act_img[activitie_info.name] = [imginfo];\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        return res.render('bancansu-manage-grades', {\n          header: 'global-header',\n          thongbao: 'global-notifications',\n          footer: 'global-footer',\n          Scorestd: studentTotalScore,\n          Score: stfTotalScore,\n          Scorek: depTotalScore,\n          link_img: link_img,\n          std_act_img: std_act_img,\n          stf_act_img: stf_act_img,\n          dep_act_img: dep_act_img\n        });\n      } else {\n        return res.sendStatus(404);\n      }\n    } catch (err) {\n      console.log('SYSTEM | BAN_CAN_SU_NHAP_DIEM_ROUTE | ERROR | ', err);\n      return res.status(500).json({\n        error: 'Lỗi hệ thống'\n      });\n    }\n  });\n  router.get('/quanlihoatdong', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n      projection: {\n        _id: 0,\n        year: 1\n      }\n    });\n    // check user login:\n    if (user.pow[3]) {\n      let branch_list = await client.db(name_global_databases).collection('branchs').find({\n        dep: user.dep\n      }, {\n        projection: {\n          _id: 1,\n          name: 1\n        }\n      }).toArray();\n      const classlist = await client.db(name_global_databases).collection('classes').find({\n        branch: {\n          $in: branch_list.map(branch => branch._id)\n        }\n      }, {\n        projection: {\n          _id: 1,\n          branch: 1\n        }\n      }).toArray();\n      const years = await client.db(name_global_databases).collection('classes').findOne({\n        _id: classlist[0]._id\n      }, {\n        projection: {\n          _id: 0,\n          years: 1\n        }\n      });\n\n      // get all activities of school\n      const school_atv = await client.db(name_global_databases).collection('activities').find({\n        year: school_year.year\n      }, {\n        projection: {\n          name: 1,\n          content: 1,\n          year: 1,\n          start_time: 1\n        }\n      }).limit(10).toArray();\n\n      // get all activities of dep\n      const dep_atv = await client.db(user.dep).collection('activities').find({\n        year: school_year.year\n      }, {\n        projection: {\n          name: 1,\n          content: 1,\n          year: 1,\n          start_time: 1\n        }\n      }).limit(10).toArray();\n\n      // get all activities of class of department\n      const collections = await client.db(user.dep).listCollections().toArray();\n\n      // Filter collections ending with '_activities'\n      const activityCollections = collections.filter(collection => collection.name.endsWith('_activities'));\n\n      // Loop through activity collections and retrieve all documents\n      const cls_atvs = await activityCollections.map(async collection => {\n        const dummy = await client.db(user.dep).collection(collection.name).find({\n          year: school_year.year,\n          cls: user.cls[0]\n        }, {\n          projection: {\n            name: 1,\n            content: 1,\n            cls: 1,\n            year: 1,\n            start_time: 1\n          }\n        }).limit(10).toArray();\n        return dummy;\n      });\n      Promise.all(cls_atvs).then(results => {\n        // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\n        // Bạn có thể làm gì đó với kết quả ở đây.\n\n        const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\n\n        return res.render('bancansu-manage-activities', {\n          header: 'global-header',\n          footer: 'global-footer',\n          thongbao: 'global-notifications',\n          cls: classlist,\n          years: years.years,\n          curr_year: school_year.year,\n          branch: branch_list,\n          school_atv: school_atv,\n          dep_atv: dep_atv,\n          cls_atv: cls_atv\n        });\n      }).catch(error => {\n        // Xử lý lỗi nếu có\n        console.log(error);\n      });\n    } else {\n      return res.sendStatus(403);\n    }\n  });\n\n  // danh gia hoat dong\n  router.get('/quanlihoatdong/danhgiahoatdong', checkIfUserLoginRoute, async (req, res) => {\n    return res.render('bancansu-activity-assessment', {\n      header: 'global-header',\n      footer: 'global-footer'\n    });\n  });\n\n  // danh sach bang diem\n  router.get('/danhsachbangdiem', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n      const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n        projection: {\n          _id: 0,\n          year: 1\n        }\n      });\n      // check user login:\n      if (user.pow[1]) {\n        const years = await client.db(name_global_databases).collection('classes').findOne({\n          _id: user.cls[0]\n        }, {\n          projection: {\n            _id: 0,\n            years: 1\n          }\n        });\n        // get all student in staff member class:\n        const student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n          class: user.cls[0],\n          'power.0': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            first_name: 1,\n            last_name: 1,\n            total_score: 1\n          }\n        }).toArray());\n        // get all student total score from themself:\n        let render = {\n          header: 'global-header',\n          footer: 'global-footer',\n          thongbao: 'global-notifications',\n          student_list: student_list,\n          cls: user.cls,\n          years: years.years,\n          curr_year: school_year.year\n        };\n        return res.render('bancansu-grade-list', render);\n      } else {\n        // user not staff members\n        // redirect to home\n        return res.redirect('/');\n      }\n    } catch (e) {\n      console.log('SYSTEM | BAN_CAN_SU_DANH_SACH_BANG_DIEM | ERROR | ', e);\n    }\n  });\n  return router;\n}\nmodule.exports = createStaffRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","server","checkIfUserLoginRoute","sortStudentName","getNameGlobal","name_global_databases","createStaffRouter","client","get","req","res","user","session","mssv","query","studentId","schoolYearParam","schoolYear","studentTotalScore","db","dep","collection","cls","findOne","school_year","projection","_id","first","second","third","fourth","fifth","total","img_ids","stfTotalScore","depTotalScore","limg_ids","nulltable","link_img","std_act_img","stf_act_img","dep_act_img","key","value","Object","entries","i","push","getDriveFileLinkAndDescription","activitie_info","name","imginfo","render","header","thongbao","footer","Scorestd","Score","Scorek","sendStatus","err","console","log","status","json","error","year","pow","branch_list","find","toArray","classlist","branch","$in","map","years","school_atv","content","start_time","limit","dep_atv","collections","listCollections","activityCollections","filter","endsWith","cls_atvs","dummy","Promise","all","then","results","cls_atv","concat","curr_year","catch","student_list","class","$exists","first_name","last_name","total_score","redirect","e","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["staffRouters.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst server = require('../lib/csdl_google_lib');\r\nconst { checkIfUserLoginRoute, sortStudentName } = require('../lib/function_lib');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nfunction createStaffRouter(client) {\r\n    // ban can su nhap diem route\r\n    router.get('/nhapdiemdanhgia', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const mssv = req.query.studentId;\r\n            const schoolYearParam = req.query.schoolYear;\r\n\r\n            let studentTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(user.cls[0] + '_std_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            img_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n\r\n            let stfTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(user.cls[0] + '_stf_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            img_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n\r\n            let depTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(user.cls[0] + '_dep_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            limg_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n\r\n            nulltable = {\r\n                fifth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                first: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                fourth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                second: ['Chưa chấm', 'Chưa chấm'],\r\n                third: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                total: 'Chưa chấm',\r\n            };\r\n\r\n            if (!stfTotalScore) {\r\n                stfTotalScore = nulltable;\r\n            }\r\n            if (!depTotalScore) {\r\n                depTotalScore = nulltable;\r\n            }\r\n            let link_img = [];\r\n            let std_act_img = {};\r\n            let stf_act_img = {};\r\n            let dep_act_img = {};\r\n\r\n            if (studentTotalScore) {\r\n                for (const [key, value] of Object.entries(studentTotalScore.img_ids)) {\r\n                    if (key == 'global') {\r\n                        for (const i of value) {\r\n                            link_img.push(await server.getDriveFileLinkAndDescription(i));\r\n                        }\r\n                    } else {\r\n                        let activitie_info;\r\n                        activitie_info = await client\r\n                            .db(user.dep)\r\n                            .collection(`${user.cls[0]}_activities`)\r\n                            .findOne(\r\n                                {\r\n                                    _id: key,\r\n                                },\r\n                                { projection: { name: 1 } },\r\n                            );\r\n                        if (activitie_info) {\r\n                            for (const i of value) {\r\n                                let imginfo = await server.getDriveFileLinkAndDescription(i);\r\n                                if (std_act_img[activitie_info.name] && imginfo) {\r\n                                    std_act_img[activitie_info.name].push(imginfo);\r\n                                } else if (imginfo) {\r\n                                    std_act_img[activitie_info.name] = [imginfo];\r\n                                }\r\n                            }\r\n                        } else {\r\n                            activitie_info = await client\r\n                                .db(user.dep)\r\n                                .collection('activities')\r\n                                .findOne(\r\n                                    {\r\n                                        _id: key,\r\n                                    },\r\n                                    { projection: { name: 1 } },\r\n                                );\r\n\r\n                            if (activitie_info) {\r\n                                for (const i of value) {\r\n                                    let imginfo = await server.getDriveFileLinkAndDescription(i);\r\n                                    if (stf_act_img[activitie_info.name] && imginfo) {\r\n                                        stf_act_img[activitie_info.name].push(imginfo);\r\n                                    } else if (imginfo) {\r\n                                        stf_act_img[activitie_info.name] = [imginfo];\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                activitie_info = await client\r\n                                    .db(name_global_databases)\r\n                                    .collection('activities')\r\n                                    .findOne(\r\n                                        {\r\n                                            _id: key,\r\n                                        },\r\n                                        { projection: { name: 1 } },\r\n                                    );\r\n\r\n                                if (activitie_info) {\r\n                                    for (const i of value) {\r\n                                        let imginfo = await server.getDriveFileLinkAndDescription(i);\r\n                                        if (dep_act_img[activitie_info.name] && imginfo) {\r\n                                            dep_act_img[activitie_info.name].push(imginfo);\r\n                                        } else if (imginfo) {\r\n                                            dep_act_img[activitie_info.name] = [imginfo];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return res.render('bancansu-manage-grades', {\r\n                    header: 'global-header',\r\n                    thongbao: 'global-notifications',\r\n                    footer: 'global-footer',\r\n                    Scorestd: studentTotalScore,\r\n                    Score: stfTotalScore,\r\n                    Scorek: depTotalScore,\r\n                    link_img: link_img,\r\n                    std_act_img: std_act_img,\r\n                    stf_act_img: stf_act_img,\r\n                    dep_act_img: dep_act_img,\r\n                });\r\n            } else {\r\n                return res.sendStatus(404);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | BAN_CAN_SU_NHAP_DIEM_ROUTE | ERROR | ', err);\r\n            return res.status(500).json({ error: 'Lỗi hệ thống' });\r\n        }\r\n    });\r\n\r\n    router.get('/quanlihoatdong', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        const school_year = await client\r\n            .db(name_global_databases)\r\n            .collection('school_year')\r\n            .findOne({}, { projection: { _id: 0, year: 1 } });\r\n        // check user login:\r\n        if (user.pow[3]) {\r\n            let branch_list = await client\r\n                .db(name_global_databases)\r\n                .collection('branchs')\r\n                .find({ dep: user.dep }, { projection: { _id: 1, name: 1 } })\r\n                .toArray();\r\n\r\n            const classlist = await client\r\n                .db(name_global_databases)\r\n                .collection('classes')\r\n                .find(\r\n                    { branch: { $in: branch_list.map((branch) => branch._id) } },\r\n                    { projection: { _id: 1, branch: 1 } },\r\n                )\r\n                .toArray();\r\n\r\n            const years = await client\r\n                .db(name_global_databases)\r\n                .collection('classes')\r\n                .findOne({ _id: classlist[0]._id }, { projection: { _id: 0, years: 1 } });\r\n\r\n            // get all activities of school\r\n            const school_atv = await client\r\n                .db(name_global_databases)\r\n                .collection('activities')\r\n                .find(\r\n                    {\r\n                        year: school_year.year,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            name: 1,\r\n                            content: 1,\r\n                            year: 1,\r\n                            start_time: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .limit(10)\r\n                .toArray();\r\n\r\n            // get all activities of dep\r\n            const dep_atv = await client\r\n                .db(user.dep)\r\n                .collection('activities')\r\n                .find(\r\n                    {\r\n                        year: school_year.year,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            name: 1,\r\n                            content: 1,\r\n                            year: 1,\r\n                            start_time: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .limit(10)\r\n                .toArray();\r\n\r\n            // get all activities of class of department\r\n            const collections = await client.db(user.dep).listCollections().toArray();\r\n\r\n            // Filter collections ending with '_activities'\r\n            const activityCollections = collections.filter((collection) => collection.name.endsWith('_activities'));\r\n\r\n            // Loop through activity collections and retrieve all documents\r\n            const cls_atvs = await activityCollections.map(async (collection) => {\r\n                const dummy = await client\r\n                    .db(user.dep)\r\n                    .collection(collection.name)\r\n                    .find(\r\n                        {\r\n                            year: school_year.year,\r\n                            cls: user.cls[0],\r\n                        },\r\n                        {\r\n                            projection: {\r\n                                name: 1,\r\n                                content: 1,\r\n                                cls: 1,\r\n                                year: 1,\r\n                                start_time: 1,\r\n                            },\r\n                        },\r\n                    )\r\n                    .limit(10)\r\n                    .toArray();\r\n                return dummy;\r\n            });\r\n            Promise.all(cls_atvs)\r\n                .then((results) => {\r\n                    // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\r\n                    // Bạn có thể làm gì đó với kết quả ở đây.\r\n\r\n                    const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\r\n\r\n                    return res.render('bancansu-manage-activities', {\r\n                        header: 'global-header',\r\n                        footer: 'global-footer',\r\n                        thongbao: 'global-notifications',\r\n                        cls: classlist,\r\n                        years: years.years,\r\n                        curr_year: school_year.year,\r\n                        branch: branch_list,\r\n                        school_atv: school_atv,\r\n                        dep_atv: dep_atv,\r\n                        cls_atv: cls_atv,\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    // Xử lý lỗi nếu có\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            return res.sendStatus(403);\r\n        }\r\n    });\r\n\r\n    // danh gia hoat dong\r\n    router.get('/quanlihoatdong/danhgiahoatdong', checkIfUserLoginRoute, async (req, res) => {\r\n        return res.render('bancansu-activity-assessment', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n        });\r\n    });\r\n\r\n    // danh sach bang diem\r\n    router.get('/danhsachbangdiem', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            const school_year = await client\r\n                .db(name_global_databases)\r\n                .collection('school_year')\r\n                .findOne({}, { projection: { _id: 0, year: 1 } });\r\n            // check user login:\r\n            if (user.pow[1]) {\r\n                const years = await client\r\n                    .db(name_global_databases)\r\n                    .collection('classes')\r\n                    .findOne({ _id: user.cls[0] }, { projection: { _id: 0, years: 1 } });\r\n                // get all student in staff member class:\r\n                const student_list = sortStudentName(\r\n                    await client\r\n                        .db(name_global_databases)\r\n                        .collection('user_info')\r\n                        .find(\r\n                            { class: user.cls[0], 'power.0': { $exists: true } },\r\n                            { projection: { first_name: 1, last_name: 1, total_score: 1 } },\r\n                        )\r\n                        .toArray(),\r\n                );\r\n                // get all student total score from themself:\r\n                let render = {\r\n                    header: 'global-header',\r\n                    footer: 'global-footer',\r\n                    thongbao: 'global-notifications',\r\n                    student_list: student_list,\r\n                    cls: user.cls,\r\n                    years: years.years,\r\n                    curr_year: school_year.year,\r\n                };\r\n\r\n                return res.render('bancansu-grade-list', render);\r\n            } else {\r\n                // user not staff members\r\n                // redirect to home\r\n                return res.redirect('/');\r\n            }\r\n        } catch (e) {\r\n            console.log('SYSTEM | BAN_CAN_SU_DANH_SACH_BANG_DIEM | ERROR | ', e);\r\n        }\r\n    });\r\n\r\n    return router;\r\n}\r\nmodule.exports = createStaffRouter;\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1705997672445},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\teacherRoutes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst server = require('../lib/csdl_google_lib');\nconst {\n  checkIfUserLoginRoute,\n  sortStudentName\n} = require('../lib/function_lib');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nfunction createTeacherRouter(client) {\n  // giao vien route\n  router.get('/quanlyquyen', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    return res.render('teacher-manage-student', {\n      header: 'global-header',\n      footer: 'global-footer',\n      thongbao: 'global-notifications',\n      cls: user.cls\n    });\n  });\n  // danh sach bang diem co van\n  router.get('/danhsachbangdiem', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n      // check neu kho co lop\n      const check = await client.db(name_global_databases).collection('user_info').find({\n        class: user.cls[0],\n        'power.0': {\n          $exists: true\n        }\n      }, {\n        projection: {\n          first_name: 1,\n          last_name: 1,\n          class: 1,\n          total_score: 1\n        }\n      }).toArray();\n      //\n\n      if (check.length > 0) {\n        const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n          projection: {\n            _id: 0,\n            year: 1\n          }\n        });\n        // check user login:\n        if (user.pow[1]) {\n          const Years = await client.db(name_global_databases).collection('classes').findOne({\n            _id: user.cls[0]\n          }, {\n            projection: {\n              _id: 0,\n              years: 1\n            }\n          });\n\n          // get all student in staff member class:\n          const student_list = sortStudentName(await client.db(name_global_databases).collection('user_info').find({\n            class: user.cls[0],\n            'power.0': {\n              $exists: true\n            }\n          }, {\n            projection: {\n              first_name: 1,\n              last_name: 1,\n              class: 1,\n              total_score: 1\n            }\n          }).toArray());\n          // get all student total score from themself:\n          let render = {\n            header: 'global-header',\n            footer: 'global-footer',\n            thongbao: 'global-notifications',\n            student_list: student_list,\n            cls: user.cls,\n            years: Years.years,\n            curr_year: school_year.year\n          };\n          return res.render('teacher-grade-list', render);\n        } else {\n          // user not staff members\n          // redirect to home\n          return res.redirect('/');\n        }\n      }\n    } catch (e) {\n      console.log('SYSTEM | BAN_CAN_SU_DANH_SACH_BANG_DIEM | ERROR | ', e);\n    }\n  });\n  // quang ly hoat dong\n  router.get('/quanlihoatdong', checkIfUserLoginRoute, async (req, res) => {\n    const user = req.session.user;\n    const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n      projection: {\n        _id: 0,\n        year: 1\n      }\n    });\n\n    // check user login:\n\n    let branch_list = await client.db(name_global_databases).collection('branchs').find({\n      dep: user.dep\n    }, {\n      projection: {\n        _id: 1,\n        name: 1\n      }\n    }).toArray();\n    const classlist = await client.db(name_global_databases).collection('classes').find({\n      branch: {\n        $in: branch_list.map(branch => branch._id)\n      }\n    }, {\n      projection: {\n        _id: 1,\n        branch: 1\n      }\n    }).toArray();\n    const years = await client.db(name_global_databases).collection('classes').findOne({\n      _id: classlist[0]._id\n    }, {\n      projection: {\n        _id: 0,\n        years: 1\n      }\n    });\n\n    // get all activities of school\n    const school_atv = await client.db(name_global_databases).collection('activities').find({\n      year: school_year.year\n    }, {\n      projection: {\n        name: 1,\n        content: 1,\n        year: 1,\n        start_time: 1\n      }\n    }).limit(10).toArray();\n\n    // get all activities of dep\n    const dep_atv = await client.db(user.dep).collection('activities').find({\n      year: school_year.year\n    }, {\n      projection: {\n        name: 1,\n        content: 1,\n        year: 1,\n        start_time: 1\n      }\n    }).limit(10).toArray();\n\n    // get all activities of class of department\n    const collections = await client.db(user.dep).listCollections().toArray();\n\n    // Filter collections ending with '_activities'\n    const activityCollections = collections.filter(collection => collection.name.endsWith('_activities'));\n\n    // Loop through activity collections and retrieve all documents\n    const cls_atvs = await activityCollections.map(async collection => {\n      const dummy = await client.db(user.dep).collection(collection.name).find({\n        year: school_year.year\n      }, {\n        projection: {\n          name: 1,\n          content: 1,\n          cls: 1,\n          year: 1,\n          start_time: 1\n        }\n      }).limit(10).toArray();\n      return dummy;\n    });\n    Promise.all(cls_atvs).then(results => {\n      // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\n      // Bạn có thể làm gì đó với kết quả ở đây.\n      const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\n      return res.render('teacher-manager-activity', {\n        header: 'global-header',\n        footer: 'global-footer',\n        thongbao: 'global-notifications',\n        cls: classlist,\n        years: years.years,\n        curr_year: school_year.year,\n        branch: branch_list,\n        school_atv: school_atv,\n        dep_atv: dep_atv,\n        cls_atv: cls_atv\n      });\n    }).catch(error => {\n      // Xử lý lỗi nếu có\n      console.log(error);\n    });\n  });\n  return router;\n}\nmodule.exports = createTeacherRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","server","checkIfUserLoginRoute","sortStudentName","getNameGlobal","name_global_databases","createTeacherRouter","client","get","req","res","user","session","render","header","footer","thongbao","cls","check","db","collection","find","class","$exists","projection","first_name","last_name","total_score","toArray","length","school_year","findOne","_id","year","pow","Years","years","student_list","curr_year","redirect","e","console","log","branch_list","dep","name","classlist","branch","$in","map","school_atv","content","start_time","limit","dep_atv","collections","listCollections","activityCollections","filter","endsWith","cls_atvs","dummy","Promise","all","then","results","cls_atv","concat","catch","error","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["teacherRoutes.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst server = require('../lib/csdl_google_lib');\r\nconst { checkIfUserLoginRoute, sortStudentName } = require('../lib/function_lib');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nfunction createTeacherRouter(client) {\r\n    // giao vien route\r\n    router.get('/quanlyquyen', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n        return res.render('teacher-manage-student', {\r\n            header: 'global-header',\r\n            footer: 'global-footer',\r\n            thongbao: 'global-notifications',\r\n            cls: user.cls,\r\n        });\r\n    });\r\n    // danh sach bang diem co van\r\n    router.get('/danhsachbangdiem', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            // check neu kho co lop\r\n            const check = await client\r\n                .db(name_global_databases)\r\n                .collection('user_info')\r\n                .find(\r\n                    { class: user.cls[0], 'power.0': { $exists: true } },\r\n                    {\r\n                        projection: {\r\n                            first_name: 1,\r\n                            last_name: 1,\r\n                            class: 1,\r\n                            total_score: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .toArray();\r\n            //\r\n\r\n            if (check.length > 0) {\r\n                const school_year = await client\r\n                    .db(name_global_databases)\r\n                    .collection('school_year')\r\n                    .findOne({}, { projection: { _id: 0, year: 1 } });\r\n                // check user login:\r\n                if (user.pow[1]) {\r\n                    const Years = await client\r\n                        .db(name_global_databases)\r\n                        .collection('classes')\r\n                        .findOne({ _id: user.cls[0] }, { projection: { _id: 0, years: 1 } });\r\n\r\n                    // get all student in staff member class:\r\n                    const student_list = sortStudentName(\r\n                        await client\r\n                            .db(name_global_databases)\r\n                            .collection('user_info')\r\n                            .find(\r\n                                { class: user.cls[0], 'power.0': { $exists: true } },\r\n                                {\r\n                                    projection: {\r\n                                        first_name: 1,\r\n                                        last_name: 1,\r\n                                        class: 1,\r\n                                        total_score: 1,\r\n                                    },\r\n                                },\r\n                            )\r\n                            .toArray(),\r\n                    );\r\n                    // get all student total score from themself:\r\n                    let render = {\r\n                        header: 'global-header',\r\n                        footer: 'global-footer',\r\n                        thongbao: 'global-notifications',\r\n                        student_list: student_list,\r\n                        cls: user.cls,\r\n                        years: Years.years,\r\n                        curr_year: school_year.year,\r\n                    };\r\n\r\n                    return res.render('teacher-grade-list', render);\r\n                } else {\r\n                    // user not staff members\r\n                    // redirect to home\r\n                    return res.redirect('/');\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log('SYSTEM | BAN_CAN_SU_DANH_SACH_BANG_DIEM | ERROR | ', e);\r\n        }\r\n    });\r\n    // quang ly hoat dong\r\n    router.get('/quanlihoatdong', checkIfUserLoginRoute, async (req, res) => {\r\n        const user = req.session.user;\r\n\r\n        const school_year = await client\r\n            .db(name_global_databases)\r\n            .collection('school_year')\r\n            .findOne({}, { projection: { _id: 0, year: 1 } });\r\n\r\n        // check user login:\r\n\r\n        let branch_list = await client\r\n            .db(name_global_databases)\r\n            .collection('branchs')\r\n            .find({ dep: user.dep }, { projection: { _id: 1, name: 1 } })\r\n            .toArray();\r\n\r\n        const classlist = await client\r\n            .db(name_global_databases)\r\n            .collection('classes')\r\n            .find({ branch: { $in: branch_list.map((branch) => branch._id) } }, { projection: { _id: 1, branch: 1 } })\r\n            .toArray();\r\n\r\n        const years = await client\r\n            .db(name_global_databases)\r\n            .collection('classes')\r\n            .findOne({ _id: classlist[0]._id }, { projection: { _id: 0, years: 1 } });\r\n\r\n        // get all activities of school\r\n        const school_atv = await client\r\n            .db(name_global_databases)\r\n            .collection('activities')\r\n            .find(\r\n                {\r\n                    year: school_year.year,\r\n                },\r\n                {\r\n                    projection: {\r\n                        name: 1,\r\n                        content: 1,\r\n                        year: 1,\r\n                        start_time: 1,\r\n                    },\r\n                },\r\n            )\r\n            .limit(10)\r\n            .toArray();\r\n\r\n        // get all activities of dep\r\n        const dep_atv = await client\r\n            .db(user.dep)\r\n            .collection('activities')\r\n            .find(\r\n                {\r\n                    year: school_year.year,\r\n                },\r\n                {\r\n                    projection: {\r\n                        name: 1,\r\n                        content: 1,\r\n                        year: 1,\r\n                        start_time: 1,\r\n                    },\r\n                },\r\n            )\r\n            .limit(10)\r\n            .toArray();\r\n\r\n        // get all activities of class of department\r\n        const collections = await client.db(user.dep).listCollections().toArray();\r\n\r\n        // Filter collections ending with '_activities'\r\n        const activityCollections = collections.filter((collection) => collection.name.endsWith('_activities'));\r\n\r\n        // Loop through activity collections and retrieve all documents\r\n        const cls_atvs = await activityCollections.map(async (collection) => {\r\n            const dummy = await client\r\n                .db(user.dep)\r\n                .collection(collection.name)\r\n                .find(\r\n                    {\r\n                        year: school_year.year,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            name: 1,\r\n                            content: 1,\r\n                            cls: 1,\r\n                            year: 1,\r\n                            start_time: 1,\r\n                        },\r\n                    },\r\n                )\r\n                .limit(10)\r\n                .toArray();\r\n            return dummy;\r\n        });\r\n        Promise.all(cls_atvs)\r\n            .then((results) => {\r\n                // Khi tất cả các promise đã hoàn thành, results sẽ là một mảng chứa kết quả từ mỗi truy vấn.\r\n                // Bạn có thể làm gì đó với kết quả ở đây.\r\n                const cls_atv = [].concat(...results); // Kết hợp kết quả từ các truy vấn vào một mảng duy nhất\r\n                return res.render('teacher-manager-activity', {\r\n                    header: 'global-header',\r\n                    footer: 'global-footer',\r\n                    thongbao: 'global-notifications',\r\n                    cls: classlist,\r\n                    years: years.years,\r\n                    curr_year: school_year.year,\r\n                    branch: branch_list,\r\n                    school_atv: school_atv,\r\n                    dep_atv: dep_atv,\r\n                    cls_atv: cls_atv,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                // Xử lý lỗi nếu có\r\n                console.log(error);\r\n            });\r\n    });\r\n    return router;\r\n}\r\nmodule.exports = createTeacherRouter;\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1719476170727},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"filename\":\"D:\\\\project\\\\web\\\\newCDRL-1\\\\backend\\\\router\\\\studentRouter.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\project\\\\web\\\\newCDRL-1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.3:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst server = require('../lib/csdl_google_lib');\nconst {\n  checkIfUserLoginRoute\n} = require('../lib/function_lib');\nconst {\n  getNameGlobal\n} = require('../lib/mogodb_lib');\nconst name_global_databases = getNameGlobal();\nfunction createStudentRouter(client) {\n  // nhap bang diem route\n  router.get('/nhapdiemdanhgia', checkIfUserLoginRoute, async (req, res) => {\n    const school_year = await client.db(name_global_databases).collection('school_year').findOne({}, {\n      projection: {\n        _id: 0,\n        year: 1,\n        start_day: 1,\n        end_day: 1\n      }\n    });\n    let today = new Date().getTime();\n    let start_day = new Date(school_year.start_day).getTime();\n    let end_day = new Date(school_year.end_day).getTime();\n    let forever_day = new Date('2003-10-18').getTime(); // special date\n\n    // check if end mark time or not\n    if (start_day <= today && (today < end_day || end_day == forever_day)) {\n      return res.render('sinhvien-enter-grades', {\n        header: 'global-header',\n        thongbao: 'global-notifications',\n        footer: 'global-footer'\n      });\n    } else {\n      return res.redirect('/');\n    }\n  });\n\n  // xem bang diem route\n  router.get('/xembangdiem', checkIfUserLoginRoute, async (req, res) => {\n    try {\n      const user = req.session.user;\n      let mssv;\n      if (user.pow[1] || user.pow[2]) {\n        if (user.pow[0]) {\n          if (req.query.mssv) {\n            mssv = req.query.mssv;\n          } else {\n            mssv = req.session.user._id;\n          }\n        } else {\n          mssv = req.query.mssv;\n        }\n      } else {\n        mssv = req.session.user._id;\n      }\n      const schoolYearParam = req.query.schoolYear;\n      let studentTotalScore = await client.db(user.dep).collection(user.cls[0] + '_std_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          img_ids: 1\n        }\n      });\n      let stfTotalScore = await client.db(user.dep).collection(user.cls[0] + '_stf_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          img_ids: 1\n        }\n      });\n      let depTotalScore = await client.db(user.dep).collection(user.cls[0] + '_dep_table').findOne({\n        mssv: mssv,\n        school_year: schoolYearParam\n      }, {\n        projection: {\n          _id: 0,\n          first: 1,\n          second: 1,\n          third: 1,\n          fourth: 1,\n          fifth: 1,\n          total: 1,\n          img_ids: 1\n        }\n      });\n      nulltable = {\n        fifth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        first: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        fourth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        second: ['Chưa chấm', 'Chưa chấm'],\n        third: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\n        total: 'Chưa chấm'\n      };\n      if (!studentTotalScore || !studentTotalScore.fifth) {\n        studentTotalScore = nulltable;\n      }\n      if (!stfTotalScore || !stfTotalScore.fifth) {\n        stfTotalScore = nulltable;\n      }\n      if (!depTotalScore || !depTotalScore.fifth) {\n        depTotalScore = nulltable;\n      }\n      let link_img = [];\n      if (studentTotalScore && studentTotalScore.first || stfTotalScore && stfTotalScore.fifth || depTotalScore && depTotalScore.fifth) {\n        if (studentTotalScore.img_ids) {\n          for (const [key, value] of Object.entries(studentTotalScore.img_ids)) {\n            if (key == 'global') {\n              for (const i of value) {\n                link_img.push(await server.getDriveFileLinkAndDescription(i));\n              }\n            } else {\n              let activitie_info;\n              activitie_info = await client.db(user.dep).collection(`${user.cls[0]}_activities`).findOne({\n                _id: key\n              }, {\n                projection: {\n                  name: 1\n                }\n              });\n              if (!activitie_info) {\n                activitie_info = await client.db(user.dep).collection('activities').findOne({\n                  _id: key\n                }, {\n                  projection: {\n                    name: 1\n                  }\n                });\n                if (!activitie_info) {\n                  activitie_info = await client.db(name_global_databases).collection('activities').findOne({\n                    _id: key\n                  }, {\n                    projection: {\n                      name: 1\n                    }\n                  });\n                }\n              }\n              if (activitie_info) {\n                for (const i of value) {\n                  let imginfo = await server.getDriveFileLinkAndDescription(i);\n                  if (imginfo) {\n                    imginfo.fileDescription = activitie_info.name + '-' + imginfo.fileDescription;\n                    link_img.push(imginfo);\n                  }\n                }\n              }\n            }\n          }\n        }\n        return res.render('sinhvien-view-grades', {\n          header: 'global-header',\n          thongbao: 'global-notifications',\n          footer: 'global-footer',\n          Scorestd: studentTotalScore,\n          Score: stfTotalScore,\n          Scorek: depTotalScore,\n          img: link_img\n        });\n      } else {\n        return res.sendStatus(404);\n      }\n    } catch (err) {\n      console.log('SYSTEM | XEM_BANG_DIEM_ROUTE | ERROR | ', err);\n      return res.status(500).json({\n        error: 'Lỗi hệ thống'\n      });\n    }\n  });\n  return router;\n}\nmodule.exports = createStudentRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","server","checkIfUserLoginRoute","getNameGlobal","name_global_databases","createStudentRouter","client","get","req","res","school_year","db","collection","findOne","projection","_id","year","start_day","end_day","today","Date","getTime","forever_day","render","header","thongbao","footer","redirect","user","session","mssv","pow","query","schoolYearParam","schoolYear","studentTotalScore","dep","cls","first","second","third","fourth","fifth","total","img_ids","stfTotalScore","depTotalScore","nulltable","link_img","key","value","Object","entries","i","push","getDriveFileLinkAndDescription","activitie_info","name","imginfo","fileDescription","Scorestd","Score","Scorek","img","sendStatus","err","console","log","status","json","error","module","exports"],"sourceRoot":"D:\\project\\web\\newCDRL-1\\backend\\router\\","sources":["studentRouter.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst server = require('../lib/csdl_google_lib');\r\nconst { checkIfUserLoginRoute } = require('../lib/function_lib');\r\nconst { getNameGlobal } = require('../lib/mogodb_lib');\r\nconst name_global_databases = getNameGlobal();\r\nfunction createStudentRouter(client) {\r\n    // nhap bang diem route\r\n    router.get('/nhapdiemdanhgia', checkIfUserLoginRoute, async (req, res) => {\r\n        const school_year = await client\r\n            .db(name_global_databases)\r\n            .collection('school_year')\r\n            .findOne(\r\n                {},\r\n                {\r\n                    projection: {\r\n                        _id: 0,\r\n                        year: 1,\r\n                        start_day: 1,\r\n                        end_day: 1,\r\n                    },\r\n                },\r\n            );\r\n        let today = new Date().getTime();\r\n        let start_day = new Date(school_year.start_day).getTime();\r\n        let end_day = new Date(school_year.end_day).getTime();\r\n        let forever_day = new Date('2003-10-18').getTime(); // special date\r\n\r\n        // check if end mark time or not\r\n        if (start_day <= today && (today < end_day || end_day == forever_day)) {\r\n            return res.render('sinhvien-enter-grades', {\r\n                header: 'global-header',\r\n                thongbao: 'global-notifications',\r\n                footer: 'global-footer',\r\n            });\r\n        } else {\r\n            return res.redirect('/');\r\n        }\r\n    });\r\n\r\n    // xem bang diem route\r\n    router.get('/xembangdiem', checkIfUserLoginRoute, async (req, res) => {\r\n        try {\r\n            const user = req.session.user;\r\n            let mssv;\r\n            if (user.pow[1] || user.pow[2]) {\r\n                if (user.pow[0]) {\r\n                    if (req.query.mssv) {\r\n                        mssv = req.query.mssv;\r\n                    } else {\r\n                        mssv = req.session.user._id;\r\n                    }\r\n                } else {\r\n                    mssv = req.query.mssv;\r\n                }\r\n            } else {\r\n                mssv = req.session.user._id;\r\n            }\r\n            const schoolYearParam = req.query.schoolYear;\r\n            let studentTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(user.cls[0] + '_std_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            img_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n            let stfTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(user.cls[0] + '_stf_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            img_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n\r\n            let depTotalScore = await client\r\n                .db(user.dep)\r\n                .collection(user.cls[0] + '_dep_table')\r\n                .findOne(\r\n                    {\r\n                        mssv: mssv,\r\n                        school_year: schoolYearParam,\r\n                    },\r\n                    {\r\n                        projection: {\r\n                            _id: 0,\r\n                            first: 1,\r\n                            second: 1,\r\n                            third: 1,\r\n                            fourth: 1,\r\n                            fifth: 1,\r\n                            total: 1,\r\n                            img_ids: 1,\r\n                        },\r\n                    },\r\n                );\r\n            nulltable = {\r\n                fifth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                first: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                fourth: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                second: ['Chưa chấm', 'Chưa chấm'],\r\n                third: ['Chưa chấm', 'Chưa chấm', 'Chưa chấm'],\r\n                total: 'Chưa chấm',\r\n            };\r\n            if (!studentTotalScore || !studentTotalScore.fifth) {\r\n                studentTotalScore = nulltable;\r\n            }\r\n            if (!stfTotalScore || !stfTotalScore.fifth) {\r\n                stfTotalScore = nulltable;\r\n            }\r\n            if (!depTotalScore || !depTotalScore.fifth) {\r\n                depTotalScore = nulltable;\r\n            }\r\n            let link_img = [];\r\n            if (\r\n                (studentTotalScore && studentTotalScore.first) ||\r\n                (stfTotalScore && stfTotalScore.fifth) ||\r\n                (depTotalScore && depTotalScore.fifth)\r\n            ) {\r\n                if (studentTotalScore.img_ids) {\r\n                    for (const [key, value] of Object.entries(studentTotalScore.img_ids)) {\r\n                        if (key == 'global') {\r\n                            for (const i of value) {\r\n                                link_img.push(await server.getDriveFileLinkAndDescription(i));\r\n                            }\r\n                        } else {\r\n                            let activitie_info;\r\n                            activitie_info = await client\r\n                                .db(user.dep)\r\n                                .collection(`${user.cls[0]}_activities`)\r\n                                .findOne(\r\n                                    {\r\n                                        _id: key,\r\n                                    },\r\n                                    { projection: { name: 1 } },\r\n                                );\r\n                            if (!activitie_info) {\r\n                                activitie_info = await client\r\n                                    .db(user.dep)\r\n                                    .collection('activities')\r\n                                    .findOne(\r\n                                        {\r\n                                            _id: key,\r\n                                        },\r\n                                        { projection: { name: 1 } },\r\n                                    );\r\n                                if (!activitie_info) {\r\n                                    activitie_info = await client\r\n                                        .db(name_global_databases)\r\n                                        .collection('activities')\r\n                                        .findOne(\r\n                                            {\r\n                                                _id: key,\r\n                                            },\r\n                                            { projection: { name: 1 } },\r\n                                        );\r\n                                }\r\n                            }\r\n                            if (activitie_info) {\r\n                                for (const i of value) {\r\n                                    let imginfo = await server.getDriveFileLinkAndDescription(i);\r\n                                    if (imginfo) {\r\n                                        imginfo.fileDescription = activitie_info.name + '-' + imginfo.fileDescription;\r\n                                        link_img.push(imginfo);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return res.render('sinhvien-view-grades', {\r\n                    header: 'global-header',\r\n                    thongbao: 'global-notifications',\r\n                    footer: 'global-footer',\r\n                    Scorestd: studentTotalScore,\r\n                    Score: stfTotalScore,\r\n                    Scorek: depTotalScore,\r\n                    img: link_img,\r\n                });\r\n            } else {\r\n                return res.sendStatus(404);\r\n            }\r\n        } catch (err) {\r\n            console.log('SYSTEM | XEM_BANG_DIEM_ROUTE | ERROR | ', err);\r\n            return res.status(500).json({ error: 'Lỗi hệ thống' });\r\n        }\r\n    });\r\n\r\n    return router;\r\n}\r\nmodule.exports = createStudentRouter;\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1706008163942}}